#include <stdint.h>
#include "system_stm32f4xx.h"
#include "stm32f407xx.h"
#include "stm32f4xx.h"
#include "Helpers/logger.h"


LogLevel system_log_level=LOG_LEVEL_DEBUG;

uint32_t SystemCoreClock= 72000000;// 72MHz

// HCLK = 72Mhz
// PLL : M=4, N=72, P=2 , Q=3
// APB1=2
// APB2=1

static void configure_clock(void)
{

	// set flash latency for 72MHz or 3 CPU cycles.
	MODIFY_REG(FLASH->ACR,FLASH_ACR_LATENCY,_VAL2FLD(FLASH_ACR_LATENCY,FLASH_ACR_LATENCY_2WS));//FLASH_ACR_LATENCY_2WS<<FLASH_ACR_LATENCY_Pos

	// Enable HSE
	SET_BIT(RCC->CR,RCC_CR_HSEON);

	// wait until HSE is stable
	while(!READ_BIT(RCC->CR,RCC_CR_HSERDY));

	// configure PLL
	MODIFY_REG(RCC->PLLCFGR,
			RCC_PLLCFGR_PLLM|
			RCC_PLLCFGR_PLLN|
			RCC_PLLCFGR_PLLP|
			RCC_PLLCFGR_PLLSRC|
			RCC_PLLCFGR_PLLQ,
			_VAL2FLD(RCC_PLLCFGR_PLLM,4)| // M: 4
			_VAL2FLD(RCC_PLLCFGR_PLLN,72)|// N: 72
			_VAL2FLD(RCC_PLLCFGR_PLLP,0)| // P: 2
			_VAL2FLD(RCC_PLLCFGR_PLLSRC,1)| // SRC: 1=> HSE
			_VAL2FLD(RCC_PLLCFGR_PLLQ,3) // Q:3
			);

	// start PLL
	SET_BIT(RCC->CR,RCC_CR_PLLON);

	// wait until PLL is stable
	while(!READ_BIT(RCC->CR,RCC_CR_PLLRDY));

	// switch system clock to PLL
	MODIFY_REG(RCC->CFGR,RCC_CFGR_SW,_VAL2FLD(RCC_CFGR_SW,RCC_CFGR_SW_PLL));

	// set APB1 prescaler
	MODIFY_REG(RCC->CFGR,RCC_CFGR_PPRE1,_VAL2FLD(RCC_CFGR_PPRE1,4)); // APB1: 2

	// wait until PLL is used
	while(READ_BIT(RCC->CFGR,RCC_CFGR_SWS)!= RCC_CFGR_SWS_PLL);

	// disable HSI
	CLEAR_BIT(RCC->CR,RCC_CR_HSION);


}

static void configure_mco1(void){
	// Set MCO1 output to PLL
	MODIFY_REG(RCC->CFGR,
			RCC_CFGR_MCO1|
			RCC_CFGR_MCO1PRE,
			_VAL2FLD(RCC_CFGR_MCO1,3)|// MCO1 => PLL
			_VAL2FLD(RCC_CFGR_MCO1PRE,0) // MCO1_PRESCALER= 0
			);

	// Enable GPIOA (MCO1=> PA8)
	RCC->AHB1ENR


//	// set PA8 gpio speed
//	MODIFY_REG(GPIOA->OSPEEDR,
//			GPIO_OSPEEDER_OSPEEDR8,
//			_VAL2FLD(GPIO_OSPEEDER_OSPEEDR8,1)); //GPIO_OSPEEDER_OSPEEDR8 : 1 (MEDIUM_SPEED)
//
//	// ser PA8 to alternate function mode
//	MODIFY_REG(GPIOA->MODER,
//			GPIO_MODER_MODER8,
//			_VAL2FLD(GPIO_MODER_MODER8,2));
}


void SystemInit(void){
	configure_mco1();
	configure_clock();
}
