
USB_Device.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001310  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000088  080014a0  080014a0  000114a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001528  08001528  00020060  2**0
                  CONTENTS
  4 .ARM          00000000  08001528  08001528  00020060  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001528  08001528  00020060  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001528  08001528  00011528  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800152c  0800152c  0001152c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000060  20000000  08001530  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020060  2**0
                  CONTENTS
 10 .bss          0000016c  20000060  20000060  00020060  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  200001cc  200001cc  00020060  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020060  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  00020090  2**0
                  CONTENTS, READONLY
 14 .debug_info   0000106d  00000000  00000000  000200d3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 000004a4  00000000  00000000  00021140  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 000000d0  00000000  00000000  000215e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 0000008a  00000000  00000000  000216b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00019008  00000000  00000000  00021742  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00001350  00000000  00000000  0003a74a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0008c299  00000000  00000000  0003ba9a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00000af8  00000000  00000000  000c7d34  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000048  00000000  00000000  000c882c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000060 	.word	0x20000060
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08001488 	.word	0x08001488

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000064 	.word	0x20000064
 80001cc:	08001488 	.word	0x08001488

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8000270:	b480      	push	{r7}
 8000272:	b083      	sub	sp, #12
 8000274:	af00      	add	r7, sp, #0
 8000276:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000278:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800027c:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 8000280:	f003 0301 	and.w	r3, r3, #1
 8000284:	2b00      	cmp	r3, #0
 8000286:	d013      	beq.n	80002b0 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 8000288:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800028c:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 8000290:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000294:	2b00      	cmp	r3, #0
 8000296:	d00b      	beq.n	80002b0 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 8000298:	e000      	b.n	800029c <ITM_SendChar+0x2c>
    {
      __NOP();
 800029a:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 800029c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002a0:	681b      	ldr	r3, [r3, #0]
 80002a2:	2b00      	cmp	r3, #0
 80002a4:	d0f9      	beq.n	800029a <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 80002a6:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002aa:	687a      	ldr	r2, [r7, #4]
 80002ac:	b2d2      	uxtb	r2, r2
 80002ae:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 80002b0:	687b      	ldr	r3, [r7, #4]
}
 80002b2:	4618      	mov	r0, r3
 80002b4:	370c      	adds	r7, #12
 80002b6:	46bd      	mov	sp, r7
 80002b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002bc:	4770      	bx	lr

080002be <_write>:

/** \brief Redirects `printf()` output to the serial wire out (SWO).
 * This function overrides a weak function symbol and is not to be used directly.
 */
int _write(int file, char *ptr, int len)
{
 80002be:	b580      	push	{r7, lr}
 80002c0:	b086      	sub	sp, #24
 80002c2:	af00      	add	r7, sp, #0
 80002c4:	60f8      	str	r0, [r7, #12]
 80002c6:	60b9      	str	r1, [r7, #8]
 80002c8:	607a      	str	r2, [r7, #4]
  int i=0;
 80002ca:	2300      	movs	r3, #0
 80002cc:	617b      	str	r3, [r7, #20]
  for(i=0 ; i<len ; i++)
 80002ce:	2300      	movs	r3, #0
 80002d0:	617b      	str	r3, [r7, #20]
 80002d2:	e009      	b.n	80002e8 <_write+0x2a>
    ITM_SendChar((*ptr++));
 80002d4:	68bb      	ldr	r3, [r7, #8]
 80002d6:	1c5a      	adds	r2, r3, #1
 80002d8:	60ba      	str	r2, [r7, #8]
 80002da:	781b      	ldrb	r3, [r3, #0]
 80002dc:	4618      	mov	r0, r3
 80002de:	f7ff ffc7 	bl	8000270 <ITM_SendChar>
  for(i=0 ; i<len ; i++)
 80002e2:	697b      	ldr	r3, [r7, #20]
 80002e4:	3301      	adds	r3, #1
 80002e6:	617b      	str	r3, [r7, #20]
 80002e8:	697a      	ldr	r2, [r7, #20]
 80002ea:	687b      	ldr	r3, [r7, #4]
 80002ec:	429a      	cmp	r2, r3
 80002ee:	dbf1      	blt.n	80002d4 <_write+0x16>

  return len;
 80002f0:	687b      	ldr	r3, [r7, #4]
}
 80002f2:	4618      	mov	r0, r3
 80002f4:	3718      	adds	r7, #24
 80002f6:	46bd      	mov	sp, r7
 80002f8:	bd80      	pop	{r7, pc}
	...

080002fc <_get_log_level_string>:

char const * const _get_log_level_string(LogLevel const log_level)
{
 80002fc:	b480      	push	{r7}
 80002fe:	b083      	sub	sp, #12
 8000300:	af00      	add	r7, sp, #0
 8000302:	4603      	mov	r3, r0
 8000304:	71fb      	strb	r3, [r7, #7]
    switch(log_level)
 8000306:	79fb      	ldrb	r3, [r7, #7]
 8000308:	2b02      	cmp	r3, #2
 800030a:	d00a      	beq.n	8000322 <_get_log_level_string+0x26>
 800030c:	2b02      	cmp	r3, #2
 800030e:	dc0a      	bgt.n	8000326 <_get_log_level_string+0x2a>
 8000310:	2b00      	cmp	r3, #0
 8000312:	d002      	beq.n	800031a <_get_log_level_string+0x1e>
 8000314:	2b01      	cmp	r3, #1
 8000316:	d002      	beq.n	800031e <_get_log_level_string+0x22>
 8000318:	e005      	b.n	8000326 <_get_log_level_string+0x2a>
    {
        case LOG_LEVEL_ERROR:
            return "ERROR";
 800031a:	4b06      	ldr	r3, [pc, #24]	; (8000334 <_get_log_level_string+0x38>)
 800031c:	e003      	b.n	8000326 <_get_log_level_string+0x2a>
        case LOG_LEVEL_INFORMATION:
            return "INFO";
 800031e:	4b06      	ldr	r3, [pc, #24]	; (8000338 <_get_log_level_string+0x3c>)
 8000320:	e001      	b.n	8000326 <_get_log_level_string+0x2a>
        case LOG_LEVEL_DEBUG:
            return "DEBUG";
 8000322:	4b06      	ldr	r3, [pc, #24]	; (800033c <_get_log_level_string+0x40>)
 8000324:	e7ff      	b.n	8000326 <_get_log_level_string+0x2a>
    }
}
 8000326:	4618      	mov	r0, r3
 8000328:	370c      	adds	r7, #12
 800032a:	46bd      	mov	sp, r7
 800032c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000330:	4770      	bx	lr
 8000332:	bf00      	nop
 8000334:	080014a0 	.word	0x080014a0
 8000338:	080014a8 	.word	0x080014a8
 800033c:	080014b0 	.word	0x080014b0

08000340 <_log>:

static void _log(LogLevel const log_level, char const * const format, va_list args)
{
 8000340:	b580      	push	{r7, lr}
 8000342:	b084      	sub	sp, #16
 8000344:	af00      	add	r7, sp, #0
 8000346:	4603      	mov	r3, r0
 8000348:	60b9      	str	r1, [r7, #8]
 800034a:	607a      	str	r2, [r7, #4]
 800034c:	73fb      	strb	r3, [r7, #15]
    if (log_level > system_log_level)
 800034e:	4b0f      	ldr	r3, [pc, #60]	; (800038c <_log+0x4c>)
 8000350:	781b      	ldrb	r3, [r3, #0]
 8000352:	7bfa      	ldrb	r2, [r7, #15]
 8000354:	429a      	cmp	r2, r3
 8000356:	d814      	bhi.n	8000382 <_log+0x42>
        return;

	printf("[%s] ", _get_log_level_string(log_level));
 8000358:	7bfb      	ldrb	r3, [r7, #15]
 800035a:	4618      	mov	r0, r3
 800035c:	f7ff ffce 	bl	80002fc <_get_log_level_string>
 8000360:	4603      	mov	r3, r0
 8000362:	4619      	mov	r1, r3
 8000364:	480a      	ldr	r0, [pc, #40]	; (8000390 <_log+0x50>)
 8000366:	f000 fc83 	bl	8000c70 <iprintf>
	vfprintf(stdout, format, args);
 800036a:	4b0a      	ldr	r3, [pc, #40]	; (8000394 <_log+0x54>)
 800036c:	681b      	ldr	r3, [r3, #0]
 800036e:	689b      	ldr	r3, [r3, #8]
 8000370:	687a      	ldr	r2, [r7, #4]
 8000372:	68b9      	ldr	r1, [r7, #8]
 8000374:	4618      	mov	r0, r3
 8000376:	f000 fa1f 	bl	80007b8 <vfiprintf>
	printf("\n");
 800037a:	200a      	movs	r0, #10
 800037c:	f000 fc8a 	bl	8000c94 <putchar>
 8000380:	e000      	b.n	8000384 <_log+0x44>
        return;
 8000382:	bf00      	nop
}
 8000384:	3710      	adds	r7, #16
 8000386:	46bd      	mov	sp, r7
 8000388:	bd80      	pop	{r7, pc}
 800038a:	bf00      	nop
 800038c:	20000000 	.word	0x20000000
 8000390:	080014b8 	.word	0x080014b8
 8000394:	2000005c 	.word	0x2000005c

08000398 <log_info>:
    _log(LOG_LEVEL_ERROR, format, args);
    va_end(args);
}

void log_info(char const * const format, ...)
{
 8000398:	b40f      	push	{r0, r1, r2, r3}
 800039a:	b580      	push	{r7, lr}
 800039c:	b082      	sub	sp, #8
 800039e:	af00      	add	r7, sp, #0
    va_list args;
	va_start(args, format);
 80003a0:	f107 0314 	add.w	r3, r7, #20
 80003a4:	607b      	str	r3, [r7, #4]
    _log(LOG_LEVEL_INFORMATION, format, args);
 80003a6:	687a      	ldr	r2, [r7, #4]
 80003a8:	6939      	ldr	r1, [r7, #16]
 80003aa:	2001      	movs	r0, #1
 80003ac:	f7ff ffc8 	bl	8000340 <_log>
    va_end(args);
}
 80003b0:	bf00      	nop
 80003b2:	3708      	adds	r7, #8
 80003b4:	46bd      	mov	sp, r7
 80003b6:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80003ba:	b004      	add	sp, #16
 80003bc:	4770      	bx	lr
	...

080003c0 <main>:
#include "stm32f4xx.h"
#include "Helpers/logger.h"

int main(void)
{
 80003c0:	b580      	push	{r7, lr}
 80003c2:	af00      	add	r7, sp, #0
	log_info("Program entry point");
 80003c4:	4801      	ldr	r0, [pc, #4]	; (80003cc <main+0xc>)
 80003c6:	f7ff ffe7 	bl	8000398 <log_info>

    /* Loop forever */
	for(;;);
 80003ca:	e7fe      	b.n	80003ca <main+0xa>
 80003cc:	080014e0 	.word	0x080014e0

080003d0 <configure_clock>:
// PLL : M=4, N=72, P=2 , Q=3
// APB1=2
// APB2=1

static void configure_clock(void)
{
 80003d0:	b480      	push	{r7}
 80003d2:	af00      	add	r7, sp, #0

	// set flash latency for 72MHz or 3 CPU cycles.
	MODIFY_REG(FLASH->ACR,FLASH_ACR_LATENCY,_VAL2FLD(FLASH_ACR_LATENCY,FLASH_ACR_LATENCY_2WS));//FLASH_ACR_LATENCY_2WS<<FLASH_ACR_LATENCY_Pos
 80003d4:	4b25      	ldr	r3, [pc, #148]	; (800046c <configure_clock+0x9c>)
 80003d6:	681b      	ldr	r3, [r3, #0]
 80003d8:	f023 0307 	bic.w	r3, r3, #7
 80003dc:	4a23      	ldr	r2, [pc, #140]	; (800046c <configure_clock+0x9c>)
 80003de:	f043 0302 	orr.w	r3, r3, #2
 80003e2:	6013      	str	r3, [r2, #0]

	// Enable HSE
	SET_BIT(RCC->CR,RCC_CR_HSEON);
 80003e4:	4b22      	ldr	r3, [pc, #136]	; (8000470 <configure_clock+0xa0>)
 80003e6:	681b      	ldr	r3, [r3, #0]
 80003e8:	4a21      	ldr	r2, [pc, #132]	; (8000470 <configure_clock+0xa0>)
 80003ea:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80003ee:	6013      	str	r3, [r2, #0]

	// wait until HSE is stable
	while(!READ_BIT(RCC->CR,RCC_CR_HSERDY));
 80003f0:	bf00      	nop
 80003f2:	4b1f      	ldr	r3, [pc, #124]	; (8000470 <configure_clock+0xa0>)
 80003f4:	681b      	ldr	r3, [r3, #0]
 80003f6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80003fa:	2b00      	cmp	r3, #0
 80003fc:	d0f9      	beq.n	80003f2 <configure_clock+0x22>

	// configure PLL
	MODIFY_REG(RCC->PLLCFGR,
 80003fe:	4b1c      	ldr	r3, [pc, #112]	; (8000470 <configure_clock+0xa0>)
 8000400:	685b      	ldr	r3, [r3, #4]
 8000402:	4a1c      	ldr	r2, [pc, #112]	; (8000474 <configure_clock+0xa4>)
 8000404:	401a      	ands	r2, r3
 8000406:	491a      	ldr	r1, [pc, #104]	; (8000470 <configure_clock+0xa0>)
 8000408:	4b1b      	ldr	r3, [pc, #108]	; (8000478 <configure_clock+0xa8>)
 800040a:	4313      	orrs	r3, r2
 800040c:	604b      	str	r3, [r1, #4]
			_VAL2FLD(RCC_PLLCFGR_PLLSRC,1)| // SRC: 1=> HSE
			_VAL2FLD(RCC_PLLCFGR_PLLQ,3) // Q:3
			);

	// start PLL
	SET_BIT(RCC->CR,RCC_CR_PLLON);
 800040e:	4b18      	ldr	r3, [pc, #96]	; (8000470 <configure_clock+0xa0>)
 8000410:	681b      	ldr	r3, [r3, #0]
 8000412:	4a17      	ldr	r2, [pc, #92]	; (8000470 <configure_clock+0xa0>)
 8000414:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000418:	6013      	str	r3, [r2, #0]

	// wait until PLL is stable
	while(!READ_BIT(RCC->CR,RCC_CR_PLLRDY));
 800041a:	bf00      	nop
 800041c:	4b14      	ldr	r3, [pc, #80]	; (8000470 <configure_clock+0xa0>)
 800041e:	681b      	ldr	r3, [r3, #0]
 8000420:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000424:	2b00      	cmp	r3, #0
 8000426:	d0f9      	beq.n	800041c <configure_clock+0x4c>

	// switch system clock to PLL
	MODIFY_REG(RCC->CFGR,RCC_CFGR_SW,_VAL2FLD(RCC_CFGR_SW,RCC_CFGR_SW_PLL));
 8000428:	4b11      	ldr	r3, [pc, #68]	; (8000470 <configure_clock+0xa0>)
 800042a:	689b      	ldr	r3, [r3, #8]
 800042c:	f023 0303 	bic.w	r3, r3, #3
 8000430:	4a0f      	ldr	r2, [pc, #60]	; (8000470 <configure_clock+0xa0>)
 8000432:	f043 0302 	orr.w	r3, r3, #2
 8000436:	6093      	str	r3, [r2, #8]

	// set APB1 prescaler
	MODIFY_REG(RCC->CFGR,RCC_CFGR_PPRE1,_VAL2FLD(RCC_CFGR_PPRE1,4)); // APB1: 2
 8000438:	4b0d      	ldr	r3, [pc, #52]	; (8000470 <configure_clock+0xa0>)
 800043a:	689b      	ldr	r3, [r3, #8]
 800043c:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8000440:	4a0b      	ldr	r2, [pc, #44]	; (8000470 <configure_clock+0xa0>)
 8000442:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000446:	6093      	str	r3, [r2, #8]

	// wait until PLL is used
	while(READ_BIT(RCC->CFGR,RCC_CFGR_SWS)!= RCC_CFGR_SWS_PLL);
 8000448:	bf00      	nop
 800044a:	4b09      	ldr	r3, [pc, #36]	; (8000470 <configure_clock+0xa0>)
 800044c:	689b      	ldr	r3, [r3, #8]
 800044e:	f003 030c 	and.w	r3, r3, #12
 8000452:	2b08      	cmp	r3, #8
 8000454:	d1f9      	bne.n	800044a <configure_clock+0x7a>

	// disable HSI
	CLEAR_BIT(RCC->CR,RCC_CR_HSION);
 8000456:	4b06      	ldr	r3, [pc, #24]	; (8000470 <configure_clock+0xa0>)
 8000458:	681b      	ldr	r3, [r3, #0]
 800045a:	4a05      	ldr	r2, [pc, #20]	; (8000470 <configure_clock+0xa0>)
 800045c:	f023 0301 	bic.w	r3, r3, #1
 8000460:	6013      	str	r3, [r2, #0]


}
 8000462:	bf00      	nop
 8000464:	46bd      	mov	sp, r7
 8000466:	f85d 7b04 	ldr.w	r7, [sp], #4
 800046a:	4770      	bx	lr
 800046c:	40023c00 	.word	0x40023c00
 8000470:	40023800 	.word	0x40023800
 8000474:	f0bc8000 	.word	0xf0bc8000
 8000478:	03401204 	.word	0x03401204

0800047c <configure_mco1>:

static void configure_mco1(void){
 800047c:	b480      	push	{r7}
 800047e:	af00      	add	r7, sp, #0
	// Set MCO1 output to PLL
	MODIFY_REG(RCC->CFGR,
 8000480:	4b11      	ldr	r3, [pc, #68]	; (80004c8 <configure_mco1+0x4c>)
 8000482:	689b      	ldr	r3, [r3, #8]
 8000484:	f023 63ec 	bic.w	r3, r3, #123731968	; 0x7600000
 8000488:	4a0f      	ldr	r2, [pc, #60]	; (80004c8 <configure_mco1+0x4c>)
 800048a:	f443 03c0 	orr.w	r3, r3, #6291456	; 0x600000
 800048e:	6093      	str	r3, [r2, #8]
			_VAL2FLD(RCC_CFGR_MCO1,3)|// MCO1 => PLL
			_VAL2FLD(RCC_CFGR_MCO1PRE,0) // MCO1_PRESCALER= 0
			);

	// Enable GPIOA (MCO1=> PA8)
	SET_BIT(RCC->AHB1ENR,RCC_AHB1ENR_GPIOAEN);
 8000490:	4b0d      	ldr	r3, [pc, #52]	; (80004c8 <configure_mco1+0x4c>)
 8000492:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000494:	4a0c      	ldr	r2, [pc, #48]	; (80004c8 <configure_mco1+0x4c>)
 8000496:	f043 0301 	orr.w	r3, r3, #1
 800049a:	6313      	str	r3, [r2, #48]	; 0x30

	// Configure PA8 as medium speed
	MODIFY_REG(GPIOA->OSPEEDR,
 800049c:	4b0b      	ldr	r3, [pc, #44]	; (80004cc <configure_mco1+0x50>)
 800049e:	689b      	ldr	r3, [r3, #8]
 80004a0:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80004a4:	4a09      	ldr	r2, [pc, #36]	; (80004cc <configure_mco1+0x50>)
 80004a6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80004aa:	6093      	str	r3, [r2, #8]
			GPIO_OSPEEDR_OSPEED8,
			_VAL2FLD(GPIO_OSPEEDR_OSPEED8,1));

	// Configure PA8 to work in alternate function mode
	MODIFY_REG(GPIOA->MODER,
 80004ac:	4b07      	ldr	r3, [pc, #28]	; (80004cc <configure_mco1+0x50>)
 80004ae:	681b      	ldr	r3, [r3, #0]
 80004b0:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80004b4:	4a05      	ldr	r2, [pc, #20]	; (80004cc <configure_mco1+0x50>)
 80004b6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80004ba:	6013      	str	r3, [r2, #0]
			GPIO_MODER_MODE8,
			_VAL2FLD(GPIO_MODER_MODE8,2));


}
 80004bc:	bf00      	nop
 80004be:	46bd      	mov	sp, r7
 80004c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004c4:	4770      	bx	lr
 80004c6:	bf00      	nop
 80004c8:	40023800 	.word	0x40023800
 80004cc:	40020000 	.word	0x40020000

080004d0 <SystemInit>:


void SystemInit(void){
 80004d0:	b580      	push	{r7, lr}
 80004d2:	af00      	add	r7, sp, #0
	configure_mco1();
 80004d4:	f7ff ffd2 	bl	800047c <configure_mco1>
	configure_clock();
 80004d8:	f7ff ff7a 	bl	80003d0 <configure_clock>
}
 80004dc:	bf00      	nop
 80004de:	bd80      	pop	{r7, pc}

080004e0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004e0:	480d      	ldr	r0, [pc, #52]	; (8000518 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004e2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004e4:	f7ff fff4 	bl	80004d0 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004e8:	480c      	ldr	r0, [pc, #48]	; (800051c <LoopForever+0x6>)
  ldr r1, =_edata
 80004ea:	490d      	ldr	r1, [pc, #52]	; (8000520 <LoopForever+0xa>)
  ldr r2, =_sidata
 80004ec:	4a0d      	ldr	r2, [pc, #52]	; (8000524 <LoopForever+0xe>)
  movs r3, #0
 80004ee:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004f0:	e002      	b.n	80004f8 <LoopCopyDataInit>

080004f2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004f2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004f4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004f6:	3304      	adds	r3, #4

080004f8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004f8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004fa:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004fc:	d3f9      	bcc.n	80004f2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004fe:	4a0a      	ldr	r2, [pc, #40]	; (8000528 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000500:	4c0a      	ldr	r4, [pc, #40]	; (800052c <LoopForever+0x16>)
  movs r3, #0
 8000502:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000504:	e001      	b.n	800050a <LoopFillZerobss>

08000506 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000506:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000508:	3204      	adds	r2, #4

0800050a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800050a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800050c:	d3fb      	bcc.n	8000506 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800050e:	f000 fcef 	bl	8000ef0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000512:	f7ff ff55 	bl	80003c0 <main>

08000516 <LoopForever>:

LoopForever:
  b LoopForever
 8000516:	e7fe      	b.n	8000516 <LoopForever>
  ldr   r0, =_estack
 8000518:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800051c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000520:	20000060 	.word	0x20000060
  ldr r2, =_sidata
 8000524:	08001530 	.word	0x08001530
  ldr r2, =_sbss
 8000528:	20000060 	.word	0x20000060
  ldr r4, =_ebss
 800052c:	200001cc 	.word	0x200001cc

08000530 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000530:	e7fe      	b.n	8000530 <ADC_IRQHandler>

08000532 <__sfputc_r>:
 8000532:	6893      	ldr	r3, [r2, #8]
 8000534:	3b01      	subs	r3, #1
 8000536:	2b00      	cmp	r3, #0
 8000538:	b410      	push	{r4}
 800053a:	6093      	str	r3, [r2, #8]
 800053c:	da08      	bge.n	8000550 <__sfputc_r+0x1e>
 800053e:	6994      	ldr	r4, [r2, #24]
 8000540:	42a3      	cmp	r3, r4
 8000542:	db01      	blt.n	8000548 <__sfputc_r+0x16>
 8000544:	290a      	cmp	r1, #10
 8000546:	d103      	bne.n	8000550 <__sfputc_r+0x1e>
 8000548:	f85d 4b04 	ldr.w	r4, [sp], #4
 800054c:	f000 bbed 	b.w	8000d2a <__swbuf_r>
 8000550:	6813      	ldr	r3, [r2, #0]
 8000552:	1c58      	adds	r0, r3, #1
 8000554:	6010      	str	r0, [r2, #0]
 8000556:	7019      	strb	r1, [r3, #0]
 8000558:	4608      	mov	r0, r1
 800055a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800055e:	4770      	bx	lr

08000560 <__sfputs_r>:
 8000560:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000562:	4606      	mov	r6, r0
 8000564:	460f      	mov	r7, r1
 8000566:	4614      	mov	r4, r2
 8000568:	18d5      	adds	r5, r2, r3
 800056a:	42ac      	cmp	r4, r5
 800056c:	d101      	bne.n	8000572 <__sfputs_r+0x12>
 800056e:	2000      	movs	r0, #0
 8000570:	e007      	b.n	8000582 <__sfputs_r+0x22>
 8000572:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000576:	463a      	mov	r2, r7
 8000578:	4630      	mov	r0, r6
 800057a:	f7ff ffda 	bl	8000532 <__sfputc_r>
 800057e:	1c43      	adds	r3, r0, #1
 8000580:	d1f3      	bne.n	800056a <__sfputs_r+0xa>
 8000582:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08000584 <_vfiprintf_r>:
 8000584:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000588:	460d      	mov	r5, r1
 800058a:	b09d      	sub	sp, #116	; 0x74
 800058c:	4614      	mov	r4, r2
 800058e:	4698      	mov	r8, r3
 8000590:	4606      	mov	r6, r0
 8000592:	b118      	cbz	r0, 800059c <_vfiprintf_r+0x18>
 8000594:	6a03      	ldr	r3, [r0, #32]
 8000596:	b90b      	cbnz	r3, 800059c <_vfiprintf_r+0x18>
 8000598:	f000 fb34 	bl	8000c04 <__sinit>
 800059c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800059e:	07d9      	lsls	r1, r3, #31
 80005a0:	d405      	bmi.n	80005ae <_vfiprintf_r+0x2a>
 80005a2:	89ab      	ldrh	r3, [r5, #12]
 80005a4:	059a      	lsls	r2, r3, #22
 80005a6:	d402      	bmi.n	80005ae <_vfiprintf_r+0x2a>
 80005a8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80005aa:	f000 fcc6 	bl	8000f3a <__retarget_lock_acquire_recursive>
 80005ae:	89ab      	ldrh	r3, [r5, #12]
 80005b0:	071b      	lsls	r3, r3, #28
 80005b2:	d501      	bpl.n	80005b8 <_vfiprintf_r+0x34>
 80005b4:	692b      	ldr	r3, [r5, #16]
 80005b6:	b99b      	cbnz	r3, 80005e0 <_vfiprintf_r+0x5c>
 80005b8:	4629      	mov	r1, r5
 80005ba:	4630      	mov	r0, r6
 80005bc:	f000 fbf2 	bl	8000da4 <__swsetup_r>
 80005c0:	b170      	cbz	r0, 80005e0 <_vfiprintf_r+0x5c>
 80005c2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80005c4:	07dc      	lsls	r4, r3, #31
 80005c6:	d504      	bpl.n	80005d2 <_vfiprintf_r+0x4e>
 80005c8:	f04f 30ff 	mov.w	r0, #4294967295
 80005cc:	b01d      	add	sp, #116	; 0x74
 80005ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80005d2:	89ab      	ldrh	r3, [r5, #12]
 80005d4:	0598      	lsls	r0, r3, #22
 80005d6:	d4f7      	bmi.n	80005c8 <_vfiprintf_r+0x44>
 80005d8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80005da:	f000 fcaf 	bl	8000f3c <__retarget_lock_release_recursive>
 80005de:	e7f3      	b.n	80005c8 <_vfiprintf_r+0x44>
 80005e0:	2300      	movs	r3, #0
 80005e2:	9309      	str	r3, [sp, #36]	; 0x24
 80005e4:	2320      	movs	r3, #32
 80005e6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80005ea:	f8cd 800c 	str.w	r8, [sp, #12]
 80005ee:	2330      	movs	r3, #48	; 0x30
 80005f0:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 80007a4 <_vfiprintf_r+0x220>
 80005f4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80005f8:	f04f 0901 	mov.w	r9, #1
 80005fc:	4623      	mov	r3, r4
 80005fe:	469a      	mov	sl, r3
 8000600:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000604:	b10a      	cbz	r2, 800060a <_vfiprintf_r+0x86>
 8000606:	2a25      	cmp	r2, #37	; 0x25
 8000608:	d1f9      	bne.n	80005fe <_vfiprintf_r+0x7a>
 800060a:	ebba 0b04 	subs.w	fp, sl, r4
 800060e:	d00b      	beq.n	8000628 <_vfiprintf_r+0xa4>
 8000610:	465b      	mov	r3, fp
 8000612:	4622      	mov	r2, r4
 8000614:	4629      	mov	r1, r5
 8000616:	4630      	mov	r0, r6
 8000618:	f7ff ffa2 	bl	8000560 <__sfputs_r>
 800061c:	3001      	adds	r0, #1
 800061e:	f000 80a9 	beq.w	8000774 <_vfiprintf_r+0x1f0>
 8000622:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000624:	445a      	add	r2, fp
 8000626:	9209      	str	r2, [sp, #36]	; 0x24
 8000628:	f89a 3000 	ldrb.w	r3, [sl]
 800062c:	2b00      	cmp	r3, #0
 800062e:	f000 80a1 	beq.w	8000774 <_vfiprintf_r+0x1f0>
 8000632:	2300      	movs	r3, #0
 8000634:	f04f 32ff 	mov.w	r2, #4294967295
 8000638:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800063c:	f10a 0a01 	add.w	sl, sl, #1
 8000640:	9304      	str	r3, [sp, #16]
 8000642:	9307      	str	r3, [sp, #28]
 8000644:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000648:	931a      	str	r3, [sp, #104]	; 0x68
 800064a:	4654      	mov	r4, sl
 800064c:	2205      	movs	r2, #5
 800064e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000652:	4854      	ldr	r0, [pc, #336]	; (80007a4 <_vfiprintf_r+0x220>)
 8000654:	f7ff fdbc 	bl	80001d0 <memchr>
 8000658:	9a04      	ldr	r2, [sp, #16]
 800065a:	b9d8      	cbnz	r0, 8000694 <_vfiprintf_r+0x110>
 800065c:	06d1      	lsls	r1, r2, #27
 800065e:	bf44      	itt	mi
 8000660:	2320      	movmi	r3, #32
 8000662:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000666:	0713      	lsls	r3, r2, #28
 8000668:	bf44      	itt	mi
 800066a:	232b      	movmi	r3, #43	; 0x2b
 800066c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000670:	f89a 3000 	ldrb.w	r3, [sl]
 8000674:	2b2a      	cmp	r3, #42	; 0x2a
 8000676:	d015      	beq.n	80006a4 <_vfiprintf_r+0x120>
 8000678:	9a07      	ldr	r2, [sp, #28]
 800067a:	4654      	mov	r4, sl
 800067c:	2000      	movs	r0, #0
 800067e:	f04f 0c0a 	mov.w	ip, #10
 8000682:	4621      	mov	r1, r4
 8000684:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000688:	3b30      	subs	r3, #48	; 0x30
 800068a:	2b09      	cmp	r3, #9
 800068c:	d94d      	bls.n	800072a <_vfiprintf_r+0x1a6>
 800068e:	b1b0      	cbz	r0, 80006be <_vfiprintf_r+0x13a>
 8000690:	9207      	str	r2, [sp, #28]
 8000692:	e014      	b.n	80006be <_vfiprintf_r+0x13a>
 8000694:	eba0 0308 	sub.w	r3, r0, r8
 8000698:	fa09 f303 	lsl.w	r3, r9, r3
 800069c:	4313      	orrs	r3, r2
 800069e:	9304      	str	r3, [sp, #16]
 80006a0:	46a2      	mov	sl, r4
 80006a2:	e7d2      	b.n	800064a <_vfiprintf_r+0xc6>
 80006a4:	9b03      	ldr	r3, [sp, #12]
 80006a6:	1d19      	adds	r1, r3, #4
 80006a8:	681b      	ldr	r3, [r3, #0]
 80006aa:	9103      	str	r1, [sp, #12]
 80006ac:	2b00      	cmp	r3, #0
 80006ae:	bfbb      	ittet	lt
 80006b0:	425b      	neglt	r3, r3
 80006b2:	f042 0202 	orrlt.w	r2, r2, #2
 80006b6:	9307      	strge	r3, [sp, #28]
 80006b8:	9307      	strlt	r3, [sp, #28]
 80006ba:	bfb8      	it	lt
 80006bc:	9204      	strlt	r2, [sp, #16]
 80006be:	7823      	ldrb	r3, [r4, #0]
 80006c0:	2b2e      	cmp	r3, #46	; 0x2e
 80006c2:	d10c      	bne.n	80006de <_vfiprintf_r+0x15a>
 80006c4:	7863      	ldrb	r3, [r4, #1]
 80006c6:	2b2a      	cmp	r3, #42	; 0x2a
 80006c8:	d134      	bne.n	8000734 <_vfiprintf_r+0x1b0>
 80006ca:	9b03      	ldr	r3, [sp, #12]
 80006cc:	1d1a      	adds	r2, r3, #4
 80006ce:	681b      	ldr	r3, [r3, #0]
 80006d0:	9203      	str	r2, [sp, #12]
 80006d2:	2b00      	cmp	r3, #0
 80006d4:	bfb8      	it	lt
 80006d6:	f04f 33ff 	movlt.w	r3, #4294967295
 80006da:	3402      	adds	r4, #2
 80006dc:	9305      	str	r3, [sp, #20]
 80006de:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 80007b4 <_vfiprintf_r+0x230>
 80006e2:	7821      	ldrb	r1, [r4, #0]
 80006e4:	2203      	movs	r2, #3
 80006e6:	4650      	mov	r0, sl
 80006e8:	f7ff fd72 	bl	80001d0 <memchr>
 80006ec:	b138      	cbz	r0, 80006fe <_vfiprintf_r+0x17a>
 80006ee:	9b04      	ldr	r3, [sp, #16]
 80006f0:	eba0 000a 	sub.w	r0, r0, sl
 80006f4:	2240      	movs	r2, #64	; 0x40
 80006f6:	4082      	lsls	r2, r0
 80006f8:	4313      	orrs	r3, r2
 80006fa:	3401      	adds	r4, #1
 80006fc:	9304      	str	r3, [sp, #16]
 80006fe:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000702:	4829      	ldr	r0, [pc, #164]	; (80007a8 <_vfiprintf_r+0x224>)
 8000704:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000708:	2206      	movs	r2, #6
 800070a:	f7ff fd61 	bl	80001d0 <memchr>
 800070e:	2800      	cmp	r0, #0
 8000710:	d03f      	beq.n	8000792 <_vfiprintf_r+0x20e>
 8000712:	4b26      	ldr	r3, [pc, #152]	; (80007ac <_vfiprintf_r+0x228>)
 8000714:	bb1b      	cbnz	r3, 800075e <_vfiprintf_r+0x1da>
 8000716:	9b03      	ldr	r3, [sp, #12]
 8000718:	3307      	adds	r3, #7
 800071a:	f023 0307 	bic.w	r3, r3, #7
 800071e:	3308      	adds	r3, #8
 8000720:	9303      	str	r3, [sp, #12]
 8000722:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000724:	443b      	add	r3, r7
 8000726:	9309      	str	r3, [sp, #36]	; 0x24
 8000728:	e768      	b.n	80005fc <_vfiprintf_r+0x78>
 800072a:	fb0c 3202 	mla	r2, ip, r2, r3
 800072e:	460c      	mov	r4, r1
 8000730:	2001      	movs	r0, #1
 8000732:	e7a6      	b.n	8000682 <_vfiprintf_r+0xfe>
 8000734:	2300      	movs	r3, #0
 8000736:	3401      	adds	r4, #1
 8000738:	9305      	str	r3, [sp, #20]
 800073a:	4619      	mov	r1, r3
 800073c:	f04f 0c0a 	mov.w	ip, #10
 8000740:	4620      	mov	r0, r4
 8000742:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000746:	3a30      	subs	r2, #48	; 0x30
 8000748:	2a09      	cmp	r2, #9
 800074a:	d903      	bls.n	8000754 <_vfiprintf_r+0x1d0>
 800074c:	2b00      	cmp	r3, #0
 800074e:	d0c6      	beq.n	80006de <_vfiprintf_r+0x15a>
 8000750:	9105      	str	r1, [sp, #20]
 8000752:	e7c4      	b.n	80006de <_vfiprintf_r+0x15a>
 8000754:	fb0c 2101 	mla	r1, ip, r1, r2
 8000758:	4604      	mov	r4, r0
 800075a:	2301      	movs	r3, #1
 800075c:	e7f0      	b.n	8000740 <_vfiprintf_r+0x1bc>
 800075e:	ab03      	add	r3, sp, #12
 8000760:	9300      	str	r3, [sp, #0]
 8000762:	462a      	mov	r2, r5
 8000764:	4b12      	ldr	r3, [pc, #72]	; (80007b0 <_vfiprintf_r+0x22c>)
 8000766:	a904      	add	r1, sp, #16
 8000768:	4630      	mov	r0, r6
 800076a:	f3af 8000 	nop.w
 800076e:	4607      	mov	r7, r0
 8000770:	1c78      	adds	r0, r7, #1
 8000772:	d1d6      	bne.n	8000722 <_vfiprintf_r+0x19e>
 8000774:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000776:	07d9      	lsls	r1, r3, #31
 8000778:	d405      	bmi.n	8000786 <_vfiprintf_r+0x202>
 800077a:	89ab      	ldrh	r3, [r5, #12]
 800077c:	059a      	lsls	r2, r3, #22
 800077e:	d402      	bmi.n	8000786 <_vfiprintf_r+0x202>
 8000780:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000782:	f000 fbdb 	bl	8000f3c <__retarget_lock_release_recursive>
 8000786:	89ab      	ldrh	r3, [r5, #12]
 8000788:	065b      	lsls	r3, r3, #25
 800078a:	f53f af1d 	bmi.w	80005c8 <_vfiprintf_r+0x44>
 800078e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000790:	e71c      	b.n	80005cc <_vfiprintf_r+0x48>
 8000792:	ab03      	add	r3, sp, #12
 8000794:	9300      	str	r3, [sp, #0]
 8000796:	462a      	mov	r2, r5
 8000798:	4b05      	ldr	r3, [pc, #20]	; (80007b0 <_vfiprintf_r+0x22c>)
 800079a:	a904      	add	r1, sp, #16
 800079c:	4630      	mov	r0, r6
 800079e:	f000 f883 	bl	80008a8 <_printf_i>
 80007a2:	e7e4      	b.n	800076e <_vfiprintf_r+0x1ea>
 80007a4:	080014f4 	.word	0x080014f4
 80007a8:	080014fe 	.word	0x080014fe
 80007ac:	00000000 	.word	0x00000000
 80007b0:	08000561 	.word	0x08000561
 80007b4:	080014fa 	.word	0x080014fa

080007b8 <vfiprintf>:
 80007b8:	4613      	mov	r3, r2
 80007ba:	460a      	mov	r2, r1
 80007bc:	4601      	mov	r1, r0
 80007be:	4802      	ldr	r0, [pc, #8]	; (80007c8 <vfiprintf+0x10>)
 80007c0:	6800      	ldr	r0, [r0, #0]
 80007c2:	f7ff bedf 	b.w	8000584 <_vfiprintf_r>
 80007c6:	bf00      	nop
 80007c8:	2000005c 	.word	0x2000005c

080007cc <_printf_common>:
 80007cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80007d0:	4616      	mov	r6, r2
 80007d2:	4699      	mov	r9, r3
 80007d4:	688a      	ldr	r2, [r1, #8]
 80007d6:	690b      	ldr	r3, [r1, #16]
 80007d8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80007dc:	4293      	cmp	r3, r2
 80007de:	bfb8      	it	lt
 80007e0:	4613      	movlt	r3, r2
 80007e2:	6033      	str	r3, [r6, #0]
 80007e4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80007e8:	4607      	mov	r7, r0
 80007ea:	460c      	mov	r4, r1
 80007ec:	b10a      	cbz	r2, 80007f2 <_printf_common+0x26>
 80007ee:	3301      	adds	r3, #1
 80007f0:	6033      	str	r3, [r6, #0]
 80007f2:	6823      	ldr	r3, [r4, #0]
 80007f4:	0699      	lsls	r1, r3, #26
 80007f6:	bf42      	ittt	mi
 80007f8:	6833      	ldrmi	r3, [r6, #0]
 80007fa:	3302      	addmi	r3, #2
 80007fc:	6033      	strmi	r3, [r6, #0]
 80007fe:	6825      	ldr	r5, [r4, #0]
 8000800:	f015 0506 	ands.w	r5, r5, #6
 8000804:	d106      	bne.n	8000814 <_printf_common+0x48>
 8000806:	f104 0a19 	add.w	sl, r4, #25
 800080a:	68e3      	ldr	r3, [r4, #12]
 800080c:	6832      	ldr	r2, [r6, #0]
 800080e:	1a9b      	subs	r3, r3, r2
 8000810:	42ab      	cmp	r3, r5
 8000812:	dc26      	bgt.n	8000862 <_printf_common+0x96>
 8000814:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000818:	1e13      	subs	r3, r2, #0
 800081a:	6822      	ldr	r2, [r4, #0]
 800081c:	bf18      	it	ne
 800081e:	2301      	movne	r3, #1
 8000820:	0692      	lsls	r2, r2, #26
 8000822:	d42b      	bmi.n	800087c <_printf_common+0xb0>
 8000824:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000828:	4649      	mov	r1, r9
 800082a:	4638      	mov	r0, r7
 800082c:	47c0      	blx	r8
 800082e:	3001      	adds	r0, #1
 8000830:	d01e      	beq.n	8000870 <_printf_common+0xa4>
 8000832:	6823      	ldr	r3, [r4, #0]
 8000834:	6922      	ldr	r2, [r4, #16]
 8000836:	f003 0306 	and.w	r3, r3, #6
 800083a:	2b04      	cmp	r3, #4
 800083c:	bf02      	ittt	eq
 800083e:	68e5      	ldreq	r5, [r4, #12]
 8000840:	6833      	ldreq	r3, [r6, #0]
 8000842:	1aed      	subeq	r5, r5, r3
 8000844:	68a3      	ldr	r3, [r4, #8]
 8000846:	bf0c      	ite	eq
 8000848:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800084c:	2500      	movne	r5, #0
 800084e:	4293      	cmp	r3, r2
 8000850:	bfc4      	itt	gt
 8000852:	1a9b      	subgt	r3, r3, r2
 8000854:	18ed      	addgt	r5, r5, r3
 8000856:	2600      	movs	r6, #0
 8000858:	341a      	adds	r4, #26
 800085a:	42b5      	cmp	r5, r6
 800085c:	d11a      	bne.n	8000894 <_printf_common+0xc8>
 800085e:	2000      	movs	r0, #0
 8000860:	e008      	b.n	8000874 <_printf_common+0xa8>
 8000862:	2301      	movs	r3, #1
 8000864:	4652      	mov	r2, sl
 8000866:	4649      	mov	r1, r9
 8000868:	4638      	mov	r0, r7
 800086a:	47c0      	blx	r8
 800086c:	3001      	adds	r0, #1
 800086e:	d103      	bne.n	8000878 <_printf_common+0xac>
 8000870:	f04f 30ff 	mov.w	r0, #4294967295
 8000874:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000878:	3501      	adds	r5, #1
 800087a:	e7c6      	b.n	800080a <_printf_common+0x3e>
 800087c:	18e1      	adds	r1, r4, r3
 800087e:	1c5a      	adds	r2, r3, #1
 8000880:	2030      	movs	r0, #48	; 0x30
 8000882:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000886:	4422      	add	r2, r4
 8000888:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800088c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000890:	3302      	adds	r3, #2
 8000892:	e7c7      	b.n	8000824 <_printf_common+0x58>
 8000894:	2301      	movs	r3, #1
 8000896:	4622      	mov	r2, r4
 8000898:	4649      	mov	r1, r9
 800089a:	4638      	mov	r0, r7
 800089c:	47c0      	blx	r8
 800089e:	3001      	adds	r0, #1
 80008a0:	d0e6      	beq.n	8000870 <_printf_common+0xa4>
 80008a2:	3601      	adds	r6, #1
 80008a4:	e7d9      	b.n	800085a <_printf_common+0x8e>
	...

080008a8 <_printf_i>:
 80008a8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80008ac:	7e0f      	ldrb	r7, [r1, #24]
 80008ae:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80008b0:	2f78      	cmp	r7, #120	; 0x78
 80008b2:	4691      	mov	r9, r2
 80008b4:	4680      	mov	r8, r0
 80008b6:	460c      	mov	r4, r1
 80008b8:	469a      	mov	sl, r3
 80008ba:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80008be:	d807      	bhi.n	80008d0 <_printf_i+0x28>
 80008c0:	2f62      	cmp	r7, #98	; 0x62
 80008c2:	d80a      	bhi.n	80008da <_printf_i+0x32>
 80008c4:	2f00      	cmp	r7, #0
 80008c6:	f000 80d4 	beq.w	8000a72 <_printf_i+0x1ca>
 80008ca:	2f58      	cmp	r7, #88	; 0x58
 80008cc:	f000 80c0 	beq.w	8000a50 <_printf_i+0x1a8>
 80008d0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80008d4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80008d8:	e03a      	b.n	8000950 <_printf_i+0xa8>
 80008da:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80008de:	2b15      	cmp	r3, #21
 80008e0:	d8f6      	bhi.n	80008d0 <_printf_i+0x28>
 80008e2:	a101      	add	r1, pc, #4	; (adr r1, 80008e8 <_printf_i+0x40>)
 80008e4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80008e8:	08000941 	.word	0x08000941
 80008ec:	08000955 	.word	0x08000955
 80008f0:	080008d1 	.word	0x080008d1
 80008f4:	080008d1 	.word	0x080008d1
 80008f8:	080008d1 	.word	0x080008d1
 80008fc:	080008d1 	.word	0x080008d1
 8000900:	08000955 	.word	0x08000955
 8000904:	080008d1 	.word	0x080008d1
 8000908:	080008d1 	.word	0x080008d1
 800090c:	080008d1 	.word	0x080008d1
 8000910:	080008d1 	.word	0x080008d1
 8000914:	08000a59 	.word	0x08000a59
 8000918:	08000981 	.word	0x08000981
 800091c:	08000a13 	.word	0x08000a13
 8000920:	080008d1 	.word	0x080008d1
 8000924:	080008d1 	.word	0x080008d1
 8000928:	08000a7b 	.word	0x08000a7b
 800092c:	080008d1 	.word	0x080008d1
 8000930:	08000981 	.word	0x08000981
 8000934:	080008d1 	.word	0x080008d1
 8000938:	080008d1 	.word	0x080008d1
 800093c:	08000a1b 	.word	0x08000a1b
 8000940:	682b      	ldr	r3, [r5, #0]
 8000942:	1d1a      	adds	r2, r3, #4
 8000944:	681b      	ldr	r3, [r3, #0]
 8000946:	602a      	str	r2, [r5, #0]
 8000948:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800094c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000950:	2301      	movs	r3, #1
 8000952:	e09f      	b.n	8000a94 <_printf_i+0x1ec>
 8000954:	6820      	ldr	r0, [r4, #0]
 8000956:	682b      	ldr	r3, [r5, #0]
 8000958:	0607      	lsls	r7, r0, #24
 800095a:	f103 0104 	add.w	r1, r3, #4
 800095e:	6029      	str	r1, [r5, #0]
 8000960:	d501      	bpl.n	8000966 <_printf_i+0xbe>
 8000962:	681e      	ldr	r6, [r3, #0]
 8000964:	e003      	b.n	800096e <_printf_i+0xc6>
 8000966:	0646      	lsls	r6, r0, #25
 8000968:	d5fb      	bpl.n	8000962 <_printf_i+0xba>
 800096a:	f9b3 6000 	ldrsh.w	r6, [r3]
 800096e:	2e00      	cmp	r6, #0
 8000970:	da03      	bge.n	800097a <_printf_i+0xd2>
 8000972:	232d      	movs	r3, #45	; 0x2d
 8000974:	4276      	negs	r6, r6
 8000976:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800097a:	485a      	ldr	r0, [pc, #360]	; (8000ae4 <_printf_i+0x23c>)
 800097c:	230a      	movs	r3, #10
 800097e:	e012      	b.n	80009a6 <_printf_i+0xfe>
 8000980:	682b      	ldr	r3, [r5, #0]
 8000982:	6820      	ldr	r0, [r4, #0]
 8000984:	1d19      	adds	r1, r3, #4
 8000986:	6029      	str	r1, [r5, #0]
 8000988:	0605      	lsls	r5, r0, #24
 800098a:	d501      	bpl.n	8000990 <_printf_i+0xe8>
 800098c:	681e      	ldr	r6, [r3, #0]
 800098e:	e002      	b.n	8000996 <_printf_i+0xee>
 8000990:	0641      	lsls	r1, r0, #25
 8000992:	d5fb      	bpl.n	800098c <_printf_i+0xe4>
 8000994:	881e      	ldrh	r6, [r3, #0]
 8000996:	4853      	ldr	r0, [pc, #332]	; (8000ae4 <_printf_i+0x23c>)
 8000998:	2f6f      	cmp	r7, #111	; 0x6f
 800099a:	bf0c      	ite	eq
 800099c:	2308      	moveq	r3, #8
 800099e:	230a      	movne	r3, #10
 80009a0:	2100      	movs	r1, #0
 80009a2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80009a6:	6865      	ldr	r5, [r4, #4]
 80009a8:	60a5      	str	r5, [r4, #8]
 80009aa:	2d00      	cmp	r5, #0
 80009ac:	bfa2      	ittt	ge
 80009ae:	6821      	ldrge	r1, [r4, #0]
 80009b0:	f021 0104 	bicge.w	r1, r1, #4
 80009b4:	6021      	strge	r1, [r4, #0]
 80009b6:	b90e      	cbnz	r6, 80009bc <_printf_i+0x114>
 80009b8:	2d00      	cmp	r5, #0
 80009ba:	d04b      	beq.n	8000a54 <_printf_i+0x1ac>
 80009bc:	4615      	mov	r5, r2
 80009be:	fbb6 f1f3 	udiv	r1, r6, r3
 80009c2:	fb03 6711 	mls	r7, r3, r1, r6
 80009c6:	5dc7      	ldrb	r7, [r0, r7]
 80009c8:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80009cc:	4637      	mov	r7, r6
 80009ce:	42bb      	cmp	r3, r7
 80009d0:	460e      	mov	r6, r1
 80009d2:	d9f4      	bls.n	80009be <_printf_i+0x116>
 80009d4:	2b08      	cmp	r3, #8
 80009d6:	d10b      	bne.n	80009f0 <_printf_i+0x148>
 80009d8:	6823      	ldr	r3, [r4, #0]
 80009da:	07de      	lsls	r6, r3, #31
 80009dc:	d508      	bpl.n	80009f0 <_printf_i+0x148>
 80009de:	6923      	ldr	r3, [r4, #16]
 80009e0:	6861      	ldr	r1, [r4, #4]
 80009e2:	4299      	cmp	r1, r3
 80009e4:	bfde      	ittt	le
 80009e6:	2330      	movle	r3, #48	; 0x30
 80009e8:	f805 3c01 	strble.w	r3, [r5, #-1]
 80009ec:	f105 35ff 	addle.w	r5, r5, #4294967295
 80009f0:	1b52      	subs	r2, r2, r5
 80009f2:	6122      	str	r2, [r4, #16]
 80009f4:	f8cd a000 	str.w	sl, [sp]
 80009f8:	464b      	mov	r3, r9
 80009fa:	aa03      	add	r2, sp, #12
 80009fc:	4621      	mov	r1, r4
 80009fe:	4640      	mov	r0, r8
 8000a00:	f7ff fee4 	bl	80007cc <_printf_common>
 8000a04:	3001      	adds	r0, #1
 8000a06:	d14a      	bne.n	8000a9e <_printf_i+0x1f6>
 8000a08:	f04f 30ff 	mov.w	r0, #4294967295
 8000a0c:	b004      	add	sp, #16
 8000a0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000a12:	6823      	ldr	r3, [r4, #0]
 8000a14:	f043 0320 	orr.w	r3, r3, #32
 8000a18:	6023      	str	r3, [r4, #0]
 8000a1a:	4833      	ldr	r0, [pc, #204]	; (8000ae8 <_printf_i+0x240>)
 8000a1c:	2778      	movs	r7, #120	; 0x78
 8000a1e:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000a22:	6823      	ldr	r3, [r4, #0]
 8000a24:	6829      	ldr	r1, [r5, #0]
 8000a26:	061f      	lsls	r7, r3, #24
 8000a28:	f851 6b04 	ldr.w	r6, [r1], #4
 8000a2c:	d402      	bmi.n	8000a34 <_printf_i+0x18c>
 8000a2e:	065f      	lsls	r7, r3, #25
 8000a30:	bf48      	it	mi
 8000a32:	b2b6      	uxthmi	r6, r6
 8000a34:	07df      	lsls	r7, r3, #31
 8000a36:	bf48      	it	mi
 8000a38:	f043 0320 	orrmi.w	r3, r3, #32
 8000a3c:	6029      	str	r1, [r5, #0]
 8000a3e:	bf48      	it	mi
 8000a40:	6023      	strmi	r3, [r4, #0]
 8000a42:	b91e      	cbnz	r6, 8000a4c <_printf_i+0x1a4>
 8000a44:	6823      	ldr	r3, [r4, #0]
 8000a46:	f023 0320 	bic.w	r3, r3, #32
 8000a4a:	6023      	str	r3, [r4, #0]
 8000a4c:	2310      	movs	r3, #16
 8000a4e:	e7a7      	b.n	80009a0 <_printf_i+0xf8>
 8000a50:	4824      	ldr	r0, [pc, #144]	; (8000ae4 <_printf_i+0x23c>)
 8000a52:	e7e4      	b.n	8000a1e <_printf_i+0x176>
 8000a54:	4615      	mov	r5, r2
 8000a56:	e7bd      	b.n	80009d4 <_printf_i+0x12c>
 8000a58:	682b      	ldr	r3, [r5, #0]
 8000a5a:	6826      	ldr	r6, [r4, #0]
 8000a5c:	6961      	ldr	r1, [r4, #20]
 8000a5e:	1d18      	adds	r0, r3, #4
 8000a60:	6028      	str	r0, [r5, #0]
 8000a62:	0635      	lsls	r5, r6, #24
 8000a64:	681b      	ldr	r3, [r3, #0]
 8000a66:	d501      	bpl.n	8000a6c <_printf_i+0x1c4>
 8000a68:	6019      	str	r1, [r3, #0]
 8000a6a:	e002      	b.n	8000a72 <_printf_i+0x1ca>
 8000a6c:	0670      	lsls	r0, r6, #25
 8000a6e:	d5fb      	bpl.n	8000a68 <_printf_i+0x1c0>
 8000a70:	8019      	strh	r1, [r3, #0]
 8000a72:	2300      	movs	r3, #0
 8000a74:	6123      	str	r3, [r4, #16]
 8000a76:	4615      	mov	r5, r2
 8000a78:	e7bc      	b.n	80009f4 <_printf_i+0x14c>
 8000a7a:	682b      	ldr	r3, [r5, #0]
 8000a7c:	1d1a      	adds	r2, r3, #4
 8000a7e:	602a      	str	r2, [r5, #0]
 8000a80:	681d      	ldr	r5, [r3, #0]
 8000a82:	6862      	ldr	r2, [r4, #4]
 8000a84:	2100      	movs	r1, #0
 8000a86:	4628      	mov	r0, r5
 8000a88:	f7ff fba2 	bl	80001d0 <memchr>
 8000a8c:	b108      	cbz	r0, 8000a92 <_printf_i+0x1ea>
 8000a8e:	1b40      	subs	r0, r0, r5
 8000a90:	6060      	str	r0, [r4, #4]
 8000a92:	6863      	ldr	r3, [r4, #4]
 8000a94:	6123      	str	r3, [r4, #16]
 8000a96:	2300      	movs	r3, #0
 8000a98:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000a9c:	e7aa      	b.n	80009f4 <_printf_i+0x14c>
 8000a9e:	6923      	ldr	r3, [r4, #16]
 8000aa0:	462a      	mov	r2, r5
 8000aa2:	4649      	mov	r1, r9
 8000aa4:	4640      	mov	r0, r8
 8000aa6:	47d0      	blx	sl
 8000aa8:	3001      	adds	r0, #1
 8000aaa:	d0ad      	beq.n	8000a08 <_printf_i+0x160>
 8000aac:	6823      	ldr	r3, [r4, #0]
 8000aae:	079b      	lsls	r3, r3, #30
 8000ab0:	d413      	bmi.n	8000ada <_printf_i+0x232>
 8000ab2:	68e0      	ldr	r0, [r4, #12]
 8000ab4:	9b03      	ldr	r3, [sp, #12]
 8000ab6:	4298      	cmp	r0, r3
 8000ab8:	bfb8      	it	lt
 8000aba:	4618      	movlt	r0, r3
 8000abc:	e7a6      	b.n	8000a0c <_printf_i+0x164>
 8000abe:	2301      	movs	r3, #1
 8000ac0:	4632      	mov	r2, r6
 8000ac2:	4649      	mov	r1, r9
 8000ac4:	4640      	mov	r0, r8
 8000ac6:	47d0      	blx	sl
 8000ac8:	3001      	adds	r0, #1
 8000aca:	d09d      	beq.n	8000a08 <_printf_i+0x160>
 8000acc:	3501      	adds	r5, #1
 8000ace:	68e3      	ldr	r3, [r4, #12]
 8000ad0:	9903      	ldr	r1, [sp, #12]
 8000ad2:	1a5b      	subs	r3, r3, r1
 8000ad4:	42ab      	cmp	r3, r5
 8000ad6:	dcf2      	bgt.n	8000abe <_printf_i+0x216>
 8000ad8:	e7eb      	b.n	8000ab2 <_printf_i+0x20a>
 8000ada:	2500      	movs	r5, #0
 8000adc:	f104 0619 	add.w	r6, r4, #25
 8000ae0:	e7f5      	b.n	8000ace <_printf_i+0x226>
 8000ae2:	bf00      	nop
 8000ae4:	08001505 	.word	0x08001505
 8000ae8:	08001516 	.word	0x08001516

08000aec <std>:
 8000aec:	2300      	movs	r3, #0
 8000aee:	b510      	push	{r4, lr}
 8000af0:	4604      	mov	r4, r0
 8000af2:	e9c0 3300 	strd	r3, r3, [r0]
 8000af6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000afa:	6083      	str	r3, [r0, #8]
 8000afc:	8181      	strh	r1, [r0, #12]
 8000afe:	6643      	str	r3, [r0, #100]	; 0x64
 8000b00:	81c2      	strh	r2, [r0, #14]
 8000b02:	6183      	str	r3, [r0, #24]
 8000b04:	4619      	mov	r1, r3
 8000b06:	2208      	movs	r2, #8
 8000b08:	305c      	adds	r0, #92	; 0x5c
 8000b0a:	f000 f9a3 	bl	8000e54 <memset>
 8000b0e:	4b0d      	ldr	r3, [pc, #52]	; (8000b44 <std+0x58>)
 8000b10:	6263      	str	r3, [r4, #36]	; 0x24
 8000b12:	4b0d      	ldr	r3, [pc, #52]	; (8000b48 <std+0x5c>)
 8000b14:	62a3      	str	r3, [r4, #40]	; 0x28
 8000b16:	4b0d      	ldr	r3, [pc, #52]	; (8000b4c <std+0x60>)
 8000b18:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000b1a:	4b0d      	ldr	r3, [pc, #52]	; (8000b50 <std+0x64>)
 8000b1c:	6323      	str	r3, [r4, #48]	; 0x30
 8000b1e:	4b0d      	ldr	r3, [pc, #52]	; (8000b54 <std+0x68>)
 8000b20:	6224      	str	r4, [r4, #32]
 8000b22:	429c      	cmp	r4, r3
 8000b24:	d006      	beq.n	8000b34 <std+0x48>
 8000b26:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8000b2a:	4294      	cmp	r4, r2
 8000b2c:	d002      	beq.n	8000b34 <std+0x48>
 8000b2e:	33d0      	adds	r3, #208	; 0xd0
 8000b30:	429c      	cmp	r4, r3
 8000b32:	d105      	bne.n	8000b40 <std+0x54>
 8000b34:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000b38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000b3c:	f000 b9fc 	b.w	8000f38 <__retarget_lock_init_recursive>
 8000b40:	bd10      	pop	{r4, pc}
 8000b42:	bf00      	nop
 8000b44:	08000ca5 	.word	0x08000ca5
 8000b48:	08000cc7 	.word	0x08000cc7
 8000b4c:	08000cff 	.word	0x08000cff
 8000b50:	08000d23 	.word	0x08000d23
 8000b54:	2000007c 	.word	0x2000007c

08000b58 <stdio_exit_handler>:
 8000b58:	4a02      	ldr	r2, [pc, #8]	; (8000b64 <stdio_exit_handler+0xc>)
 8000b5a:	4903      	ldr	r1, [pc, #12]	; (8000b68 <stdio_exit_handler+0x10>)
 8000b5c:	4803      	ldr	r0, [pc, #12]	; (8000b6c <stdio_exit_handler+0x14>)
 8000b5e:	f000 b869 	b.w	8000c34 <_fwalk_sglue>
 8000b62:	bf00      	nop
 8000b64:	20000004 	.word	0x20000004
 8000b68:	0800123d 	.word	0x0800123d
 8000b6c:	20000010 	.word	0x20000010

08000b70 <cleanup_stdio>:
 8000b70:	6841      	ldr	r1, [r0, #4]
 8000b72:	4b0c      	ldr	r3, [pc, #48]	; (8000ba4 <cleanup_stdio+0x34>)
 8000b74:	4299      	cmp	r1, r3
 8000b76:	b510      	push	{r4, lr}
 8000b78:	4604      	mov	r4, r0
 8000b7a:	d001      	beq.n	8000b80 <cleanup_stdio+0x10>
 8000b7c:	f000 fb5e 	bl	800123c <_fflush_r>
 8000b80:	68a1      	ldr	r1, [r4, #8]
 8000b82:	4b09      	ldr	r3, [pc, #36]	; (8000ba8 <cleanup_stdio+0x38>)
 8000b84:	4299      	cmp	r1, r3
 8000b86:	d002      	beq.n	8000b8e <cleanup_stdio+0x1e>
 8000b88:	4620      	mov	r0, r4
 8000b8a:	f000 fb57 	bl	800123c <_fflush_r>
 8000b8e:	68e1      	ldr	r1, [r4, #12]
 8000b90:	4b06      	ldr	r3, [pc, #24]	; (8000bac <cleanup_stdio+0x3c>)
 8000b92:	4299      	cmp	r1, r3
 8000b94:	d004      	beq.n	8000ba0 <cleanup_stdio+0x30>
 8000b96:	4620      	mov	r0, r4
 8000b98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000b9c:	f000 bb4e 	b.w	800123c <_fflush_r>
 8000ba0:	bd10      	pop	{r4, pc}
 8000ba2:	bf00      	nop
 8000ba4:	2000007c 	.word	0x2000007c
 8000ba8:	200000e4 	.word	0x200000e4
 8000bac:	2000014c 	.word	0x2000014c

08000bb0 <global_stdio_init.part.0>:
 8000bb0:	b510      	push	{r4, lr}
 8000bb2:	4b0b      	ldr	r3, [pc, #44]	; (8000be0 <global_stdio_init.part.0+0x30>)
 8000bb4:	4c0b      	ldr	r4, [pc, #44]	; (8000be4 <global_stdio_init.part.0+0x34>)
 8000bb6:	4a0c      	ldr	r2, [pc, #48]	; (8000be8 <global_stdio_init.part.0+0x38>)
 8000bb8:	601a      	str	r2, [r3, #0]
 8000bba:	4620      	mov	r0, r4
 8000bbc:	2200      	movs	r2, #0
 8000bbe:	2104      	movs	r1, #4
 8000bc0:	f7ff ff94 	bl	8000aec <std>
 8000bc4:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8000bc8:	2201      	movs	r2, #1
 8000bca:	2109      	movs	r1, #9
 8000bcc:	f7ff ff8e 	bl	8000aec <std>
 8000bd0:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8000bd4:	2202      	movs	r2, #2
 8000bd6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000bda:	2112      	movs	r1, #18
 8000bdc:	f7ff bf86 	b.w	8000aec <std>
 8000be0:	200001b4 	.word	0x200001b4
 8000be4:	2000007c 	.word	0x2000007c
 8000be8:	08000b59 	.word	0x08000b59

08000bec <__sfp_lock_acquire>:
 8000bec:	4801      	ldr	r0, [pc, #4]	; (8000bf4 <__sfp_lock_acquire+0x8>)
 8000bee:	f000 b9a4 	b.w	8000f3a <__retarget_lock_acquire_recursive>
 8000bf2:	bf00      	nop
 8000bf4:	200001bd 	.word	0x200001bd

08000bf8 <__sfp_lock_release>:
 8000bf8:	4801      	ldr	r0, [pc, #4]	; (8000c00 <__sfp_lock_release+0x8>)
 8000bfa:	f000 b99f 	b.w	8000f3c <__retarget_lock_release_recursive>
 8000bfe:	bf00      	nop
 8000c00:	200001bd 	.word	0x200001bd

08000c04 <__sinit>:
 8000c04:	b510      	push	{r4, lr}
 8000c06:	4604      	mov	r4, r0
 8000c08:	f7ff fff0 	bl	8000bec <__sfp_lock_acquire>
 8000c0c:	6a23      	ldr	r3, [r4, #32]
 8000c0e:	b11b      	cbz	r3, 8000c18 <__sinit+0x14>
 8000c10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000c14:	f7ff bff0 	b.w	8000bf8 <__sfp_lock_release>
 8000c18:	4b04      	ldr	r3, [pc, #16]	; (8000c2c <__sinit+0x28>)
 8000c1a:	6223      	str	r3, [r4, #32]
 8000c1c:	4b04      	ldr	r3, [pc, #16]	; (8000c30 <__sinit+0x2c>)
 8000c1e:	681b      	ldr	r3, [r3, #0]
 8000c20:	2b00      	cmp	r3, #0
 8000c22:	d1f5      	bne.n	8000c10 <__sinit+0xc>
 8000c24:	f7ff ffc4 	bl	8000bb0 <global_stdio_init.part.0>
 8000c28:	e7f2      	b.n	8000c10 <__sinit+0xc>
 8000c2a:	bf00      	nop
 8000c2c:	08000b71 	.word	0x08000b71
 8000c30:	200001b4 	.word	0x200001b4

08000c34 <_fwalk_sglue>:
 8000c34:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000c38:	4607      	mov	r7, r0
 8000c3a:	4688      	mov	r8, r1
 8000c3c:	4614      	mov	r4, r2
 8000c3e:	2600      	movs	r6, #0
 8000c40:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000c44:	f1b9 0901 	subs.w	r9, r9, #1
 8000c48:	d505      	bpl.n	8000c56 <_fwalk_sglue+0x22>
 8000c4a:	6824      	ldr	r4, [r4, #0]
 8000c4c:	2c00      	cmp	r4, #0
 8000c4e:	d1f7      	bne.n	8000c40 <_fwalk_sglue+0xc>
 8000c50:	4630      	mov	r0, r6
 8000c52:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000c56:	89ab      	ldrh	r3, [r5, #12]
 8000c58:	2b01      	cmp	r3, #1
 8000c5a:	d907      	bls.n	8000c6c <_fwalk_sglue+0x38>
 8000c5c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000c60:	3301      	adds	r3, #1
 8000c62:	d003      	beq.n	8000c6c <_fwalk_sglue+0x38>
 8000c64:	4629      	mov	r1, r5
 8000c66:	4638      	mov	r0, r7
 8000c68:	47c0      	blx	r8
 8000c6a:	4306      	orrs	r6, r0
 8000c6c:	3568      	adds	r5, #104	; 0x68
 8000c6e:	e7e9      	b.n	8000c44 <_fwalk_sglue+0x10>

08000c70 <iprintf>:
 8000c70:	b40f      	push	{r0, r1, r2, r3}
 8000c72:	b507      	push	{r0, r1, r2, lr}
 8000c74:	4906      	ldr	r1, [pc, #24]	; (8000c90 <iprintf+0x20>)
 8000c76:	ab04      	add	r3, sp, #16
 8000c78:	6808      	ldr	r0, [r1, #0]
 8000c7a:	f853 2b04 	ldr.w	r2, [r3], #4
 8000c7e:	6881      	ldr	r1, [r0, #8]
 8000c80:	9301      	str	r3, [sp, #4]
 8000c82:	f7ff fc7f 	bl	8000584 <_vfiprintf_r>
 8000c86:	b003      	add	sp, #12
 8000c88:	f85d eb04 	ldr.w	lr, [sp], #4
 8000c8c:	b004      	add	sp, #16
 8000c8e:	4770      	bx	lr
 8000c90:	2000005c 	.word	0x2000005c

08000c94 <putchar>:
 8000c94:	4b02      	ldr	r3, [pc, #8]	; (8000ca0 <putchar+0xc>)
 8000c96:	4601      	mov	r1, r0
 8000c98:	6818      	ldr	r0, [r3, #0]
 8000c9a:	6882      	ldr	r2, [r0, #8]
 8000c9c:	f000 bb58 	b.w	8001350 <_putc_r>
 8000ca0:	2000005c 	.word	0x2000005c

08000ca4 <__sread>:
 8000ca4:	b510      	push	{r4, lr}
 8000ca6:	460c      	mov	r4, r1
 8000ca8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cac:	f000 f8fc 	bl	8000ea8 <_read_r>
 8000cb0:	2800      	cmp	r0, #0
 8000cb2:	bfab      	itete	ge
 8000cb4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000cb6:	89a3      	ldrhlt	r3, [r4, #12]
 8000cb8:	181b      	addge	r3, r3, r0
 8000cba:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000cbe:	bfac      	ite	ge
 8000cc0:	6563      	strge	r3, [r4, #84]	; 0x54
 8000cc2:	81a3      	strhlt	r3, [r4, #12]
 8000cc4:	bd10      	pop	{r4, pc}

08000cc6 <__swrite>:
 8000cc6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000cca:	461f      	mov	r7, r3
 8000ccc:	898b      	ldrh	r3, [r1, #12]
 8000cce:	05db      	lsls	r3, r3, #23
 8000cd0:	4605      	mov	r5, r0
 8000cd2:	460c      	mov	r4, r1
 8000cd4:	4616      	mov	r6, r2
 8000cd6:	d505      	bpl.n	8000ce4 <__swrite+0x1e>
 8000cd8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cdc:	2302      	movs	r3, #2
 8000cde:	2200      	movs	r2, #0
 8000ce0:	f000 f8d0 	bl	8000e84 <_lseek_r>
 8000ce4:	89a3      	ldrh	r3, [r4, #12]
 8000ce6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000cea:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000cee:	81a3      	strh	r3, [r4, #12]
 8000cf0:	4632      	mov	r2, r6
 8000cf2:	463b      	mov	r3, r7
 8000cf4:	4628      	mov	r0, r5
 8000cf6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000cfa:	f000 b8e7 	b.w	8000ecc <_write_r>

08000cfe <__sseek>:
 8000cfe:	b510      	push	{r4, lr}
 8000d00:	460c      	mov	r4, r1
 8000d02:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d06:	f000 f8bd 	bl	8000e84 <_lseek_r>
 8000d0a:	1c43      	adds	r3, r0, #1
 8000d0c:	89a3      	ldrh	r3, [r4, #12]
 8000d0e:	bf15      	itete	ne
 8000d10:	6560      	strne	r0, [r4, #84]	; 0x54
 8000d12:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000d16:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000d1a:	81a3      	strheq	r3, [r4, #12]
 8000d1c:	bf18      	it	ne
 8000d1e:	81a3      	strhne	r3, [r4, #12]
 8000d20:	bd10      	pop	{r4, pc}

08000d22 <__sclose>:
 8000d22:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d26:	f000 b89d 	b.w	8000e64 <_close_r>

08000d2a <__swbuf_r>:
 8000d2a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d2c:	460e      	mov	r6, r1
 8000d2e:	4614      	mov	r4, r2
 8000d30:	4605      	mov	r5, r0
 8000d32:	b118      	cbz	r0, 8000d3c <__swbuf_r+0x12>
 8000d34:	6a03      	ldr	r3, [r0, #32]
 8000d36:	b90b      	cbnz	r3, 8000d3c <__swbuf_r+0x12>
 8000d38:	f7ff ff64 	bl	8000c04 <__sinit>
 8000d3c:	69a3      	ldr	r3, [r4, #24]
 8000d3e:	60a3      	str	r3, [r4, #8]
 8000d40:	89a3      	ldrh	r3, [r4, #12]
 8000d42:	071a      	lsls	r2, r3, #28
 8000d44:	d525      	bpl.n	8000d92 <__swbuf_r+0x68>
 8000d46:	6923      	ldr	r3, [r4, #16]
 8000d48:	b31b      	cbz	r3, 8000d92 <__swbuf_r+0x68>
 8000d4a:	6823      	ldr	r3, [r4, #0]
 8000d4c:	6922      	ldr	r2, [r4, #16]
 8000d4e:	1a98      	subs	r0, r3, r2
 8000d50:	6963      	ldr	r3, [r4, #20]
 8000d52:	b2f6      	uxtb	r6, r6
 8000d54:	4283      	cmp	r3, r0
 8000d56:	4637      	mov	r7, r6
 8000d58:	dc04      	bgt.n	8000d64 <__swbuf_r+0x3a>
 8000d5a:	4621      	mov	r1, r4
 8000d5c:	4628      	mov	r0, r5
 8000d5e:	f000 fa6d 	bl	800123c <_fflush_r>
 8000d62:	b9e0      	cbnz	r0, 8000d9e <__swbuf_r+0x74>
 8000d64:	68a3      	ldr	r3, [r4, #8]
 8000d66:	3b01      	subs	r3, #1
 8000d68:	60a3      	str	r3, [r4, #8]
 8000d6a:	6823      	ldr	r3, [r4, #0]
 8000d6c:	1c5a      	adds	r2, r3, #1
 8000d6e:	6022      	str	r2, [r4, #0]
 8000d70:	701e      	strb	r6, [r3, #0]
 8000d72:	6962      	ldr	r2, [r4, #20]
 8000d74:	1c43      	adds	r3, r0, #1
 8000d76:	429a      	cmp	r2, r3
 8000d78:	d004      	beq.n	8000d84 <__swbuf_r+0x5a>
 8000d7a:	89a3      	ldrh	r3, [r4, #12]
 8000d7c:	07db      	lsls	r3, r3, #31
 8000d7e:	d506      	bpl.n	8000d8e <__swbuf_r+0x64>
 8000d80:	2e0a      	cmp	r6, #10
 8000d82:	d104      	bne.n	8000d8e <__swbuf_r+0x64>
 8000d84:	4621      	mov	r1, r4
 8000d86:	4628      	mov	r0, r5
 8000d88:	f000 fa58 	bl	800123c <_fflush_r>
 8000d8c:	b938      	cbnz	r0, 8000d9e <__swbuf_r+0x74>
 8000d8e:	4638      	mov	r0, r7
 8000d90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000d92:	4621      	mov	r1, r4
 8000d94:	4628      	mov	r0, r5
 8000d96:	f000 f805 	bl	8000da4 <__swsetup_r>
 8000d9a:	2800      	cmp	r0, #0
 8000d9c:	d0d5      	beq.n	8000d4a <__swbuf_r+0x20>
 8000d9e:	f04f 37ff 	mov.w	r7, #4294967295
 8000da2:	e7f4      	b.n	8000d8e <__swbuf_r+0x64>

08000da4 <__swsetup_r>:
 8000da4:	b538      	push	{r3, r4, r5, lr}
 8000da6:	4b2a      	ldr	r3, [pc, #168]	; (8000e50 <__swsetup_r+0xac>)
 8000da8:	4605      	mov	r5, r0
 8000daa:	6818      	ldr	r0, [r3, #0]
 8000dac:	460c      	mov	r4, r1
 8000dae:	b118      	cbz	r0, 8000db8 <__swsetup_r+0x14>
 8000db0:	6a03      	ldr	r3, [r0, #32]
 8000db2:	b90b      	cbnz	r3, 8000db8 <__swsetup_r+0x14>
 8000db4:	f7ff ff26 	bl	8000c04 <__sinit>
 8000db8:	89a3      	ldrh	r3, [r4, #12]
 8000dba:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000dbe:	0718      	lsls	r0, r3, #28
 8000dc0:	d422      	bmi.n	8000e08 <__swsetup_r+0x64>
 8000dc2:	06d9      	lsls	r1, r3, #27
 8000dc4:	d407      	bmi.n	8000dd6 <__swsetup_r+0x32>
 8000dc6:	2309      	movs	r3, #9
 8000dc8:	602b      	str	r3, [r5, #0]
 8000dca:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000dce:	81a3      	strh	r3, [r4, #12]
 8000dd0:	f04f 30ff 	mov.w	r0, #4294967295
 8000dd4:	e034      	b.n	8000e40 <__swsetup_r+0x9c>
 8000dd6:	0758      	lsls	r0, r3, #29
 8000dd8:	d512      	bpl.n	8000e00 <__swsetup_r+0x5c>
 8000dda:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000ddc:	b141      	cbz	r1, 8000df0 <__swsetup_r+0x4c>
 8000dde:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000de2:	4299      	cmp	r1, r3
 8000de4:	d002      	beq.n	8000dec <__swsetup_r+0x48>
 8000de6:	4628      	mov	r0, r5
 8000de8:	f000 f8aa 	bl	8000f40 <_free_r>
 8000dec:	2300      	movs	r3, #0
 8000dee:	6363      	str	r3, [r4, #52]	; 0x34
 8000df0:	89a3      	ldrh	r3, [r4, #12]
 8000df2:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000df6:	81a3      	strh	r3, [r4, #12]
 8000df8:	2300      	movs	r3, #0
 8000dfa:	6063      	str	r3, [r4, #4]
 8000dfc:	6923      	ldr	r3, [r4, #16]
 8000dfe:	6023      	str	r3, [r4, #0]
 8000e00:	89a3      	ldrh	r3, [r4, #12]
 8000e02:	f043 0308 	orr.w	r3, r3, #8
 8000e06:	81a3      	strh	r3, [r4, #12]
 8000e08:	6923      	ldr	r3, [r4, #16]
 8000e0a:	b94b      	cbnz	r3, 8000e20 <__swsetup_r+0x7c>
 8000e0c:	89a3      	ldrh	r3, [r4, #12]
 8000e0e:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000e12:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000e16:	d003      	beq.n	8000e20 <__swsetup_r+0x7c>
 8000e18:	4621      	mov	r1, r4
 8000e1a:	4628      	mov	r0, r5
 8000e1c:	f000 fa5c 	bl	80012d8 <__smakebuf_r>
 8000e20:	89a0      	ldrh	r0, [r4, #12]
 8000e22:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000e26:	f010 0301 	ands.w	r3, r0, #1
 8000e2a:	d00a      	beq.n	8000e42 <__swsetup_r+0x9e>
 8000e2c:	2300      	movs	r3, #0
 8000e2e:	60a3      	str	r3, [r4, #8]
 8000e30:	6963      	ldr	r3, [r4, #20]
 8000e32:	425b      	negs	r3, r3
 8000e34:	61a3      	str	r3, [r4, #24]
 8000e36:	6923      	ldr	r3, [r4, #16]
 8000e38:	b943      	cbnz	r3, 8000e4c <__swsetup_r+0xa8>
 8000e3a:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000e3e:	d1c4      	bne.n	8000dca <__swsetup_r+0x26>
 8000e40:	bd38      	pop	{r3, r4, r5, pc}
 8000e42:	0781      	lsls	r1, r0, #30
 8000e44:	bf58      	it	pl
 8000e46:	6963      	ldrpl	r3, [r4, #20]
 8000e48:	60a3      	str	r3, [r4, #8]
 8000e4a:	e7f4      	b.n	8000e36 <__swsetup_r+0x92>
 8000e4c:	2000      	movs	r0, #0
 8000e4e:	e7f7      	b.n	8000e40 <__swsetup_r+0x9c>
 8000e50:	2000005c 	.word	0x2000005c

08000e54 <memset>:
 8000e54:	4402      	add	r2, r0
 8000e56:	4603      	mov	r3, r0
 8000e58:	4293      	cmp	r3, r2
 8000e5a:	d100      	bne.n	8000e5e <memset+0xa>
 8000e5c:	4770      	bx	lr
 8000e5e:	f803 1b01 	strb.w	r1, [r3], #1
 8000e62:	e7f9      	b.n	8000e58 <memset+0x4>

08000e64 <_close_r>:
 8000e64:	b538      	push	{r3, r4, r5, lr}
 8000e66:	4d06      	ldr	r5, [pc, #24]	; (8000e80 <_close_r+0x1c>)
 8000e68:	2300      	movs	r3, #0
 8000e6a:	4604      	mov	r4, r0
 8000e6c:	4608      	mov	r0, r1
 8000e6e:	602b      	str	r3, [r5, #0]
 8000e70:	f000 fad4 	bl	800141c <_close>
 8000e74:	1c43      	adds	r3, r0, #1
 8000e76:	d102      	bne.n	8000e7e <_close_r+0x1a>
 8000e78:	682b      	ldr	r3, [r5, #0]
 8000e7a:	b103      	cbz	r3, 8000e7e <_close_r+0x1a>
 8000e7c:	6023      	str	r3, [r4, #0]
 8000e7e:	bd38      	pop	{r3, r4, r5, pc}
 8000e80:	200001b8 	.word	0x200001b8

08000e84 <_lseek_r>:
 8000e84:	b538      	push	{r3, r4, r5, lr}
 8000e86:	4d07      	ldr	r5, [pc, #28]	; (8000ea4 <_lseek_r+0x20>)
 8000e88:	4604      	mov	r4, r0
 8000e8a:	4608      	mov	r0, r1
 8000e8c:	4611      	mov	r1, r2
 8000e8e:	2200      	movs	r2, #0
 8000e90:	602a      	str	r2, [r5, #0]
 8000e92:	461a      	mov	r2, r3
 8000e94:	f000 fada 	bl	800144c <_lseek>
 8000e98:	1c43      	adds	r3, r0, #1
 8000e9a:	d102      	bne.n	8000ea2 <_lseek_r+0x1e>
 8000e9c:	682b      	ldr	r3, [r5, #0]
 8000e9e:	b103      	cbz	r3, 8000ea2 <_lseek_r+0x1e>
 8000ea0:	6023      	str	r3, [r4, #0]
 8000ea2:	bd38      	pop	{r3, r4, r5, pc}
 8000ea4:	200001b8 	.word	0x200001b8

08000ea8 <_read_r>:
 8000ea8:	b538      	push	{r3, r4, r5, lr}
 8000eaa:	4d07      	ldr	r5, [pc, #28]	; (8000ec8 <_read_r+0x20>)
 8000eac:	4604      	mov	r4, r0
 8000eae:	4608      	mov	r0, r1
 8000eb0:	4611      	mov	r1, r2
 8000eb2:	2200      	movs	r2, #0
 8000eb4:	602a      	str	r2, [r5, #0]
 8000eb6:	461a      	mov	r2, r3
 8000eb8:	f000 fad0 	bl	800145c <_read>
 8000ebc:	1c43      	adds	r3, r0, #1
 8000ebe:	d102      	bne.n	8000ec6 <_read_r+0x1e>
 8000ec0:	682b      	ldr	r3, [r5, #0]
 8000ec2:	b103      	cbz	r3, 8000ec6 <_read_r+0x1e>
 8000ec4:	6023      	str	r3, [r4, #0]
 8000ec6:	bd38      	pop	{r3, r4, r5, pc}
 8000ec8:	200001b8 	.word	0x200001b8

08000ecc <_write_r>:
 8000ecc:	b538      	push	{r3, r4, r5, lr}
 8000ece:	4d07      	ldr	r5, [pc, #28]	; (8000eec <_write_r+0x20>)
 8000ed0:	4604      	mov	r4, r0
 8000ed2:	4608      	mov	r0, r1
 8000ed4:	4611      	mov	r1, r2
 8000ed6:	2200      	movs	r2, #0
 8000ed8:	602a      	str	r2, [r5, #0]
 8000eda:	461a      	mov	r2, r3
 8000edc:	f7ff f9ef 	bl	80002be <_write>
 8000ee0:	1c43      	adds	r3, r0, #1
 8000ee2:	d102      	bne.n	8000eea <_write_r+0x1e>
 8000ee4:	682b      	ldr	r3, [r5, #0]
 8000ee6:	b103      	cbz	r3, 8000eea <_write_r+0x1e>
 8000ee8:	6023      	str	r3, [r4, #0]
 8000eea:	bd38      	pop	{r3, r4, r5, pc}
 8000eec:	200001b8 	.word	0x200001b8

08000ef0 <__libc_init_array>:
 8000ef0:	b570      	push	{r4, r5, r6, lr}
 8000ef2:	4d0d      	ldr	r5, [pc, #52]	; (8000f28 <__libc_init_array+0x38>)
 8000ef4:	4c0d      	ldr	r4, [pc, #52]	; (8000f2c <__libc_init_array+0x3c>)
 8000ef6:	1b64      	subs	r4, r4, r5
 8000ef8:	10a4      	asrs	r4, r4, #2
 8000efa:	2600      	movs	r6, #0
 8000efc:	42a6      	cmp	r6, r4
 8000efe:	d109      	bne.n	8000f14 <__libc_init_array+0x24>
 8000f00:	4d0b      	ldr	r5, [pc, #44]	; (8000f30 <__libc_init_array+0x40>)
 8000f02:	4c0c      	ldr	r4, [pc, #48]	; (8000f34 <__libc_init_array+0x44>)
 8000f04:	f000 fac0 	bl	8001488 <_init>
 8000f08:	1b64      	subs	r4, r4, r5
 8000f0a:	10a4      	asrs	r4, r4, #2
 8000f0c:	2600      	movs	r6, #0
 8000f0e:	42a6      	cmp	r6, r4
 8000f10:	d105      	bne.n	8000f1e <__libc_init_array+0x2e>
 8000f12:	bd70      	pop	{r4, r5, r6, pc}
 8000f14:	f855 3b04 	ldr.w	r3, [r5], #4
 8000f18:	4798      	blx	r3
 8000f1a:	3601      	adds	r6, #1
 8000f1c:	e7ee      	b.n	8000efc <__libc_init_array+0xc>
 8000f1e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000f22:	4798      	blx	r3
 8000f24:	3601      	adds	r6, #1
 8000f26:	e7f2      	b.n	8000f0e <__libc_init_array+0x1e>
 8000f28:	08001528 	.word	0x08001528
 8000f2c:	08001528 	.word	0x08001528
 8000f30:	08001528 	.word	0x08001528
 8000f34:	0800152c 	.word	0x0800152c

08000f38 <__retarget_lock_init_recursive>:
 8000f38:	4770      	bx	lr

08000f3a <__retarget_lock_acquire_recursive>:
 8000f3a:	4770      	bx	lr

08000f3c <__retarget_lock_release_recursive>:
 8000f3c:	4770      	bx	lr
	...

08000f40 <_free_r>:
 8000f40:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000f42:	2900      	cmp	r1, #0
 8000f44:	d044      	beq.n	8000fd0 <_free_r+0x90>
 8000f46:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000f4a:	9001      	str	r0, [sp, #4]
 8000f4c:	2b00      	cmp	r3, #0
 8000f4e:	f1a1 0404 	sub.w	r4, r1, #4
 8000f52:	bfb8      	it	lt
 8000f54:	18e4      	addlt	r4, r4, r3
 8000f56:	f000 f8df 	bl	8001118 <__malloc_lock>
 8000f5a:	4a1e      	ldr	r2, [pc, #120]	; (8000fd4 <_free_r+0x94>)
 8000f5c:	9801      	ldr	r0, [sp, #4]
 8000f5e:	6813      	ldr	r3, [r2, #0]
 8000f60:	b933      	cbnz	r3, 8000f70 <_free_r+0x30>
 8000f62:	6063      	str	r3, [r4, #4]
 8000f64:	6014      	str	r4, [r2, #0]
 8000f66:	b003      	add	sp, #12
 8000f68:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000f6c:	f000 b8da 	b.w	8001124 <__malloc_unlock>
 8000f70:	42a3      	cmp	r3, r4
 8000f72:	d908      	bls.n	8000f86 <_free_r+0x46>
 8000f74:	6825      	ldr	r5, [r4, #0]
 8000f76:	1961      	adds	r1, r4, r5
 8000f78:	428b      	cmp	r3, r1
 8000f7a:	bf01      	itttt	eq
 8000f7c:	6819      	ldreq	r1, [r3, #0]
 8000f7e:	685b      	ldreq	r3, [r3, #4]
 8000f80:	1949      	addeq	r1, r1, r5
 8000f82:	6021      	streq	r1, [r4, #0]
 8000f84:	e7ed      	b.n	8000f62 <_free_r+0x22>
 8000f86:	461a      	mov	r2, r3
 8000f88:	685b      	ldr	r3, [r3, #4]
 8000f8a:	b10b      	cbz	r3, 8000f90 <_free_r+0x50>
 8000f8c:	42a3      	cmp	r3, r4
 8000f8e:	d9fa      	bls.n	8000f86 <_free_r+0x46>
 8000f90:	6811      	ldr	r1, [r2, #0]
 8000f92:	1855      	adds	r5, r2, r1
 8000f94:	42a5      	cmp	r5, r4
 8000f96:	d10b      	bne.n	8000fb0 <_free_r+0x70>
 8000f98:	6824      	ldr	r4, [r4, #0]
 8000f9a:	4421      	add	r1, r4
 8000f9c:	1854      	adds	r4, r2, r1
 8000f9e:	42a3      	cmp	r3, r4
 8000fa0:	6011      	str	r1, [r2, #0]
 8000fa2:	d1e0      	bne.n	8000f66 <_free_r+0x26>
 8000fa4:	681c      	ldr	r4, [r3, #0]
 8000fa6:	685b      	ldr	r3, [r3, #4]
 8000fa8:	6053      	str	r3, [r2, #4]
 8000faa:	440c      	add	r4, r1
 8000fac:	6014      	str	r4, [r2, #0]
 8000fae:	e7da      	b.n	8000f66 <_free_r+0x26>
 8000fb0:	d902      	bls.n	8000fb8 <_free_r+0x78>
 8000fb2:	230c      	movs	r3, #12
 8000fb4:	6003      	str	r3, [r0, #0]
 8000fb6:	e7d6      	b.n	8000f66 <_free_r+0x26>
 8000fb8:	6825      	ldr	r5, [r4, #0]
 8000fba:	1961      	adds	r1, r4, r5
 8000fbc:	428b      	cmp	r3, r1
 8000fbe:	bf04      	itt	eq
 8000fc0:	6819      	ldreq	r1, [r3, #0]
 8000fc2:	685b      	ldreq	r3, [r3, #4]
 8000fc4:	6063      	str	r3, [r4, #4]
 8000fc6:	bf04      	itt	eq
 8000fc8:	1949      	addeq	r1, r1, r5
 8000fca:	6021      	streq	r1, [r4, #0]
 8000fcc:	6054      	str	r4, [r2, #4]
 8000fce:	e7ca      	b.n	8000f66 <_free_r+0x26>
 8000fd0:	b003      	add	sp, #12
 8000fd2:	bd30      	pop	{r4, r5, pc}
 8000fd4:	200001c0 	.word	0x200001c0

08000fd8 <sbrk_aligned>:
 8000fd8:	b570      	push	{r4, r5, r6, lr}
 8000fda:	4e0e      	ldr	r6, [pc, #56]	; (8001014 <sbrk_aligned+0x3c>)
 8000fdc:	460c      	mov	r4, r1
 8000fde:	6831      	ldr	r1, [r6, #0]
 8000fe0:	4605      	mov	r5, r0
 8000fe2:	b911      	cbnz	r1, 8000fea <sbrk_aligned+0x12>
 8000fe4:	f000 fa0a 	bl	80013fc <_sbrk_r>
 8000fe8:	6030      	str	r0, [r6, #0]
 8000fea:	4621      	mov	r1, r4
 8000fec:	4628      	mov	r0, r5
 8000fee:	f000 fa05 	bl	80013fc <_sbrk_r>
 8000ff2:	1c43      	adds	r3, r0, #1
 8000ff4:	d00a      	beq.n	800100c <sbrk_aligned+0x34>
 8000ff6:	1cc4      	adds	r4, r0, #3
 8000ff8:	f024 0403 	bic.w	r4, r4, #3
 8000ffc:	42a0      	cmp	r0, r4
 8000ffe:	d007      	beq.n	8001010 <sbrk_aligned+0x38>
 8001000:	1a21      	subs	r1, r4, r0
 8001002:	4628      	mov	r0, r5
 8001004:	f000 f9fa 	bl	80013fc <_sbrk_r>
 8001008:	3001      	adds	r0, #1
 800100a:	d101      	bne.n	8001010 <sbrk_aligned+0x38>
 800100c:	f04f 34ff 	mov.w	r4, #4294967295
 8001010:	4620      	mov	r0, r4
 8001012:	bd70      	pop	{r4, r5, r6, pc}
 8001014:	200001c4 	.word	0x200001c4

08001018 <_malloc_r>:
 8001018:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800101c:	1ccd      	adds	r5, r1, #3
 800101e:	f025 0503 	bic.w	r5, r5, #3
 8001022:	3508      	adds	r5, #8
 8001024:	2d0c      	cmp	r5, #12
 8001026:	bf38      	it	cc
 8001028:	250c      	movcc	r5, #12
 800102a:	2d00      	cmp	r5, #0
 800102c:	4607      	mov	r7, r0
 800102e:	db01      	blt.n	8001034 <_malloc_r+0x1c>
 8001030:	42a9      	cmp	r1, r5
 8001032:	d905      	bls.n	8001040 <_malloc_r+0x28>
 8001034:	230c      	movs	r3, #12
 8001036:	603b      	str	r3, [r7, #0]
 8001038:	2600      	movs	r6, #0
 800103a:	4630      	mov	r0, r6
 800103c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001040:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8001114 <_malloc_r+0xfc>
 8001044:	f000 f868 	bl	8001118 <__malloc_lock>
 8001048:	f8d8 3000 	ldr.w	r3, [r8]
 800104c:	461c      	mov	r4, r3
 800104e:	bb5c      	cbnz	r4, 80010a8 <_malloc_r+0x90>
 8001050:	4629      	mov	r1, r5
 8001052:	4638      	mov	r0, r7
 8001054:	f7ff ffc0 	bl	8000fd8 <sbrk_aligned>
 8001058:	1c43      	adds	r3, r0, #1
 800105a:	4604      	mov	r4, r0
 800105c:	d155      	bne.n	800110a <_malloc_r+0xf2>
 800105e:	f8d8 4000 	ldr.w	r4, [r8]
 8001062:	4626      	mov	r6, r4
 8001064:	2e00      	cmp	r6, #0
 8001066:	d145      	bne.n	80010f4 <_malloc_r+0xdc>
 8001068:	2c00      	cmp	r4, #0
 800106a:	d048      	beq.n	80010fe <_malloc_r+0xe6>
 800106c:	6823      	ldr	r3, [r4, #0]
 800106e:	4631      	mov	r1, r6
 8001070:	4638      	mov	r0, r7
 8001072:	eb04 0903 	add.w	r9, r4, r3
 8001076:	f000 f9c1 	bl	80013fc <_sbrk_r>
 800107a:	4581      	cmp	r9, r0
 800107c:	d13f      	bne.n	80010fe <_malloc_r+0xe6>
 800107e:	6821      	ldr	r1, [r4, #0]
 8001080:	1a6d      	subs	r5, r5, r1
 8001082:	4629      	mov	r1, r5
 8001084:	4638      	mov	r0, r7
 8001086:	f7ff ffa7 	bl	8000fd8 <sbrk_aligned>
 800108a:	3001      	adds	r0, #1
 800108c:	d037      	beq.n	80010fe <_malloc_r+0xe6>
 800108e:	6823      	ldr	r3, [r4, #0]
 8001090:	442b      	add	r3, r5
 8001092:	6023      	str	r3, [r4, #0]
 8001094:	f8d8 3000 	ldr.w	r3, [r8]
 8001098:	2b00      	cmp	r3, #0
 800109a:	d038      	beq.n	800110e <_malloc_r+0xf6>
 800109c:	685a      	ldr	r2, [r3, #4]
 800109e:	42a2      	cmp	r2, r4
 80010a0:	d12b      	bne.n	80010fa <_malloc_r+0xe2>
 80010a2:	2200      	movs	r2, #0
 80010a4:	605a      	str	r2, [r3, #4]
 80010a6:	e00f      	b.n	80010c8 <_malloc_r+0xb0>
 80010a8:	6822      	ldr	r2, [r4, #0]
 80010aa:	1b52      	subs	r2, r2, r5
 80010ac:	d41f      	bmi.n	80010ee <_malloc_r+0xd6>
 80010ae:	2a0b      	cmp	r2, #11
 80010b0:	d917      	bls.n	80010e2 <_malloc_r+0xca>
 80010b2:	1961      	adds	r1, r4, r5
 80010b4:	42a3      	cmp	r3, r4
 80010b6:	6025      	str	r5, [r4, #0]
 80010b8:	bf18      	it	ne
 80010ba:	6059      	strne	r1, [r3, #4]
 80010bc:	6863      	ldr	r3, [r4, #4]
 80010be:	bf08      	it	eq
 80010c0:	f8c8 1000 	streq.w	r1, [r8]
 80010c4:	5162      	str	r2, [r4, r5]
 80010c6:	604b      	str	r3, [r1, #4]
 80010c8:	4638      	mov	r0, r7
 80010ca:	f104 060b 	add.w	r6, r4, #11
 80010ce:	f000 f829 	bl	8001124 <__malloc_unlock>
 80010d2:	f026 0607 	bic.w	r6, r6, #7
 80010d6:	1d23      	adds	r3, r4, #4
 80010d8:	1af2      	subs	r2, r6, r3
 80010da:	d0ae      	beq.n	800103a <_malloc_r+0x22>
 80010dc:	1b9b      	subs	r3, r3, r6
 80010de:	50a3      	str	r3, [r4, r2]
 80010e0:	e7ab      	b.n	800103a <_malloc_r+0x22>
 80010e2:	42a3      	cmp	r3, r4
 80010e4:	6862      	ldr	r2, [r4, #4]
 80010e6:	d1dd      	bne.n	80010a4 <_malloc_r+0x8c>
 80010e8:	f8c8 2000 	str.w	r2, [r8]
 80010ec:	e7ec      	b.n	80010c8 <_malloc_r+0xb0>
 80010ee:	4623      	mov	r3, r4
 80010f0:	6864      	ldr	r4, [r4, #4]
 80010f2:	e7ac      	b.n	800104e <_malloc_r+0x36>
 80010f4:	4634      	mov	r4, r6
 80010f6:	6876      	ldr	r6, [r6, #4]
 80010f8:	e7b4      	b.n	8001064 <_malloc_r+0x4c>
 80010fa:	4613      	mov	r3, r2
 80010fc:	e7cc      	b.n	8001098 <_malloc_r+0x80>
 80010fe:	230c      	movs	r3, #12
 8001100:	603b      	str	r3, [r7, #0]
 8001102:	4638      	mov	r0, r7
 8001104:	f000 f80e 	bl	8001124 <__malloc_unlock>
 8001108:	e797      	b.n	800103a <_malloc_r+0x22>
 800110a:	6025      	str	r5, [r4, #0]
 800110c:	e7dc      	b.n	80010c8 <_malloc_r+0xb0>
 800110e:	605b      	str	r3, [r3, #4]
 8001110:	deff      	udf	#255	; 0xff
 8001112:	bf00      	nop
 8001114:	200001c0 	.word	0x200001c0

08001118 <__malloc_lock>:
 8001118:	4801      	ldr	r0, [pc, #4]	; (8001120 <__malloc_lock+0x8>)
 800111a:	f7ff bf0e 	b.w	8000f3a <__retarget_lock_acquire_recursive>
 800111e:	bf00      	nop
 8001120:	200001bc 	.word	0x200001bc

08001124 <__malloc_unlock>:
 8001124:	4801      	ldr	r0, [pc, #4]	; (800112c <__malloc_unlock+0x8>)
 8001126:	f7ff bf09 	b.w	8000f3c <__retarget_lock_release_recursive>
 800112a:	bf00      	nop
 800112c:	200001bc 	.word	0x200001bc

08001130 <__sflush_r>:
 8001130:	898a      	ldrh	r2, [r1, #12]
 8001132:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001136:	4605      	mov	r5, r0
 8001138:	0710      	lsls	r0, r2, #28
 800113a:	460c      	mov	r4, r1
 800113c:	d458      	bmi.n	80011f0 <__sflush_r+0xc0>
 800113e:	684b      	ldr	r3, [r1, #4]
 8001140:	2b00      	cmp	r3, #0
 8001142:	dc05      	bgt.n	8001150 <__sflush_r+0x20>
 8001144:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8001146:	2b00      	cmp	r3, #0
 8001148:	dc02      	bgt.n	8001150 <__sflush_r+0x20>
 800114a:	2000      	movs	r0, #0
 800114c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001150:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001152:	2e00      	cmp	r6, #0
 8001154:	d0f9      	beq.n	800114a <__sflush_r+0x1a>
 8001156:	2300      	movs	r3, #0
 8001158:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800115c:	682f      	ldr	r7, [r5, #0]
 800115e:	6a21      	ldr	r1, [r4, #32]
 8001160:	602b      	str	r3, [r5, #0]
 8001162:	d032      	beq.n	80011ca <__sflush_r+0x9a>
 8001164:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001166:	89a3      	ldrh	r3, [r4, #12]
 8001168:	075a      	lsls	r2, r3, #29
 800116a:	d505      	bpl.n	8001178 <__sflush_r+0x48>
 800116c:	6863      	ldr	r3, [r4, #4]
 800116e:	1ac0      	subs	r0, r0, r3
 8001170:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001172:	b10b      	cbz	r3, 8001178 <__sflush_r+0x48>
 8001174:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001176:	1ac0      	subs	r0, r0, r3
 8001178:	2300      	movs	r3, #0
 800117a:	4602      	mov	r2, r0
 800117c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800117e:	6a21      	ldr	r1, [r4, #32]
 8001180:	4628      	mov	r0, r5
 8001182:	47b0      	blx	r6
 8001184:	1c43      	adds	r3, r0, #1
 8001186:	89a3      	ldrh	r3, [r4, #12]
 8001188:	d106      	bne.n	8001198 <__sflush_r+0x68>
 800118a:	6829      	ldr	r1, [r5, #0]
 800118c:	291d      	cmp	r1, #29
 800118e:	d82b      	bhi.n	80011e8 <__sflush_r+0xb8>
 8001190:	4a29      	ldr	r2, [pc, #164]	; (8001238 <__sflush_r+0x108>)
 8001192:	410a      	asrs	r2, r1
 8001194:	07d6      	lsls	r6, r2, #31
 8001196:	d427      	bmi.n	80011e8 <__sflush_r+0xb8>
 8001198:	2200      	movs	r2, #0
 800119a:	6062      	str	r2, [r4, #4]
 800119c:	04d9      	lsls	r1, r3, #19
 800119e:	6922      	ldr	r2, [r4, #16]
 80011a0:	6022      	str	r2, [r4, #0]
 80011a2:	d504      	bpl.n	80011ae <__sflush_r+0x7e>
 80011a4:	1c42      	adds	r2, r0, #1
 80011a6:	d101      	bne.n	80011ac <__sflush_r+0x7c>
 80011a8:	682b      	ldr	r3, [r5, #0]
 80011aa:	b903      	cbnz	r3, 80011ae <__sflush_r+0x7e>
 80011ac:	6560      	str	r0, [r4, #84]	; 0x54
 80011ae:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80011b0:	602f      	str	r7, [r5, #0]
 80011b2:	2900      	cmp	r1, #0
 80011b4:	d0c9      	beq.n	800114a <__sflush_r+0x1a>
 80011b6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80011ba:	4299      	cmp	r1, r3
 80011bc:	d002      	beq.n	80011c4 <__sflush_r+0x94>
 80011be:	4628      	mov	r0, r5
 80011c0:	f7ff febe 	bl	8000f40 <_free_r>
 80011c4:	2000      	movs	r0, #0
 80011c6:	6360      	str	r0, [r4, #52]	; 0x34
 80011c8:	e7c0      	b.n	800114c <__sflush_r+0x1c>
 80011ca:	2301      	movs	r3, #1
 80011cc:	4628      	mov	r0, r5
 80011ce:	47b0      	blx	r6
 80011d0:	1c41      	adds	r1, r0, #1
 80011d2:	d1c8      	bne.n	8001166 <__sflush_r+0x36>
 80011d4:	682b      	ldr	r3, [r5, #0]
 80011d6:	2b00      	cmp	r3, #0
 80011d8:	d0c5      	beq.n	8001166 <__sflush_r+0x36>
 80011da:	2b1d      	cmp	r3, #29
 80011dc:	d001      	beq.n	80011e2 <__sflush_r+0xb2>
 80011de:	2b16      	cmp	r3, #22
 80011e0:	d101      	bne.n	80011e6 <__sflush_r+0xb6>
 80011e2:	602f      	str	r7, [r5, #0]
 80011e4:	e7b1      	b.n	800114a <__sflush_r+0x1a>
 80011e6:	89a3      	ldrh	r3, [r4, #12]
 80011e8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80011ec:	81a3      	strh	r3, [r4, #12]
 80011ee:	e7ad      	b.n	800114c <__sflush_r+0x1c>
 80011f0:	690f      	ldr	r7, [r1, #16]
 80011f2:	2f00      	cmp	r7, #0
 80011f4:	d0a9      	beq.n	800114a <__sflush_r+0x1a>
 80011f6:	0793      	lsls	r3, r2, #30
 80011f8:	680e      	ldr	r6, [r1, #0]
 80011fa:	bf08      	it	eq
 80011fc:	694b      	ldreq	r3, [r1, #20]
 80011fe:	600f      	str	r7, [r1, #0]
 8001200:	bf18      	it	ne
 8001202:	2300      	movne	r3, #0
 8001204:	eba6 0807 	sub.w	r8, r6, r7
 8001208:	608b      	str	r3, [r1, #8]
 800120a:	f1b8 0f00 	cmp.w	r8, #0
 800120e:	dd9c      	ble.n	800114a <__sflush_r+0x1a>
 8001210:	6a21      	ldr	r1, [r4, #32]
 8001212:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001214:	4643      	mov	r3, r8
 8001216:	463a      	mov	r2, r7
 8001218:	4628      	mov	r0, r5
 800121a:	47b0      	blx	r6
 800121c:	2800      	cmp	r0, #0
 800121e:	dc06      	bgt.n	800122e <__sflush_r+0xfe>
 8001220:	89a3      	ldrh	r3, [r4, #12]
 8001222:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001226:	81a3      	strh	r3, [r4, #12]
 8001228:	f04f 30ff 	mov.w	r0, #4294967295
 800122c:	e78e      	b.n	800114c <__sflush_r+0x1c>
 800122e:	4407      	add	r7, r0
 8001230:	eba8 0800 	sub.w	r8, r8, r0
 8001234:	e7e9      	b.n	800120a <__sflush_r+0xda>
 8001236:	bf00      	nop
 8001238:	dfbffffe 	.word	0xdfbffffe

0800123c <_fflush_r>:
 800123c:	b538      	push	{r3, r4, r5, lr}
 800123e:	690b      	ldr	r3, [r1, #16]
 8001240:	4605      	mov	r5, r0
 8001242:	460c      	mov	r4, r1
 8001244:	b913      	cbnz	r3, 800124c <_fflush_r+0x10>
 8001246:	2500      	movs	r5, #0
 8001248:	4628      	mov	r0, r5
 800124a:	bd38      	pop	{r3, r4, r5, pc}
 800124c:	b118      	cbz	r0, 8001256 <_fflush_r+0x1a>
 800124e:	6a03      	ldr	r3, [r0, #32]
 8001250:	b90b      	cbnz	r3, 8001256 <_fflush_r+0x1a>
 8001252:	f7ff fcd7 	bl	8000c04 <__sinit>
 8001256:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800125a:	2b00      	cmp	r3, #0
 800125c:	d0f3      	beq.n	8001246 <_fflush_r+0xa>
 800125e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001260:	07d0      	lsls	r0, r2, #31
 8001262:	d404      	bmi.n	800126e <_fflush_r+0x32>
 8001264:	0599      	lsls	r1, r3, #22
 8001266:	d402      	bmi.n	800126e <_fflush_r+0x32>
 8001268:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800126a:	f7ff fe66 	bl	8000f3a <__retarget_lock_acquire_recursive>
 800126e:	4628      	mov	r0, r5
 8001270:	4621      	mov	r1, r4
 8001272:	f7ff ff5d 	bl	8001130 <__sflush_r>
 8001276:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001278:	07da      	lsls	r2, r3, #31
 800127a:	4605      	mov	r5, r0
 800127c:	d4e4      	bmi.n	8001248 <_fflush_r+0xc>
 800127e:	89a3      	ldrh	r3, [r4, #12]
 8001280:	059b      	lsls	r3, r3, #22
 8001282:	d4e1      	bmi.n	8001248 <_fflush_r+0xc>
 8001284:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001286:	f7ff fe59 	bl	8000f3c <__retarget_lock_release_recursive>
 800128a:	e7dd      	b.n	8001248 <_fflush_r+0xc>

0800128c <__swhatbuf_r>:
 800128c:	b570      	push	{r4, r5, r6, lr}
 800128e:	460c      	mov	r4, r1
 8001290:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001294:	2900      	cmp	r1, #0
 8001296:	b096      	sub	sp, #88	; 0x58
 8001298:	4615      	mov	r5, r2
 800129a:	461e      	mov	r6, r3
 800129c:	da0d      	bge.n	80012ba <__swhatbuf_r+0x2e>
 800129e:	89a3      	ldrh	r3, [r4, #12]
 80012a0:	f013 0f80 	tst.w	r3, #128	; 0x80
 80012a4:	f04f 0100 	mov.w	r1, #0
 80012a8:	bf0c      	ite	eq
 80012aa:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80012ae:	2340      	movne	r3, #64	; 0x40
 80012b0:	2000      	movs	r0, #0
 80012b2:	6031      	str	r1, [r6, #0]
 80012b4:	602b      	str	r3, [r5, #0]
 80012b6:	b016      	add	sp, #88	; 0x58
 80012b8:	bd70      	pop	{r4, r5, r6, pc}
 80012ba:	466a      	mov	r2, sp
 80012bc:	f000 f87c 	bl	80013b8 <_fstat_r>
 80012c0:	2800      	cmp	r0, #0
 80012c2:	dbec      	blt.n	800129e <__swhatbuf_r+0x12>
 80012c4:	9901      	ldr	r1, [sp, #4]
 80012c6:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80012ca:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80012ce:	4259      	negs	r1, r3
 80012d0:	4159      	adcs	r1, r3
 80012d2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80012d6:	e7eb      	b.n	80012b0 <__swhatbuf_r+0x24>

080012d8 <__smakebuf_r>:
 80012d8:	898b      	ldrh	r3, [r1, #12]
 80012da:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80012dc:	079d      	lsls	r5, r3, #30
 80012de:	4606      	mov	r6, r0
 80012e0:	460c      	mov	r4, r1
 80012e2:	d507      	bpl.n	80012f4 <__smakebuf_r+0x1c>
 80012e4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80012e8:	6023      	str	r3, [r4, #0]
 80012ea:	6123      	str	r3, [r4, #16]
 80012ec:	2301      	movs	r3, #1
 80012ee:	6163      	str	r3, [r4, #20]
 80012f0:	b002      	add	sp, #8
 80012f2:	bd70      	pop	{r4, r5, r6, pc}
 80012f4:	ab01      	add	r3, sp, #4
 80012f6:	466a      	mov	r2, sp
 80012f8:	f7ff ffc8 	bl	800128c <__swhatbuf_r>
 80012fc:	9900      	ldr	r1, [sp, #0]
 80012fe:	4605      	mov	r5, r0
 8001300:	4630      	mov	r0, r6
 8001302:	f7ff fe89 	bl	8001018 <_malloc_r>
 8001306:	b948      	cbnz	r0, 800131c <__smakebuf_r+0x44>
 8001308:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800130c:	059a      	lsls	r2, r3, #22
 800130e:	d4ef      	bmi.n	80012f0 <__smakebuf_r+0x18>
 8001310:	f023 0303 	bic.w	r3, r3, #3
 8001314:	f043 0302 	orr.w	r3, r3, #2
 8001318:	81a3      	strh	r3, [r4, #12]
 800131a:	e7e3      	b.n	80012e4 <__smakebuf_r+0xc>
 800131c:	89a3      	ldrh	r3, [r4, #12]
 800131e:	6020      	str	r0, [r4, #0]
 8001320:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001324:	81a3      	strh	r3, [r4, #12]
 8001326:	9b00      	ldr	r3, [sp, #0]
 8001328:	6163      	str	r3, [r4, #20]
 800132a:	9b01      	ldr	r3, [sp, #4]
 800132c:	6120      	str	r0, [r4, #16]
 800132e:	b15b      	cbz	r3, 8001348 <__smakebuf_r+0x70>
 8001330:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001334:	4630      	mov	r0, r6
 8001336:	f000 f851 	bl	80013dc <_isatty_r>
 800133a:	b128      	cbz	r0, 8001348 <__smakebuf_r+0x70>
 800133c:	89a3      	ldrh	r3, [r4, #12]
 800133e:	f023 0303 	bic.w	r3, r3, #3
 8001342:	f043 0301 	orr.w	r3, r3, #1
 8001346:	81a3      	strh	r3, [r4, #12]
 8001348:	89a3      	ldrh	r3, [r4, #12]
 800134a:	431d      	orrs	r5, r3
 800134c:	81a5      	strh	r5, [r4, #12]
 800134e:	e7cf      	b.n	80012f0 <__smakebuf_r+0x18>

08001350 <_putc_r>:
 8001350:	b570      	push	{r4, r5, r6, lr}
 8001352:	460d      	mov	r5, r1
 8001354:	4614      	mov	r4, r2
 8001356:	4606      	mov	r6, r0
 8001358:	b118      	cbz	r0, 8001362 <_putc_r+0x12>
 800135a:	6a03      	ldr	r3, [r0, #32]
 800135c:	b90b      	cbnz	r3, 8001362 <_putc_r+0x12>
 800135e:	f7ff fc51 	bl	8000c04 <__sinit>
 8001362:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001364:	07d8      	lsls	r0, r3, #31
 8001366:	d405      	bmi.n	8001374 <_putc_r+0x24>
 8001368:	89a3      	ldrh	r3, [r4, #12]
 800136a:	0599      	lsls	r1, r3, #22
 800136c:	d402      	bmi.n	8001374 <_putc_r+0x24>
 800136e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001370:	f7ff fde3 	bl	8000f3a <__retarget_lock_acquire_recursive>
 8001374:	68a3      	ldr	r3, [r4, #8]
 8001376:	3b01      	subs	r3, #1
 8001378:	2b00      	cmp	r3, #0
 800137a:	60a3      	str	r3, [r4, #8]
 800137c:	da05      	bge.n	800138a <_putc_r+0x3a>
 800137e:	69a2      	ldr	r2, [r4, #24]
 8001380:	4293      	cmp	r3, r2
 8001382:	db12      	blt.n	80013aa <_putc_r+0x5a>
 8001384:	b2eb      	uxtb	r3, r5
 8001386:	2b0a      	cmp	r3, #10
 8001388:	d00f      	beq.n	80013aa <_putc_r+0x5a>
 800138a:	6823      	ldr	r3, [r4, #0]
 800138c:	1c5a      	adds	r2, r3, #1
 800138e:	6022      	str	r2, [r4, #0]
 8001390:	701d      	strb	r5, [r3, #0]
 8001392:	b2ed      	uxtb	r5, r5
 8001394:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001396:	07da      	lsls	r2, r3, #31
 8001398:	d405      	bmi.n	80013a6 <_putc_r+0x56>
 800139a:	89a3      	ldrh	r3, [r4, #12]
 800139c:	059b      	lsls	r3, r3, #22
 800139e:	d402      	bmi.n	80013a6 <_putc_r+0x56>
 80013a0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80013a2:	f7ff fdcb 	bl	8000f3c <__retarget_lock_release_recursive>
 80013a6:	4628      	mov	r0, r5
 80013a8:	bd70      	pop	{r4, r5, r6, pc}
 80013aa:	4629      	mov	r1, r5
 80013ac:	4622      	mov	r2, r4
 80013ae:	4630      	mov	r0, r6
 80013b0:	f7ff fcbb 	bl	8000d2a <__swbuf_r>
 80013b4:	4605      	mov	r5, r0
 80013b6:	e7ed      	b.n	8001394 <_putc_r+0x44>

080013b8 <_fstat_r>:
 80013b8:	b538      	push	{r3, r4, r5, lr}
 80013ba:	4d07      	ldr	r5, [pc, #28]	; (80013d8 <_fstat_r+0x20>)
 80013bc:	2300      	movs	r3, #0
 80013be:	4604      	mov	r4, r0
 80013c0:	4608      	mov	r0, r1
 80013c2:	4611      	mov	r1, r2
 80013c4:	602b      	str	r3, [r5, #0]
 80013c6:	f000 f831 	bl	800142c <_fstat>
 80013ca:	1c43      	adds	r3, r0, #1
 80013cc:	d102      	bne.n	80013d4 <_fstat_r+0x1c>
 80013ce:	682b      	ldr	r3, [r5, #0]
 80013d0:	b103      	cbz	r3, 80013d4 <_fstat_r+0x1c>
 80013d2:	6023      	str	r3, [r4, #0]
 80013d4:	bd38      	pop	{r3, r4, r5, pc}
 80013d6:	bf00      	nop
 80013d8:	200001b8 	.word	0x200001b8

080013dc <_isatty_r>:
 80013dc:	b538      	push	{r3, r4, r5, lr}
 80013de:	4d06      	ldr	r5, [pc, #24]	; (80013f8 <_isatty_r+0x1c>)
 80013e0:	2300      	movs	r3, #0
 80013e2:	4604      	mov	r4, r0
 80013e4:	4608      	mov	r0, r1
 80013e6:	602b      	str	r3, [r5, #0]
 80013e8:	f000 f828 	bl	800143c <_isatty>
 80013ec:	1c43      	adds	r3, r0, #1
 80013ee:	d102      	bne.n	80013f6 <_isatty_r+0x1a>
 80013f0:	682b      	ldr	r3, [r5, #0]
 80013f2:	b103      	cbz	r3, 80013f6 <_isatty_r+0x1a>
 80013f4:	6023      	str	r3, [r4, #0]
 80013f6:	bd38      	pop	{r3, r4, r5, pc}
 80013f8:	200001b8 	.word	0x200001b8

080013fc <_sbrk_r>:
 80013fc:	b538      	push	{r3, r4, r5, lr}
 80013fe:	4d06      	ldr	r5, [pc, #24]	; (8001418 <_sbrk_r+0x1c>)
 8001400:	2300      	movs	r3, #0
 8001402:	4604      	mov	r4, r0
 8001404:	4608      	mov	r0, r1
 8001406:	602b      	str	r3, [r5, #0]
 8001408:	f000 f830 	bl	800146c <_sbrk>
 800140c:	1c43      	adds	r3, r0, #1
 800140e:	d102      	bne.n	8001416 <_sbrk_r+0x1a>
 8001410:	682b      	ldr	r3, [r5, #0]
 8001412:	b103      	cbz	r3, 8001416 <_sbrk_r+0x1a>
 8001414:	6023      	str	r3, [r4, #0]
 8001416:	bd38      	pop	{r3, r4, r5, pc}
 8001418:	200001b8 	.word	0x200001b8

0800141c <_close>:
 800141c:	4b02      	ldr	r3, [pc, #8]	; (8001428 <_close+0xc>)
 800141e:	2258      	movs	r2, #88	; 0x58
 8001420:	601a      	str	r2, [r3, #0]
 8001422:	f04f 30ff 	mov.w	r0, #4294967295
 8001426:	4770      	bx	lr
 8001428:	200001b8 	.word	0x200001b8

0800142c <_fstat>:
 800142c:	4b02      	ldr	r3, [pc, #8]	; (8001438 <_fstat+0xc>)
 800142e:	2258      	movs	r2, #88	; 0x58
 8001430:	601a      	str	r2, [r3, #0]
 8001432:	f04f 30ff 	mov.w	r0, #4294967295
 8001436:	4770      	bx	lr
 8001438:	200001b8 	.word	0x200001b8

0800143c <_isatty>:
 800143c:	4b02      	ldr	r3, [pc, #8]	; (8001448 <_isatty+0xc>)
 800143e:	2258      	movs	r2, #88	; 0x58
 8001440:	601a      	str	r2, [r3, #0]
 8001442:	2000      	movs	r0, #0
 8001444:	4770      	bx	lr
 8001446:	bf00      	nop
 8001448:	200001b8 	.word	0x200001b8

0800144c <_lseek>:
 800144c:	4b02      	ldr	r3, [pc, #8]	; (8001458 <_lseek+0xc>)
 800144e:	2258      	movs	r2, #88	; 0x58
 8001450:	601a      	str	r2, [r3, #0]
 8001452:	f04f 30ff 	mov.w	r0, #4294967295
 8001456:	4770      	bx	lr
 8001458:	200001b8 	.word	0x200001b8

0800145c <_read>:
 800145c:	4b02      	ldr	r3, [pc, #8]	; (8001468 <_read+0xc>)
 800145e:	2258      	movs	r2, #88	; 0x58
 8001460:	601a      	str	r2, [r3, #0]
 8001462:	f04f 30ff 	mov.w	r0, #4294967295
 8001466:	4770      	bx	lr
 8001468:	200001b8 	.word	0x200001b8

0800146c <_sbrk>:
 800146c:	4a04      	ldr	r2, [pc, #16]	; (8001480 <_sbrk+0x14>)
 800146e:	6811      	ldr	r1, [r2, #0]
 8001470:	4603      	mov	r3, r0
 8001472:	b909      	cbnz	r1, 8001478 <_sbrk+0xc>
 8001474:	4903      	ldr	r1, [pc, #12]	; (8001484 <_sbrk+0x18>)
 8001476:	6011      	str	r1, [r2, #0]
 8001478:	6810      	ldr	r0, [r2, #0]
 800147a:	4403      	add	r3, r0
 800147c:	6013      	str	r3, [r2, #0]
 800147e:	4770      	bx	lr
 8001480:	200001c8 	.word	0x200001c8
 8001484:	200001d0 	.word	0x200001d0

08001488 <_init>:
 8001488:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800148a:	bf00      	nop
 800148c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800148e:	bc08      	pop	{r3}
 8001490:	469e      	mov	lr, r3
 8001492:	4770      	bx	lr

08001494 <_fini>:
 8001494:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001496:	bf00      	nop
 8001498:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800149a:	bc08      	pop	{r3}
 800149c:	469e      	mov	lr, r3
 800149e:	4770      	bx	lr
