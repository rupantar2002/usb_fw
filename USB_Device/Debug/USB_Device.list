
USB_Device.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000013bc  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000088  0800154c  0800154c  0001154c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080015d4  080015d4  00020060  2**0
                  CONTENTS
  4 .ARM          00000000  080015d4  080015d4  00020060  2**0
                  CONTENTS
  5 .preinit_array 00000000  080015d4  080015d4  00020060  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080015d4  080015d4  000115d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080015d8  080015d8  000115d8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000060  20000000  080015dc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020060  2**0
                  CONTENTS
 10 .bss          0000016c  20000060  20000060  00020060  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  200001cc  200001cc  00020060  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020060  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  00020090  2**0
                  CONTENTS, READONLY
 14 .debug_info   00001666  00000000  00000000  000200d3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 000005e9  00000000  00000000  00021739  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000128  00000000  00000000  00021d28  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 000000c2  00000000  00000000  00021e50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00019189  00000000  00000000  00021f12  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00001d28  00000000  00000000  0003b09b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0008c5a8  00000000  00000000  0003cdc3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00000bb4  00000000  00000000  000c936c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000048  00000000  00000000  000c9f20  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000060 	.word	0x20000060
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08001534 	.word	0x08001534

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000064 	.word	0x20000064
 80001cc:	08001534 	.word	0x08001534

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8000270:	b480      	push	{r7}
 8000272:	b083      	sub	sp, #12
 8000274:	af00      	add	r7, sp, #0
 8000276:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000278:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800027c:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 8000280:	f003 0301 	and.w	r3, r3, #1
 8000284:	2b00      	cmp	r3, #0
 8000286:	d013      	beq.n	80002b0 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 8000288:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800028c:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 8000290:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000294:	2b00      	cmp	r3, #0
 8000296:	d00b      	beq.n	80002b0 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 8000298:	e000      	b.n	800029c <ITM_SendChar+0x2c>
    {
      __NOP();
 800029a:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 800029c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002a0:	681b      	ldr	r3, [r3, #0]
 80002a2:	2b00      	cmp	r3, #0
 80002a4:	d0f9      	beq.n	800029a <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 80002a6:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002aa:	687a      	ldr	r2, [r7, #4]
 80002ac:	b2d2      	uxtb	r2, r2
 80002ae:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 80002b0:	687b      	ldr	r3, [r7, #4]
}
 80002b2:	4618      	mov	r0, r3
 80002b4:	370c      	adds	r7, #12
 80002b6:	46bd      	mov	sp, r7
 80002b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002bc:	4770      	bx	lr

080002be <_write>:

/** \brief Redirects `printf()` output to the serial wire out (SWO).
 * This function overrides a weak function symbol and is not to be used directly.
 */
int _write(int file, char *ptr, int len)
{
 80002be:	b580      	push	{r7, lr}
 80002c0:	b086      	sub	sp, #24
 80002c2:	af00      	add	r7, sp, #0
 80002c4:	60f8      	str	r0, [r7, #12]
 80002c6:	60b9      	str	r1, [r7, #8]
 80002c8:	607a      	str	r2, [r7, #4]
  int i=0;
 80002ca:	2300      	movs	r3, #0
 80002cc:	617b      	str	r3, [r7, #20]
  for(i=0 ; i<len ; i++)
 80002ce:	2300      	movs	r3, #0
 80002d0:	617b      	str	r3, [r7, #20]
 80002d2:	e009      	b.n	80002e8 <_write+0x2a>
    ITM_SendChar((*ptr++));
 80002d4:	68bb      	ldr	r3, [r7, #8]
 80002d6:	1c5a      	adds	r2, r3, #1
 80002d8:	60ba      	str	r2, [r7, #8]
 80002da:	781b      	ldrb	r3, [r3, #0]
 80002dc:	4618      	mov	r0, r3
 80002de:	f7ff ffc7 	bl	8000270 <ITM_SendChar>
  for(i=0 ; i<len ; i++)
 80002e2:	697b      	ldr	r3, [r7, #20]
 80002e4:	3301      	adds	r3, #1
 80002e6:	617b      	str	r3, [r7, #20]
 80002e8:	697a      	ldr	r2, [r7, #20]
 80002ea:	687b      	ldr	r3, [r7, #4]
 80002ec:	429a      	cmp	r2, r3
 80002ee:	dbf1      	blt.n	80002d4 <_write+0x16>

  return len;
 80002f0:	687b      	ldr	r3, [r7, #4]
}
 80002f2:	4618      	mov	r0, r3
 80002f4:	3718      	adds	r7, #24
 80002f6:	46bd      	mov	sp, r7
 80002f8:	bd80      	pop	{r7, pc}
	...

080002fc <_get_log_level_string>:

char const * const _get_log_level_string(LogLevel const log_level)
{
 80002fc:	b480      	push	{r7}
 80002fe:	b083      	sub	sp, #12
 8000300:	af00      	add	r7, sp, #0
 8000302:	4603      	mov	r3, r0
 8000304:	71fb      	strb	r3, [r7, #7]
    switch(log_level)
 8000306:	79fb      	ldrb	r3, [r7, #7]
 8000308:	2b02      	cmp	r3, #2
 800030a:	d00a      	beq.n	8000322 <_get_log_level_string+0x26>
 800030c:	2b02      	cmp	r3, #2
 800030e:	dc0a      	bgt.n	8000326 <_get_log_level_string+0x2a>
 8000310:	2b00      	cmp	r3, #0
 8000312:	d002      	beq.n	800031a <_get_log_level_string+0x1e>
 8000314:	2b01      	cmp	r3, #1
 8000316:	d002      	beq.n	800031e <_get_log_level_string+0x22>
 8000318:	e005      	b.n	8000326 <_get_log_level_string+0x2a>
    {
        case LOG_LEVEL_ERROR:
            return "ERROR";
 800031a:	4b06      	ldr	r3, [pc, #24]	; (8000334 <_get_log_level_string+0x38>)
 800031c:	e003      	b.n	8000326 <_get_log_level_string+0x2a>
        case LOG_LEVEL_INFORMATION:
            return "INFO";
 800031e:	4b06      	ldr	r3, [pc, #24]	; (8000338 <_get_log_level_string+0x3c>)
 8000320:	e001      	b.n	8000326 <_get_log_level_string+0x2a>
        case LOG_LEVEL_DEBUG:
            return "DEBUG";
 8000322:	4b06      	ldr	r3, [pc, #24]	; (800033c <_get_log_level_string+0x40>)
 8000324:	e7ff      	b.n	8000326 <_get_log_level_string+0x2a>
    }
}
 8000326:	4618      	mov	r0, r3
 8000328:	370c      	adds	r7, #12
 800032a:	46bd      	mov	sp, r7
 800032c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000330:	4770      	bx	lr
 8000332:	bf00      	nop
 8000334:	0800154c 	.word	0x0800154c
 8000338:	08001554 	.word	0x08001554
 800033c:	0800155c 	.word	0x0800155c

08000340 <_log>:

static void _log(LogLevel const log_level, char const * const format, va_list args)
{
 8000340:	b580      	push	{r7, lr}
 8000342:	b084      	sub	sp, #16
 8000344:	af00      	add	r7, sp, #0
 8000346:	4603      	mov	r3, r0
 8000348:	60b9      	str	r1, [r7, #8]
 800034a:	607a      	str	r2, [r7, #4]
 800034c:	73fb      	strb	r3, [r7, #15]
    if (log_level > system_log_level)
 800034e:	4b0f      	ldr	r3, [pc, #60]	; (800038c <_log+0x4c>)
 8000350:	781b      	ldrb	r3, [r3, #0]
 8000352:	7bfa      	ldrb	r2, [r7, #15]
 8000354:	429a      	cmp	r2, r3
 8000356:	d814      	bhi.n	8000382 <_log+0x42>
        return;

	printf("[%s] ", _get_log_level_string(log_level));
 8000358:	7bfb      	ldrb	r3, [r7, #15]
 800035a:	4618      	mov	r0, r3
 800035c:	f7ff ffce 	bl	80002fc <_get_log_level_string>
 8000360:	4603      	mov	r3, r0
 8000362:	4619      	mov	r1, r3
 8000364:	480a      	ldr	r0, [pc, #40]	; (8000390 <_log+0x50>)
 8000366:	f000 fcd9 	bl	8000d1c <iprintf>
	vfprintf(stdout, format, args);
 800036a:	4b0a      	ldr	r3, [pc, #40]	; (8000394 <_log+0x54>)
 800036c:	681b      	ldr	r3, [r3, #0]
 800036e:	689b      	ldr	r3, [r3, #8]
 8000370:	687a      	ldr	r2, [r7, #4]
 8000372:	68b9      	ldr	r1, [r7, #8]
 8000374:	4618      	mov	r0, r3
 8000376:	f000 fa75 	bl	8000864 <vfiprintf>
	printf("\n");
 800037a:	200a      	movs	r0, #10
 800037c:	f000 fce0 	bl	8000d40 <putchar>
 8000380:	e000      	b.n	8000384 <_log+0x44>
        return;
 8000382:	bf00      	nop
}
 8000384:	3710      	adds	r7, #16
 8000386:	46bd      	mov	sp, r7
 8000388:	bd80      	pop	{r7, pc}
 800038a:	bf00      	nop
 800038c:	20000000 	.word	0x20000000
 8000390:	08001564 	.word	0x08001564
 8000394:	2000005c 	.word	0x2000005c

08000398 <log_info>:
    _log(LOG_LEVEL_ERROR, format, args);
    va_end(args);
}

void log_info(char const * const format, ...)
{
 8000398:	b40f      	push	{r0, r1, r2, r3}
 800039a:	b580      	push	{r7, lr}
 800039c:	b082      	sub	sp, #8
 800039e:	af00      	add	r7, sp, #0
    va_list args;
	va_start(args, format);
 80003a0:	f107 0314 	add.w	r3, r7, #20
 80003a4:	607b      	str	r3, [r7, #4]
    _log(LOG_LEVEL_INFORMATION, format, args);
 80003a6:	687a      	ldr	r2, [r7, #4]
 80003a8:	6939      	ldr	r1, [r7, #16]
 80003aa:	2001      	movs	r0, #1
 80003ac:	f7ff ffc8 	bl	8000340 <_log>
    va_end(args);
}
 80003b0:	bf00      	nop
 80003b2:	3708      	adds	r7, #8
 80003b4:	46bd      	mov	sp, r7
 80003b6:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80003ba:	b004      	add	sp, #16
 80003bc:	4770      	bx	lr
	...

080003c0 <main>:
#include "Helpers/logger.h"
#include "usbd_framework.h"

int main(void)
{
 80003c0:	b580      	push	{r7, lr}
 80003c2:	af00      	add	r7, sp, #0
//	MODIFY_REG(GPIOD->MODER,GPIO_MODER_MODE13,_VAL2FLD(GPIO_MODER_MODE13,1));
//
//	// enable gpio output
//	MODIFY_REG(GPIOD->ODR,GPIO_ODR_OD13,_VAL2FLD(GPIO_ODR_OD13,1));

	log_info("Program entry point");
 80003c4:	4802      	ldr	r0, [pc, #8]	; (80003d0 <main+0x10>)
 80003c6:	f7ff ffe7 	bl	8000398 <log_info>

	usbd_initialize();
 80003ca:	f000 f8d5 	bl	8000578 <usbd_initialize>


    /* Loop forever */
	while(1){
 80003ce:	e7fe      	b.n	80003ce <main+0xe>
 80003d0:	0800158c 	.word	0x0800158c

080003d4 <configure_clock>:
// PLL : M=4, N=72, P=2 , Q=3
// APB1=2
// APB2=1

static void configure_clock(void)
{
 80003d4:	b480      	push	{r7}
 80003d6:	af00      	add	r7, sp, #0

	// set flash latency for 72MHz or 3 CPU cycles.
	MODIFY_REG(FLASH->ACR,FLASH_ACR_LATENCY,_VAL2FLD(FLASH_ACR_LATENCY,FLASH_ACR_LATENCY_2WS));//FLASH_ACR_LATENCY_2WS<<FLASH_ACR_LATENCY_Pos
 80003d8:	4b25      	ldr	r3, [pc, #148]	; (8000470 <configure_clock+0x9c>)
 80003da:	681b      	ldr	r3, [r3, #0]
 80003dc:	f023 0307 	bic.w	r3, r3, #7
 80003e0:	4a23      	ldr	r2, [pc, #140]	; (8000470 <configure_clock+0x9c>)
 80003e2:	f043 0302 	orr.w	r3, r3, #2
 80003e6:	6013      	str	r3, [r2, #0]

	// Enable HSE
	SET_BIT(RCC->CR,RCC_CR_HSEON);
 80003e8:	4b22      	ldr	r3, [pc, #136]	; (8000474 <configure_clock+0xa0>)
 80003ea:	681b      	ldr	r3, [r3, #0]
 80003ec:	4a21      	ldr	r2, [pc, #132]	; (8000474 <configure_clock+0xa0>)
 80003ee:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80003f2:	6013      	str	r3, [r2, #0]

	// wait until HSE is stable
	while(!READ_BIT(RCC->CR,RCC_CR_HSERDY));
 80003f4:	bf00      	nop
 80003f6:	4b1f      	ldr	r3, [pc, #124]	; (8000474 <configure_clock+0xa0>)
 80003f8:	681b      	ldr	r3, [r3, #0]
 80003fa:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80003fe:	2b00      	cmp	r3, #0
 8000400:	d0f9      	beq.n	80003f6 <configure_clock+0x22>

	// configure PLL
	MODIFY_REG(RCC->PLLCFGR,
 8000402:	4b1c      	ldr	r3, [pc, #112]	; (8000474 <configure_clock+0xa0>)
 8000404:	685b      	ldr	r3, [r3, #4]
 8000406:	4a1c      	ldr	r2, [pc, #112]	; (8000478 <configure_clock+0xa4>)
 8000408:	401a      	ands	r2, r3
 800040a:	491a      	ldr	r1, [pc, #104]	; (8000474 <configure_clock+0xa0>)
 800040c:	4b1b      	ldr	r3, [pc, #108]	; (800047c <configure_clock+0xa8>)
 800040e:	4313      	orrs	r3, r2
 8000410:	604b      	str	r3, [r1, #4]
			_VAL2FLD(RCC_PLLCFGR_PLLSRC,1)| // SRC: 1=> HSE
			_VAL2FLD(RCC_PLLCFGR_PLLQ,3) // Q:3
			);

	// start PLL
	SET_BIT(RCC->CR,RCC_CR_PLLON);
 8000412:	4b18      	ldr	r3, [pc, #96]	; (8000474 <configure_clock+0xa0>)
 8000414:	681b      	ldr	r3, [r3, #0]
 8000416:	4a17      	ldr	r2, [pc, #92]	; (8000474 <configure_clock+0xa0>)
 8000418:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800041c:	6013      	str	r3, [r2, #0]

	// wait until PLL is stable
	while(!READ_BIT(RCC->CR,RCC_CR_PLLRDY));
 800041e:	bf00      	nop
 8000420:	4b14      	ldr	r3, [pc, #80]	; (8000474 <configure_clock+0xa0>)
 8000422:	681b      	ldr	r3, [r3, #0]
 8000424:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000428:	2b00      	cmp	r3, #0
 800042a:	d0f9      	beq.n	8000420 <configure_clock+0x4c>

	// switch system clock to PLL
	MODIFY_REG(RCC->CFGR,RCC_CFGR_SW,_VAL2FLD(RCC_CFGR_SW,RCC_CFGR_SW_PLL));
 800042c:	4b11      	ldr	r3, [pc, #68]	; (8000474 <configure_clock+0xa0>)
 800042e:	689b      	ldr	r3, [r3, #8]
 8000430:	f023 0303 	bic.w	r3, r3, #3
 8000434:	4a0f      	ldr	r2, [pc, #60]	; (8000474 <configure_clock+0xa0>)
 8000436:	f043 0302 	orr.w	r3, r3, #2
 800043a:	6093      	str	r3, [r2, #8]

	// set APB1 prescaler
	MODIFY_REG(RCC->CFGR,RCC_CFGR_PPRE1,_VAL2FLD(RCC_CFGR_PPRE1,4)); // APB1: 2
 800043c:	4b0d      	ldr	r3, [pc, #52]	; (8000474 <configure_clock+0xa0>)
 800043e:	689b      	ldr	r3, [r3, #8]
 8000440:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8000444:	4a0b      	ldr	r2, [pc, #44]	; (8000474 <configure_clock+0xa0>)
 8000446:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800044a:	6093      	str	r3, [r2, #8]

	// wait until PLL is used
	while(READ_BIT(RCC->CFGR,RCC_CFGR_SWS)!= RCC_CFGR_SWS_PLL);
 800044c:	bf00      	nop
 800044e:	4b09      	ldr	r3, [pc, #36]	; (8000474 <configure_clock+0xa0>)
 8000450:	689b      	ldr	r3, [r3, #8]
 8000452:	f003 030c 	and.w	r3, r3, #12
 8000456:	2b08      	cmp	r3, #8
 8000458:	d1f9      	bne.n	800044e <configure_clock+0x7a>

	// disable HSI
	CLEAR_BIT(RCC->CR,RCC_CR_HSION);
 800045a:	4b06      	ldr	r3, [pc, #24]	; (8000474 <configure_clock+0xa0>)
 800045c:	681b      	ldr	r3, [r3, #0]
 800045e:	4a05      	ldr	r2, [pc, #20]	; (8000474 <configure_clock+0xa0>)
 8000460:	f023 0301 	bic.w	r3, r3, #1
 8000464:	6013      	str	r3, [r2, #0]


}
 8000466:	bf00      	nop
 8000468:	46bd      	mov	sp, r7
 800046a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800046e:	4770      	bx	lr
 8000470:	40023c00 	.word	0x40023c00
 8000474:	40023800 	.word	0x40023800
 8000478:	f0bc8000 	.word	0xf0bc8000
 800047c:	03401204 	.word	0x03401204

08000480 <SystemInit>:


}


void SystemInit(void){
 8000480:	b580      	push	{r7, lr}
 8000482:	af00      	add	r7, sp, #0
//	configure_mco1();
	configure_clock();
 8000484:	f7ff ffa6 	bl	80003d4 <configure_clock>
}
 8000488:	bf00      	nop
 800048a:	bd80      	pop	{r7, pc}

0800048c <initialize_gpio_pins>:
#include "usbd_driver.h"

void initialize_gpio_pins(void) {
 800048c:	b480      	push	{r7}
 800048e:	af00      	add	r7, sp, #0

	// Enable clock for GPIOA
	SET_BIT(RCC->AHB1ENR, RCC_AHB1ENR_GPIOAEN);
 8000490:	4b0c      	ldr	r3, [pc, #48]	; (80004c4 <initialize_gpio_pins+0x38>)
 8000492:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000494:	4a0b      	ldr	r2, [pc, #44]	; (80004c4 <initialize_gpio_pins+0x38>)
 8000496:	f043 0301 	orr.w	r3, r3, #1
 800049a:	6313      	str	r3, [r2, #48]	; 0x30

	// set alternate function of PA12(D+) and PA11(D-)
	MODIFY_REG(GPIOA->AFR[1], GPIO_AFRH_AFSEL11| GPIO_AFRH_AFSEL12,
 800049c:	4b0a      	ldr	r3, [pc, #40]	; (80004c8 <initialize_gpio_pins+0x3c>)
 800049e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80004a0:	4a09      	ldr	r2, [pc, #36]	; (80004c8 <initialize_gpio_pins+0x3c>)
 80004a2:	f423 237f 	bic.w	r3, r3, #1044480	; 0xff000
 80004a6:	6253      	str	r3, [r2, #36]	; 0x24
			_FLD2VAL(GPIO_AFRH_AFSEL11,0xC)|_FLD2VAL(GPIO_AFRH_AFSEL12,0xC));

	// Configure pins to work in USB mode
	MODIFY_REG(GPIOA->MODER, GPIO_MODER_MODE11|GPIO_MODER_MODE12,
 80004a8:	4b07      	ldr	r3, [pc, #28]	; (80004c8 <initialize_gpio_pins+0x3c>)
 80004aa:	681b      	ldr	r3, [r3, #0]
 80004ac:	f023 7370 	bic.w	r3, r3, #62914560	; 0x3c00000
 80004b0:	4a05      	ldr	r2, [pc, #20]	; (80004c8 <initialize_gpio_pins+0x3c>)
 80004b2:	f043 7320 	orr.w	r3, r3, #41943040	; 0x2800000
 80004b6:	6013      	str	r3, [r2, #0]
			_VAL2FLD(GPIO_MODER_MODE11,0x2)|_VAL2FLD(GPIO_MODER_MODE12,0X2));
}
 80004b8:	bf00      	nop
 80004ba:	46bd      	mov	sp, r7
 80004bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004c0:	4770      	bx	lr
 80004c2:	bf00      	nop
 80004c4:	40023800 	.word	0x40023800
 80004c8:	40020000 	.word	0x40020000

080004cc <initialize_usb_core>:

void initialize_usb_core(void) {
 80004cc:	b480      	push	{r7}
 80004ce:	af00      	add	r7, sp, #0

	// Enable the clock of USB core
	SET_BIT(RCC->AHB1ENR, RCC_AHB1ENR_OTGHSEN);
 80004d0:	4b19      	ldr	r3, [pc, #100]	; (8000538 <initialize_usb_core+0x6c>)
 80004d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004d4:	4a18      	ldr	r2, [pc, #96]	; (8000538 <initialize_usb_core+0x6c>)
 80004d6:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 80004da:	6313      	str	r3, [r2, #48]	; 0x30

	// Configure USB to device mode
	MODIFY_REG(USB_OTG_HS->GUSBCFG,
 80004dc:	4b17      	ldr	r3, [pc, #92]	; (800053c <initialize_usb_core+0x70>)
 80004de:	68db      	ldr	r3, [r3, #12]
 80004e0:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 80004e4:	f423 5371 	bic.w	r3, r3, #15424	; 0x3c40
 80004e8:	4a14      	ldr	r2, [pc, #80]	; (800053c <initialize_usb_core+0x70>)
 80004ea:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80004ee:	f443 5311 	orr.w	r3, r3, #9280	; 0x2440
 80004f2:	60d3      	str	r3, [r2, #12]
			USB_OTG_GUSBCFG_FDMOD | USB_OTG_GUSBCFG_PHYSEL | USB_OTG_GUSBCFG_TRDT,
			USB_OTG_GUSBCFG_FDMOD | USB_OTG_GUSBCFG_PHYSEL | _VAL2FLD( USB_OTG_GUSBCFG_TRDT,0x9));

	// Configure the device to run in full speed mode
	MODIFY_REG(USB_OTG_HS_DEVICE->DCFG, USB_OTG_DCFG_DSPD,
 80004f4:	4b12      	ldr	r3, [pc, #72]	; (8000540 <initialize_usb_core+0x74>)
 80004f6:	681b      	ldr	r3, [r3, #0]
 80004f8:	4a11      	ldr	r2, [pc, #68]	; (8000540 <initialize_usb_core+0x74>)
 80004fa:	f043 0303 	orr.w	r3, r3, #3
 80004fe:	6013      	str	r3, [r2, #0]
			_VAL2FLD(USB_OTG_DCFG_DSPD,0x3));

	// Enable VBUS sensing
	SET_BIT(USB_OTG_HS->GCCFG, USB_OTG_GCCFG_VBUSBSEN);
 8000500:	4b0e      	ldr	r3, [pc, #56]	; (800053c <initialize_usb_core+0x70>)
 8000502:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8000504:	4a0d      	ldr	r2, [pc, #52]	; (800053c <initialize_usb_core+0x70>)
 8000506:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800050a:	6393      	str	r3, [r2, #56]	; 0x38

	// unmask core interrupts
	SET_BIT(USB_OTG_HS->GINTMSK,
 800050c:	4b0b      	ldr	r3, [pc, #44]	; (800053c <initialize_usb_core+0x70>)
 800050e:	699a      	ldr	r2, [r3, #24]
 8000510:	490a      	ldr	r1, [pc, #40]	; (800053c <initialize_usb_core+0x70>)
 8000512:	4b0c      	ldr	r3, [pc, #48]	; (8000544 <initialize_usb_core+0x78>)
 8000514:	4313      	orrs	r3, r2
 8000516:	618b      	str	r3, [r1, #24]
			USB_OTG_GINTMSK_SOFM|USB_OTG_GINTMSK_USBSUSPM |
			USB_OTG_GINTMSK_WUIM | USB_OTG_GINTMSK_IEPINT |
			USB_OTG_GINTMSK_RXFLVLM);

	// clear all pending core interrupts
	WRITE_REG(USB_OTG_HS->GINTSTS,0xffffffff);
 8000518:	4b08      	ldr	r3, [pc, #32]	; (800053c <initialize_usb_core+0x70>)
 800051a:	f04f 32ff 	mov.w	r2, #4294967295
 800051e:	615a      	str	r2, [r3, #20]

	// unmask global interrupts
	SET_BIT(USB_OTG_HS->GAHBCFG,USB_OTG_GAHBCFG_GINT);
 8000520:	4b06      	ldr	r3, [pc, #24]	; (800053c <initialize_usb_core+0x70>)
 8000522:	689b      	ldr	r3, [r3, #8]
 8000524:	4a05      	ldr	r2, [pc, #20]	; (800053c <initialize_usb_core+0x70>)
 8000526:	f043 0301 	orr.w	r3, r3, #1
 800052a:	6093      	str	r3, [r2, #8]
}
 800052c:	bf00      	nop
 800052e:	46bd      	mov	sp, r7
 8000530:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000534:	4770      	bx	lr
 8000536:	bf00      	nop
 8000538:	40023800 	.word	0x40023800
 800053c:	40040000 	.word	0x40040000
 8000540:	40040800 	.word	0x40040800
 8000544:	80043818 	.word	0x80043818

08000548 <connect>:

void connect(void){
 8000548:	b480      	push	{r7}
 800054a:	af00      	add	r7, sp, #0

	// power on the transreceiver
	SET_BIT(USB_OTG_HS->GCCFG,USB_OTG_GCCFG_PWRDWN);
 800054c:	4b08      	ldr	r3, [pc, #32]	; (8000570 <connect+0x28>)
 800054e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8000550:	4a07      	ldr	r2, [pc, #28]	; (8000570 <connect+0x28>)
 8000552:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000556:	6393      	str	r3, [r2, #56]	; 0x38

	// connect device to bus
	CLEAR_BIT(USB_OTG_HS_DEVICE->DCTL,USB_OTG_DCTL_SDIS);
 8000558:	4b06      	ldr	r3, [pc, #24]	; (8000574 <connect+0x2c>)
 800055a:	685b      	ldr	r3, [r3, #4]
 800055c:	4a05      	ldr	r2, [pc, #20]	; (8000574 <connect+0x2c>)
 800055e:	f023 0302 	bic.w	r3, r3, #2
 8000562:	6053      	str	r3, [r2, #4]
}
 8000564:	bf00      	nop
 8000566:	46bd      	mov	sp, r7
 8000568:	f85d 7b04 	ldr.w	r7, [sp], #4
 800056c:	4770      	bx	lr
 800056e:	bf00      	nop
 8000570:	40040000 	.word	0x40040000
 8000574:	40040800 	.word	0x40040800

08000578 <usbd_initialize>:
#include "usbd_framework.h"
#include "usbd_driver.h"


void usbd_initialize(void){
 8000578:	b580      	push	{r7, lr}
 800057a:	af00      	add	r7, sp, #0
	initialize_gpio_pins();
 800057c:	f7ff ff86 	bl	800048c <initialize_gpio_pins>
	initialize_usb_core();
 8000580:	f7ff ffa4 	bl	80004cc <initialize_usb_core>
	connect();
 8000584:	f7ff ffe0 	bl	8000548 <connect>
}
 8000588:	bf00      	nop
 800058a:	bd80      	pop	{r7, pc}

0800058c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800058c:	480d      	ldr	r0, [pc, #52]	; (80005c4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800058e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000590:	f7ff ff76 	bl	8000480 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000594:	480c      	ldr	r0, [pc, #48]	; (80005c8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000596:	490d      	ldr	r1, [pc, #52]	; (80005cc <LoopForever+0xa>)
  ldr r2, =_sidata
 8000598:	4a0d      	ldr	r2, [pc, #52]	; (80005d0 <LoopForever+0xe>)
  movs r3, #0
 800059a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800059c:	e002      	b.n	80005a4 <LoopCopyDataInit>

0800059e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800059e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80005a0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80005a2:	3304      	adds	r3, #4

080005a4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80005a4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80005a6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80005a8:	d3f9      	bcc.n	800059e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005aa:	4a0a      	ldr	r2, [pc, #40]	; (80005d4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80005ac:	4c0a      	ldr	r4, [pc, #40]	; (80005d8 <LoopForever+0x16>)
  movs r3, #0
 80005ae:	2300      	movs	r3, #0
  b LoopFillZerobss
 80005b0:	e001      	b.n	80005b6 <LoopFillZerobss>

080005b2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80005b2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80005b4:	3204      	adds	r2, #4

080005b6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80005b6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80005b8:	d3fb      	bcc.n	80005b2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80005ba:	f000 fcef 	bl	8000f9c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80005be:	f7ff feff 	bl	80003c0 <main>

080005c2 <LoopForever>:

LoopForever:
  b LoopForever
 80005c2:	e7fe      	b.n	80005c2 <LoopForever>
  ldr   r0, =_estack
 80005c4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80005c8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005cc:	20000060 	.word	0x20000060
  ldr r2, =_sidata
 80005d0:	080015dc 	.word	0x080015dc
  ldr r2, =_sbss
 80005d4:	20000060 	.word	0x20000060
  ldr r4, =_ebss
 80005d8:	200001cc 	.word	0x200001cc

080005dc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80005dc:	e7fe      	b.n	80005dc <ADC_IRQHandler>

080005de <__sfputc_r>:
 80005de:	6893      	ldr	r3, [r2, #8]
 80005e0:	3b01      	subs	r3, #1
 80005e2:	2b00      	cmp	r3, #0
 80005e4:	b410      	push	{r4}
 80005e6:	6093      	str	r3, [r2, #8]
 80005e8:	da08      	bge.n	80005fc <__sfputc_r+0x1e>
 80005ea:	6994      	ldr	r4, [r2, #24]
 80005ec:	42a3      	cmp	r3, r4
 80005ee:	db01      	blt.n	80005f4 <__sfputc_r+0x16>
 80005f0:	290a      	cmp	r1, #10
 80005f2:	d103      	bne.n	80005fc <__sfputc_r+0x1e>
 80005f4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80005f8:	f000 bbed 	b.w	8000dd6 <__swbuf_r>
 80005fc:	6813      	ldr	r3, [r2, #0]
 80005fe:	1c58      	adds	r0, r3, #1
 8000600:	6010      	str	r0, [r2, #0]
 8000602:	7019      	strb	r1, [r3, #0]
 8000604:	4608      	mov	r0, r1
 8000606:	f85d 4b04 	ldr.w	r4, [sp], #4
 800060a:	4770      	bx	lr

0800060c <__sfputs_r>:
 800060c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800060e:	4606      	mov	r6, r0
 8000610:	460f      	mov	r7, r1
 8000612:	4614      	mov	r4, r2
 8000614:	18d5      	adds	r5, r2, r3
 8000616:	42ac      	cmp	r4, r5
 8000618:	d101      	bne.n	800061e <__sfputs_r+0x12>
 800061a:	2000      	movs	r0, #0
 800061c:	e007      	b.n	800062e <__sfputs_r+0x22>
 800061e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000622:	463a      	mov	r2, r7
 8000624:	4630      	mov	r0, r6
 8000626:	f7ff ffda 	bl	80005de <__sfputc_r>
 800062a:	1c43      	adds	r3, r0, #1
 800062c:	d1f3      	bne.n	8000616 <__sfputs_r+0xa>
 800062e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08000630 <_vfiprintf_r>:
 8000630:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000634:	460d      	mov	r5, r1
 8000636:	b09d      	sub	sp, #116	; 0x74
 8000638:	4614      	mov	r4, r2
 800063a:	4698      	mov	r8, r3
 800063c:	4606      	mov	r6, r0
 800063e:	b118      	cbz	r0, 8000648 <_vfiprintf_r+0x18>
 8000640:	6a03      	ldr	r3, [r0, #32]
 8000642:	b90b      	cbnz	r3, 8000648 <_vfiprintf_r+0x18>
 8000644:	f000 fb34 	bl	8000cb0 <__sinit>
 8000648:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800064a:	07d9      	lsls	r1, r3, #31
 800064c:	d405      	bmi.n	800065a <_vfiprintf_r+0x2a>
 800064e:	89ab      	ldrh	r3, [r5, #12]
 8000650:	059a      	lsls	r2, r3, #22
 8000652:	d402      	bmi.n	800065a <_vfiprintf_r+0x2a>
 8000654:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000656:	f000 fcc6 	bl	8000fe6 <__retarget_lock_acquire_recursive>
 800065a:	89ab      	ldrh	r3, [r5, #12]
 800065c:	071b      	lsls	r3, r3, #28
 800065e:	d501      	bpl.n	8000664 <_vfiprintf_r+0x34>
 8000660:	692b      	ldr	r3, [r5, #16]
 8000662:	b99b      	cbnz	r3, 800068c <_vfiprintf_r+0x5c>
 8000664:	4629      	mov	r1, r5
 8000666:	4630      	mov	r0, r6
 8000668:	f000 fbf2 	bl	8000e50 <__swsetup_r>
 800066c:	b170      	cbz	r0, 800068c <_vfiprintf_r+0x5c>
 800066e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000670:	07dc      	lsls	r4, r3, #31
 8000672:	d504      	bpl.n	800067e <_vfiprintf_r+0x4e>
 8000674:	f04f 30ff 	mov.w	r0, #4294967295
 8000678:	b01d      	add	sp, #116	; 0x74
 800067a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800067e:	89ab      	ldrh	r3, [r5, #12]
 8000680:	0598      	lsls	r0, r3, #22
 8000682:	d4f7      	bmi.n	8000674 <_vfiprintf_r+0x44>
 8000684:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000686:	f000 fcaf 	bl	8000fe8 <__retarget_lock_release_recursive>
 800068a:	e7f3      	b.n	8000674 <_vfiprintf_r+0x44>
 800068c:	2300      	movs	r3, #0
 800068e:	9309      	str	r3, [sp, #36]	; 0x24
 8000690:	2320      	movs	r3, #32
 8000692:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000696:	f8cd 800c 	str.w	r8, [sp, #12]
 800069a:	2330      	movs	r3, #48	; 0x30
 800069c:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000850 <_vfiprintf_r+0x220>
 80006a0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80006a4:	f04f 0901 	mov.w	r9, #1
 80006a8:	4623      	mov	r3, r4
 80006aa:	469a      	mov	sl, r3
 80006ac:	f813 2b01 	ldrb.w	r2, [r3], #1
 80006b0:	b10a      	cbz	r2, 80006b6 <_vfiprintf_r+0x86>
 80006b2:	2a25      	cmp	r2, #37	; 0x25
 80006b4:	d1f9      	bne.n	80006aa <_vfiprintf_r+0x7a>
 80006b6:	ebba 0b04 	subs.w	fp, sl, r4
 80006ba:	d00b      	beq.n	80006d4 <_vfiprintf_r+0xa4>
 80006bc:	465b      	mov	r3, fp
 80006be:	4622      	mov	r2, r4
 80006c0:	4629      	mov	r1, r5
 80006c2:	4630      	mov	r0, r6
 80006c4:	f7ff ffa2 	bl	800060c <__sfputs_r>
 80006c8:	3001      	adds	r0, #1
 80006ca:	f000 80a9 	beq.w	8000820 <_vfiprintf_r+0x1f0>
 80006ce:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80006d0:	445a      	add	r2, fp
 80006d2:	9209      	str	r2, [sp, #36]	; 0x24
 80006d4:	f89a 3000 	ldrb.w	r3, [sl]
 80006d8:	2b00      	cmp	r3, #0
 80006da:	f000 80a1 	beq.w	8000820 <_vfiprintf_r+0x1f0>
 80006de:	2300      	movs	r3, #0
 80006e0:	f04f 32ff 	mov.w	r2, #4294967295
 80006e4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80006e8:	f10a 0a01 	add.w	sl, sl, #1
 80006ec:	9304      	str	r3, [sp, #16]
 80006ee:	9307      	str	r3, [sp, #28]
 80006f0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80006f4:	931a      	str	r3, [sp, #104]	; 0x68
 80006f6:	4654      	mov	r4, sl
 80006f8:	2205      	movs	r2, #5
 80006fa:	f814 1b01 	ldrb.w	r1, [r4], #1
 80006fe:	4854      	ldr	r0, [pc, #336]	; (8000850 <_vfiprintf_r+0x220>)
 8000700:	f7ff fd66 	bl	80001d0 <memchr>
 8000704:	9a04      	ldr	r2, [sp, #16]
 8000706:	b9d8      	cbnz	r0, 8000740 <_vfiprintf_r+0x110>
 8000708:	06d1      	lsls	r1, r2, #27
 800070a:	bf44      	itt	mi
 800070c:	2320      	movmi	r3, #32
 800070e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000712:	0713      	lsls	r3, r2, #28
 8000714:	bf44      	itt	mi
 8000716:	232b      	movmi	r3, #43	; 0x2b
 8000718:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800071c:	f89a 3000 	ldrb.w	r3, [sl]
 8000720:	2b2a      	cmp	r3, #42	; 0x2a
 8000722:	d015      	beq.n	8000750 <_vfiprintf_r+0x120>
 8000724:	9a07      	ldr	r2, [sp, #28]
 8000726:	4654      	mov	r4, sl
 8000728:	2000      	movs	r0, #0
 800072a:	f04f 0c0a 	mov.w	ip, #10
 800072e:	4621      	mov	r1, r4
 8000730:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000734:	3b30      	subs	r3, #48	; 0x30
 8000736:	2b09      	cmp	r3, #9
 8000738:	d94d      	bls.n	80007d6 <_vfiprintf_r+0x1a6>
 800073a:	b1b0      	cbz	r0, 800076a <_vfiprintf_r+0x13a>
 800073c:	9207      	str	r2, [sp, #28]
 800073e:	e014      	b.n	800076a <_vfiprintf_r+0x13a>
 8000740:	eba0 0308 	sub.w	r3, r0, r8
 8000744:	fa09 f303 	lsl.w	r3, r9, r3
 8000748:	4313      	orrs	r3, r2
 800074a:	9304      	str	r3, [sp, #16]
 800074c:	46a2      	mov	sl, r4
 800074e:	e7d2      	b.n	80006f6 <_vfiprintf_r+0xc6>
 8000750:	9b03      	ldr	r3, [sp, #12]
 8000752:	1d19      	adds	r1, r3, #4
 8000754:	681b      	ldr	r3, [r3, #0]
 8000756:	9103      	str	r1, [sp, #12]
 8000758:	2b00      	cmp	r3, #0
 800075a:	bfbb      	ittet	lt
 800075c:	425b      	neglt	r3, r3
 800075e:	f042 0202 	orrlt.w	r2, r2, #2
 8000762:	9307      	strge	r3, [sp, #28]
 8000764:	9307      	strlt	r3, [sp, #28]
 8000766:	bfb8      	it	lt
 8000768:	9204      	strlt	r2, [sp, #16]
 800076a:	7823      	ldrb	r3, [r4, #0]
 800076c:	2b2e      	cmp	r3, #46	; 0x2e
 800076e:	d10c      	bne.n	800078a <_vfiprintf_r+0x15a>
 8000770:	7863      	ldrb	r3, [r4, #1]
 8000772:	2b2a      	cmp	r3, #42	; 0x2a
 8000774:	d134      	bne.n	80007e0 <_vfiprintf_r+0x1b0>
 8000776:	9b03      	ldr	r3, [sp, #12]
 8000778:	1d1a      	adds	r2, r3, #4
 800077a:	681b      	ldr	r3, [r3, #0]
 800077c:	9203      	str	r2, [sp, #12]
 800077e:	2b00      	cmp	r3, #0
 8000780:	bfb8      	it	lt
 8000782:	f04f 33ff 	movlt.w	r3, #4294967295
 8000786:	3402      	adds	r4, #2
 8000788:	9305      	str	r3, [sp, #20]
 800078a:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8000860 <_vfiprintf_r+0x230>
 800078e:	7821      	ldrb	r1, [r4, #0]
 8000790:	2203      	movs	r2, #3
 8000792:	4650      	mov	r0, sl
 8000794:	f7ff fd1c 	bl	80001d0 <memchr>
 8000798:	b138      	cbz	r0, 80007aa <_vfiprintf_r+0x17a>
 800079a:	9b04      	ldr	r3, [sp, #16]
 800079c:	eba0 000a 	sub.w	r0, r0, sl
 80007a0:	2240      	movs	r2, #64	; 0x40
 80007a2:	4082      	lsls	r2, r0
 80007a4:	4313      	orrs	r3, r2
 80007a6:	3401      	adds	r4, #1
 80007a8:	9304      	str	r3, [sp, #16]
 80007aa:	f814 1b01 	ldrb.w	r1, [r4], #1
 80007ae:	4829      	ldr	r0, [pc, #164]	; (8000854 <_vfiprintf_r+0x224>)
 80007b0:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80007b4:	2206      	movs	r2, #6
 80007b6:	f7ff fd0b 	bl	80001d0 <memchr>
 80007ba:	2800      	cmp	r0, #0
 80007bc:	d03f      	beq.n	800083e <_vfiprintf_r+0x20e>
 80007be:	4b26      	ldr	r3, [pc, #152]	; (8000858 <_vfiprintf_r+0x228>)
 80007c0:	bb1b      	cbnz	r3, 800080a <_vfiprintf_r+0x1da>
 80007c2:	9b03      	ldr	r3, [sp, #12]
 80007c4:	3307      	adds	r3, #7
 80007c6:	f023 0307 	bic.w	r3, r3, #7
 80007ca:	3308      	adds	r3, #8
 80007cc:	9303      	str	r3, [sp, #12]
 80007ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80007d0:	443b      	add	r3, r7
 80007d2:	9309      	str	r3, [sp, #36]	; 0x24
 80007d4:	e768      	b.n	80006a8 <_vfiprintf_r+0x78>
 80007d6:	fb0c 3202 	mla	r2, ip, r2, r3
 80007da:	460c      	mov	r4, r1
 80007dc:	2001      	movs	r0, #1
 80007de:	e7a6      	b.n	800072e <_vfiprintf_r+0xfe>
 80007e0:	2300      	movs	r3, #0
 80007e2:	3401      	adds	r4, #1
 80007e4:	9305      	str	r3, [sp, #20]
 80007e6:	4619      	mov	r1, r3
 80007e8:	f04f 0c0a 	mov.w	ip, #10
 80007ec:	4620      	mov	r0, r4
 80007ee:	f810 2b01 	ldrb.w	r2, [r0], #1
 80007f2:	3a30      	subs	r2, #48	; 0x30
 80007f4:	2a09      	cmp	r2, #9
 80007f6:	d903      	bls.n	8000800 <_vfiprintf_r+0x1d0>
 80007f8:	2b00      	cmp	r3, #0
 80007fa:	d0c6      	beq.n	800078a <_vfiprintf_r+0x15a>
 80007fc:	9105      	str	r1, [sp, #20]
 80007fe:	e7c4      	b.n	800078a <_vfiprintf_r+0x15a>
 8000800:	fb0c 2101 	mla	r1, ip, r1, r2
 8000804:	4604      	mov	r4, r0
 8000806:	2301      	movs	r3, #1
 8000808:	e7f0      	b.n	80007ec <_vfiprintf_r+0x1bc>
 800080a:	ab03      	add	r3, sp, #12
 800080c:	9300      	str	r3, [sp, #0]
 800080e:	462a      	mov	r2, r5
 8000810:	4b12      	ldr	r3, [pc, #72]	; (800085c <_vfiprintf_r+0x22c>)
 8000812:	a904      	add	r1, sp, #16
 8000814:	4630      	mov	r0, r6
 8000816:	f3af 8000 	nop.w
 800081a:	4607      	mov	r7, r0
 800081c:	1c78      	adds	r0, r7, #1
 800081e:	d1d6      	bne.n	80007ce <_vfiprintf_r+0x19e>
 8000820:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000822:	07d9      	lsls	r1, r3, #31
 8000824:	d405      	bmi.n	8000832 <_vfiprintf_r+0x202>
 8000826:	89ab      	ldrh	r3, [r5, #12]
 8000828:	059a      	lsls	r2, r3, #22
 800082a:	d402      	bmi.n	8000832 <_vfiprintf_r+0x202>
 800082c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800082e:	f000 fbdb 	bl	8000fe8 <__retarget_lock_release_recursive>
 8000832:	89ab      	ldrh	r3, [r5, #12]
 8000834:	065b      	lsls	r3, r3, #25
 8000836:	f53f af1d 	bmi.w	8000674 <_vfiprintf_r+0x44>
 800083a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800083c:	e71c      	b.n	8000678 <_vfiprintf_r+0x48>
 800083e:	ab03      	add	r3, sp, #12
 8000840:	9300      	str	r3, [sp, #0]
 8000842:	462a      	mov	r2, r5
 8000844:	4b05      	ldr	r3, [pc, #20]	; (800085c <_vfiprintf_r+0x22c>)
 8000846:	a904      	add	r1, sp, #16
 8000848:	4630      	mov	r0, r6
 800084a:	f000 f883 	bl	8000954 <_printf_i>
 800084e:	e7e4      	b.n	800081a <_vfiprintf_r+0x1ea>
 8000850:	080015a0 	.word	0x080015a0
 8000854:	080015aa 	.word	0x080015aa
 8000858:	00000000 	.word	0x00000000
 800085c:	0800060d 	.word	0x0800060d
 8000860:	080015a6 	.word	0x080015a6

08000864 <vfiprintf>:
 8000864:	4613      	mov	r3, r2
 8000866:	460a      	mov	r2, r1
 8000868:	4601      	mov	r1, r0
 800086a:	4802      	ldr	r0, [pc, #8]	; (8000874 <vfiprintf+0x10>)
 800086c:	6800      	ldr	r0, [r0, #0]
 800086e:	f7ff bedf 	b.w	8000630 <_vfiprintf_r>
 8000872:	bf00      	nop
 8000874:	2000005c 	.word	0x2000005c

08000878 <_printf_common>:
 8000878:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800087c:	4616      	mov	r6, r2
 800087e:	4699      	mov	r9, r3
 8000880:	688a      	ldr	r2, [r1, #8]
 8000882:	690b      	ldr	r3, [r1, #16]
 8000884:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000888:	4293      	cmp	r3, r2
 800088a:	bfb8      	it	lt
 800088c:	4613      	movlt	r3, r2
 800088e:	6033      	str	r3, [r6, #0]
 8000890:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000894:	4607      	mov	r7, r0
 8000896:	460c      	mov	r4, r1
 8000898:	b10a      	cbz	r2, 800089e <_printf_common+0x26>
 800089a:	3301      	adds	r3, #1
 800089c:	6033      	str	r3, [r6, #0]
 800089e:	6823      	ldr	r3, [r4, #0]
 80008a0:	0699      	lsls	r1, r3, #26
 80008a2:	bf42      	ittt	mi
 80008a4:	6833      	ldrmi	r3, [r6, #0]
 80008a6:	3302      	addmi	r3, #2
 80008a8:	6033      	strmi	r3, [r6, #0]
 80008aa:	6825      	ldr	r5, [r4, #0]
 80008ac:	f015 0506 	ands.w	r5, r5, #6
 80008b0:	d106      	bne.n	80008c0 <_printf_common+0x48>
 80008b2:	f104 0a19 	add.w	sl, r4, #25
 80008b6:	68e3      	ldr	r3, [r4, #12]
 80008b8:	6832      	ldr	r2, [r6, #0]
 80008ba:	1a9b      	subs	r3, r3, r2
 80008bc:	42ab      	cmp	r3, r5
 80008be:	dc26      	bgt.n	800090e <_printf_common+0x96>
 80008c0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80008c4:	1e13      	subs	r3, r2, #0
 80008c6:	6822      	ldr	r2, [r4, #0]
 80008c8:	bf18      	it	ne
 80008ca:	2301      	movne	r3, #1
 80008cc:	0692      	lsls	r2, r2, #26
 80008ce:	d42b      	bmi.n	8000928 <_printf_common+0xb0>
 80008d0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80008d4:	4649      	mov	r1, r9
 80008d6:	4638      	mov	r0, r7
 80008d8:	47c0      	blx	r8
 80008da:	3001      	adds	r0, #1
 80008dc:	d01e      	beq.n	800091c <_printf_common+0xa4>
 80008de:	6823      	ldr	r3, [r4, #0]
 80008e0:	6922      	ldr	r2, [r4, #16]
 80008e2:	f003 0306 	and.w	r3, r3, #6
 80008e6:	2b04      	cmp	r3, #4
 80008e8:	bf02      	ittt	eq
 80008ea:	68e5      	ldreq	r5, [r4, #12]
 80008ec:	6833      	ldreq	r3, [r6, #0]
 80008ee:	1aed      	subeq	r5, r5, r3
 80008f0:	68a3      	ldr	r3, [r4, #8]
 80008f2:	bf0c      	ite	eq
 80008f4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80008f8:	2500      	movne	r5, #0
 80008fa:	4293      	cmp	r3, r2
 80008fc:	bfc4      	itt	gt
 80008fe:	1a9b      	subgt	r3, r3, r2
 8000900:	18ed      	addgt	r5, r5, r3
 8000902:	2600      	movs	r6, #0
 8000904:	341a      	adds	r4, #26
 8000906:	42b5      	cmp	r5, r6
 8000908:	d11a      	bne.n	8000940 <_printf_common+0xc8>
 800090a:	2000      	movs	r0, #0
 800090c:	e008      	b.n	8000920 <_printf_common+0xa8>
 800090e:	2301      	movs	r3, #1
 8000910:	4652      	mov	r2, sl
 8000912:	4649      	mov	r1, r9
 8000914:	4638      	mov	r0, r7
 8000916:	47c0      	blx	r8
 8000918:	3001      	adds	r0, #1
 800091a:	d103      	bne.n	8000924 <_printf_common+0xac>
 800091c:	f04f 30ff 	mov.w	r0, #4294967295
 8000920:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000924:	3501      	adds	r5, #1
 8000926:	e7c6      	b.n	80008b6 <_printf_common+0x3e>
 8000928:	18e1      	adds	r1, r4, r3
 800092a:	1c5a      	adds	r2, r3, #1
 800092c:	2030      	movs	r0, #48	; 0x30
 800092e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000932:	4422      	add	r2, r4
 8000934:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000938:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800093c:	3302      	adds	r3, #2
 800093e:	e7c7      	b.n	80008d0 <_printf_common+0x58>
 8000940:	2301      	movs	r3, #1
 8000942:	4622      	mov	r2, r4
 8000944:	4649      	mov	r1, r9
 8000946:	4638      	mov	r0, r7
 8000948:	47c0      	blx	r8
 800094a:	3001      	adds	r0, #1
 800094c:	d0e6      	beq.n	800091c <_printf_common+0xa4>
 800094e:	3601      	adds	r6, #1
 8000950:	e7d9      	b.n	8000906 <_printf_common+0x8e>
	...

08000954 <_printf_i>:
 8000954:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000958:	7e0f      	ldrb	r7, [r1, #24]
 800095a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800095c:	2f78      	cmp	r7, #120	; 0x78
 800095e:	4691      	mov	r9, r2
 8000960:	4680      	mov	r8, r0
 8000962:	460c      	mov	r4, r1
 8000964:	469a      	mov	sl, r3
 8000966:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800096a:	d807      	bhi.n	800097c <_printf_i+0x28>
 800096c:	2f62      	cmp	r7, #98	; 0x62
 800096e:	d80a      	bhi.n	8000986 <_printf_i+0x32>
 8000970:	2f00      	cmp	r7, #0
 8000972:	f000 80d4 	beq.w	8000b1e <_printf_i+0x1ca>
 8000976:	2f58      	cmp	r7, #88	; 0x58
 8000978:	f000 80c0 	beq.w	8000afc <_printf_i+0x1a8>
 800097c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000980:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000984:	e03a      	b.n	80009fc <_printf_i+0xa8>
 8000986:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800098a:	2b15      	cmp	r3, #21
 800098c:	d8f6      	bhi.n	800097c <_printf_i+0x28>
 800098e:	a101      	add	r1, pc, #4	; (adr r1, 8000994 <_printf_i+0x40>)
 8000990:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000994:	080009ed 	.word	0x080009ed
 8000998:	08000a01 	.word	0x08000a01
 800099c:	0800097d 	.word	0x0800097d
 80009a0:	0800097d 	.word	0x0800097d
 80009a4:	0800097d 	.word	0x0800097d
 80009a8:	0800097d 	.word	0x0800097d
 80009ac:	08000a01 	.word	0x08000a01
 80009b0:	0800097d 	.word	0x0800097d
 80009b4:	0800097d 	.word	0x0800097d
 80009b8:	0800097d 	.word	0x0800097d
 80009bc:	0800097d 	.word	0x0800097d
 80009c0:	08000b05 	.word	0x08000b05
 80009c4:	08000a2d 	.word	0x08000a2d
 80009c8:	08000abf 	.word	0x08000abf
 80009cc:	0800097d 	.word	0x0800097d
 80009d0:	0800097d 	.word	0x0800097d
 80009d4:	08000b27 	.word	0x08000b27
 80009d8:	0800097d 	.word	0x0800097d
 80009dc:	08000a2d 	.word	0x08000a2d
 80009e0:	0800097d 	.word	0x0800097d
 80009e4:	0800097d 	.word	0x0800097d
 80009e8:	08000ac7 	.word	0x08000ac7
 80009ec:	682b      	ldr	r3, [r5, #0]
 80009ee:	1d1a      	adds	r2, r3, #4
 80009f0:	681b      	ldr	r3, [r3, #0]
 80009f2:	602a      	str	r2, [r5, #0]
 80009f4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80009f8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80009fc:	2301      	movs	r3, #1
 80009fe:	e09f      	b.n	8000b40 <_printf_i+0x1ec>
 8000a00:	6820      	ldr	r0, [r4, #0]
 8000a02:	682b      	ldr	r3, [r5, #0]
 8000a04:	0607      	lsls	r7, r0, #24
 8000a06:	f103 0104 	add.w	r1, r3, #4
 8000a0a:	6029      	str	r1, [r5, #0]
 8000a0c:	d501      	bpl.n	8000a12 <_printf_i+0xbe>
 8000a0e:	681e      	ldr	r6, [r3, #0]
 8000a10:	e003      	b.n	8000a1a <_printf_i+0xc6>
 8000a12:	0646      	lsls	r6, r0, #25
 8000a14:	d5fb      	bpl.n	8000a0e <_printf_i+0xba>
 8000a16:	f9b3 6000 	ldrsh.w	r6, [r3]
 8000a1a:	2e00      	cmp	r6, #0
 8000a1c:	da03      	bge.n	8000a26 <_printf_i+0xd2>
 8000a1e:	232d      	movs	r3, #45	; 0x2d
 8000a20:	4276      	negs	r6, r6
 8000a22:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000a26:	485a      	ldr	r0, [pc, #360]	; (8000b90 <_printf_i+0x23c>)
 8000a28:	230a      	movs	r3, #10
 8000a2a:	e012      	b.n	8000a52 <_printf_i+0xfe>
 8000a2c:	682b      	ldr	r3, [r5, #0]
 8000a2e:	6820      	ldr	r0, [r4, #0]
 8000a30:	1d19      	adds	r1, r3, #4
 8000a32:	6029      	str	r1, [r5, #0]
 8000a34:	0605      	lsls	r5, r0, #24
 8000a36:	d501      	bpl.n	8000a3c <_printf_i+0xe8>
 8000a38:	681e      	ldr	r6, [r3, #0]
 8000a3a:	e002      	b.n	8000a42 <_printf_i+0xee>
 8000a3c:	0641      	lsls	r1, r0, #25
 8000a3e:	d5fb      	bpl.n	8000a38 <_printf_i+0xe4>
 8000a40:	881e      	ldrh	r6, [r3, #0]
 8000a42:	4853      	ldr	r0, [pc, #332]	; (8000b90 <_printf_i+0x23c>)
 8000a44:	2f6f      	cmp	r7, #111	; 0x6f
 8000a46:	bf0c      	ite	eq
 8000a48:	2308      	moveq	r3, #8
 8000a4a:	230a      	movne	r3, #10
 8000a4c:	2100      	movs	r1, #0
 8000a4e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000a52:	6865      	ldr	r5, [r4, #4]
 8000a54:	60a5      	str	r5, [r4, #8]
 8000a56:	2d00      	cmp	r5, #0
 8000a58:	bfa2      	ittt	ge
 8000a5a:	6821      	ldrge	r1, [r4, #0]
 8000a5c:	f021 0104 	bicge.w	r1, r1, #4
 8000a60:	6021      	strge	r1, [r4, #0]
 8000a62:	b90e      	cbnz	r6, 8000a68 <_printf_i+0x114>
 8000a64:	2d00      	cmp	r5, #0
 8000a66:	d04b      	beq.n	8000b00 <_printf_i+0x1ac>
 8000a68:	4615      	mov	r5, r2
 8000a6a:	fbb6 f1f3 	udiv	r1, r6, r3
 8000a6e:	fb03 6711 	mls	r7, r3, r1, r6
 8000a72:	5dc7      	ldrb	r7, [r0, r7]
 8000a74:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000a78:	4637      	mov	r7, r6
 8000a7a:	42bb      	cmp	r3, r7
 8000a7c:	460e      	mov	r6, r1
 8000a7e:	d9f4      	bls.n	8000a6a <_printf_i+0x116>
 8000a80:	2b08      	cmp	r3, #8
 8000a82:	d10b      	bne.n	8000a9c <_printf_i+0x148>
 8000a84:	6823      	ldr	r3, [r4, #0]
 8000a86:	07de      	lsls	r6, r3, #31
 8000a88:	d508      	bpl.n	8000a9c <_printf_i+0x148>
 8000a8a:	6923      	ldr	r3, [r4, #16]
 8000a8c:	6861      	ldr	r1, [r4, #4]
 8000a8e:	4299      	cmp	r1, r3
 8000a90:	bfde      	ittt	le
 8000a92:	2330      	movle	r3, #48	; 0x30
 8000a94:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000a98:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000a9c:	1b52      	subs	r2, r2, r5
 8000a9e:	6122      	str	r2, [r4, #16]
 8000aa0:	f8cd a000 	str.w	sl, [sp]
 8000aa4:	464b      	mov	r3, r9
 8000aa6:	aa03      	add	r2, sp, #12
 8000aa8:	4621      	mov	r1, r4
 8000aaa:	4640      	mov	r0, r8
 8000aac:	f7ff fee4 	bl	8000878 <_printf_common>
 8000ab0:	3001      	adds	r0, #1
 8000ab2:	d14a      	bne.n	8000b4a <_printf_i+0x1f6>
 8000ab4:	f04f 30ff 	mov.w	r0, #4294967295
 8000ab8:	b004      	add	sp, #16
 8000aba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000abe:	6823      	ldr	r3, [r4, #0]
 8000ac0:	f043 0320 	orr.w	r3, r3, #32
 8000ac4:	6023      	str	r3, [r4, #0]
 8000ac6:	4833      	ldr	r0, [pc, #204]	; (8000b94 <_printf_i+0x240>)
 8000ac8:	2778      	movs	r7, #120	; 0x78
 8000aca:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000ace:	6823      	ldr	r3, [r4, #0]
 8000ad0:	6829      	ldr	r1, [r5, #0]
 8000ad2:	061f      	lsls	r7, r3, #24
 8000ad4:	f851 6b04 	ldr.w	r6, [r1], #4
 8000ad8:	d402      	bmi.n	8000ae0 <_printf_i+0x18c>
 8000ada:	065f      	lsls	r7, r3, #25
 8000adc:	bf48      	it	mi
 8000ade:	b2b6      	uxthmi	r6, r6
 8000ae0:	07df      	lsls	r7, r3, #31
 8000ae2:	bf48      	it	mi
 8000ae4:	f043 0320 	orrmi.w	r3, r3, #32
 8000ae8:	6029      	str	r1, [r5, #0]
 8000aea:	bf48      	it	mi
 8000aec:	6023      	strmi	r3, [r4, #0]
 8000aee:	b91e      	cbnz	r6, 8000af8 <_printf_i+0x1a4>
 8000af0:	6823      	ldr	r3, [r4, #0]
 8000af2:	f023 0320 	bic.w	r3, r3, #32
 8000af6:	6023      	str	r3, [r4, #0]
 8000af8:	2310      	movs	r3, #16
 8000afa:	e7a7      	b.n	8000a4c <_printf_i+0xf8>
 8000afc:	4824      	ldr	r0, [pc, #144]	; (8000b90 <_printf_i+0x23c>)
 8000afe:	e7e4      	b.n	8000aca <_printf_i+0x176>
 8000b00:	4615      	mov	r5, r2
 8000b02:	e7bd      	b.n	8000a80 <_printf_i+0x12c>
 8000b04:	682b      	ldr	r3, [r5, #0]
 8000b06:	6826      	ldr	r6, [r4, #0]
 8000b08:	6961      	ldr	r1, [r4, #20]
 8000b0a:	1d18      	adds	r0, r3, #4
 8000b0c:	6028      	str	r0, [r5, #0]
 8000b0e:	0635      	lsls	r5, r6, #24
 8000b10:	681b      	ldr	r3, [r3, #0]
 8000b12:	d501      	bpl.n	8000b18 <_printf_i+0x1c4>
 8000b14:	6019      	str	r1, [r3, #0]
 8000b16:	e002      	b.n	8000b1e <_printf_i+0x1ca>
 8000b18:	0670      	lsls	r0, r6, #25
 8000b1a:	d5fb      	bpl.n	8000b14 <_printf_i+0x1c0>
 8000b1c:	8019      	strh	r1, [r3, #0]
 8000b1e:	2300      	movs	r3, #0
 8000b20:	6123      	str	r3, [r4, #16]
 8000b22:	4615      	mov	r5, r2
 8000b24:	e7bc      	b.n	8000aa0 <_printf_i+0x14c>
 8000b26:	682b      	ldr	r3, [r5, #0]
 8000b28:	1d1a      	adds	r2, r3, #4
 8000b2a:	602a      	str	r2, [r5, #0]
 8000b2c:	681d      	ldr	r5, [r3, #0]
 8000b2e:	6862      	ldr	r2, [r4, #4]
 8000b30:	2100      	movs	r1, #0
 8000b32:	4628      	mov	r0, r5
 8000b34:	f7ff fb4c 	bl	80001d0 <memchr>
 8000b38:	b108      	cbz	r0, 8000b3e <_printf_i+0x1ea>
 8000b3a:	1b40      	subs	r0, r0, r5
 8000b3c:	6060      	str	r0, [r4, #4]
 8000b3e:	6863      	ldr	r3, [r4, #4]
 8000b40:	6123      	str	r3, [r4, #16]
 8000b42:	2300      	movs	r3, #0
 8000b44:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000b48:	e7aa      	b.n	8000aa0 <_printf_i+0x14c>
 8000b4a:	6923      	ldr	r3, [r4, #16]
 8000b4c:	462a      	mov	r2, r5
 8000b4e:	4649      	mov	r1, r9
 8000b50:	4640      	mov	r0, r8
 8000b52:	47d0      	blx	sl
 8000b54:	3001      	adds	r0, #1
 8000b56:	d0ad      	beq.n	8000ab4 <_printf_i+0x160>
 8000b58:	6823      	ldr	r3, [r4, #0]
 8000b5a:	079b      	lsls	r3, r3, #30
 8000b5c:	d413      	bmi.n	8000b86 <_printf_i+0x232>
 8000b5e:	68e0      	ldr	r0, [r4, #12]
 8000b60:	9b03      	ldr	r3, [sp, #12]
 8000b62:	4298      	cmp	r0, r3
 8000b64:	bfb8      	it	lt
 8000b66:	4618      	movlt	r0, r3
 8000b68:	e7a6      	b.n	8000ab8 <_printf_i+0x164>
 8000b6a:	2301      	movs	r3, #1
 8000b6c:	4632      	mov	r2, r6
 8000b6e:	4649      	mov	r1, r9
 8000b70:	4640      	mov	r0, r8
 8000b72:	47d0      	blx	sl
 8000b74:	3001      	adds	r0, #1
 8000b76:	d09d      	beq.n	8000ab4 <_printf_i+0x160>
 8000b78:	3501      	adds	r5, #1
 8000b7a:	68e3      	ldr	r3, [r4, #12]
 8000b7c:	9903      	ldr	r1, [sp, #12]
 8000b7e:	1a5b      	subs	r3, r3, r1
 8000b80:	42ab      	cmp	r3, r5
 8000b82:	dcf2      	bgt.n	8000b6a <_printf_i+0x216>
 8000b84:	e7eb      	b.n	8000b5e <_printf_i+0x20a>
 8000b86:	2500      	movs	r5, #0
 8000b88:	f104 0619 	add.w	r6, r4, #25
 8000b8c:	e7f5      	b.n	8000b7a <_printf_i+0x226>
 8000b8e:	bf00      	nop
 8000b90:	080015b1 	.word	0x080015b1
 8000b94:	080015c2 	.word	0x080015c2

08000b98 <std>:
 8000b98:	2300      	movs	r3, #0
 8000b9a:	b510      	push	{r4, lr}
 8000b9c:	4604      	mov	r4, r0
 8000b9e:	e9c0 3300 	strd	r3, r3, [r0]
 8000ba2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000ba6:	6083      	str	r3, [r0, #8]
 8000ba8:	8181      	strh	r1, [r0, #12]
 8000baa:	6643      	str	r3, [r0, #100]	; 0x64
 8000bac:	81c2      	strh	r2, [r0, #14]
 8000bae:	6183      	str	r3, [r0, #24]
 8000bb0:	4619      	mov	r1, r3
 8000bb2:	2208      	movs	r2, #8
 8000bb4:	305c      	adds	r0, #92	; 0x5c
 8000bb6:	f000 f9a3 	bl	8000f00 <memset>
 8000bba:	4b0d      	ldr	r3, [pc, #52]	; (8000bf0 <std+0x58>)
 8000bbc:	6263      	str	r3, [r4, #36]	; 0x24
 8000bbe:	4b0d      	ldr	r3, [pc, #52]	; (8000bf4 <std+0x5c>)
 8000bc0:	62a3      	str	r3, [r4, #40]	; 0x28
 8000bc2:	4b0d      	ldr	r3, [pc, #52]	; (8000bf8 <std+0x60>)
 8000bc4:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000bc6:	4b0d      	ldr	r3, [pc, #52]	; (8000bfc <std+0x64>)
 8000bc8:	6323      	str	r3, [r4, #48]	; 0x30
 8000bca:	4b0d      	ldr	r3, [pc, #52]	; (8000c00 <std+0x68>)
 8000bcc:	6224      	str	r4, [r4, #32]
 8000bce:	429c      	cmp	r4, r3
 8000bd0:	d006      	beq.n	8000be0 <std+0x48>
 8000bd2:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8000bd6:	4294      	cmp	r4, r2
 8000bd8:	d002      	beq.n	8000be0 <std+0x48>
 8000bda:	33d0      	adds	r3, #208	; 0xd0
 8000bdc:	429c      	cmp	r4, r3
 8000bde:	d105      	bne.n	8000bec <std+0x54>
 8000be0:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000be4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000be8:	f000 b9fc 	b.w	8000fe4 <__retarget_lock_init_recursive>
 8000bec:	bd10      	pop	{r4, pc}
 8000bee:	bf00      	nop
 8000bf0:	08000d51 	.word	0x08000d51
 8000bf4:	08000d73 	.word	0x08000d73
 8000bf8:	08000dab 	.word	0x08000dab
 8000bfc:	08000dcf 	.word	0x08000dcf
 8000c00:	2000007c 	.word	0x2000007c

08000c04 <stdio_exit_handler>:
 8000c04:	4a02      	ldr	r2, [pc, #8]	; (8000c10 <stdio_exit_handler+0xc>)
 8000c06:	4903      	ldr	r1, [pc, #12]	; (8000c14 <stdio_exit_handler+0x10>)
 8000c08:	4803      	ldr	r0, [pc, #12]	; (8000c18 <stdio_exit_handler+0x14>)
 8000c0a:	f000 b869 	b.w	8000ce0 <_fwalk_sglue>
 8000c0e:	bf00      	nop
 8000c10:	20000004 	.word	0x20000004
 8000c14:	080012e9 	.word	0x080012e9
 8000c18:	20000010 	.word	0x20000010

08000c1c <cleanup_stdio>:
 8000c1c:	6841      	ldr	r1, [r0, #4]
 8000c1e:	4b0c      	ldr	r3, [pc, #48]	; (8000c50 <cleanup_stdio+0x34>)
 8000c20:	4299      	cmp	r1, r3
 8000c22:	b510      	push	{r4, lr}
 8000c24:	4604      	mov	r4, r0
 8000c26:	d001      	beq.n	8000c2c <cleanup_stdio+0x10>
 8000c28:	f000 fb5e 	bl	80012e8 <_fflush_r>
 8000c2c:	68a1      	ldr	r1, [r4, #8]
 8000c2e:	4b09      	ldr	r3, [pc, #36]	; (8000c54 <cleanup_stdio+0x38>)
 8000c30:	4299      	cmp	r1, r3
 8000c32:	d002      	beq.n	8000c3a <cleanup_stdio+0x1e>
 8000c34:	4620      	mov	r0, r4
 8000c36:	f000 fb57 	bl	80012e8 <_fflush_r>
 8000c3a:	68e1      	ldr	r1, [r4, #12]
 8000c3c:	4b06      	ldr	r3, [pc, #24]	; (8000c58 <cleanup_stdio+0x3c>)
 8000c3e:	4299      	cmp	r1, r3
 8000c40:	d004      	beq.n	8000c4c <cleanup_stdio+0x30>
 8000c42:	4620      	mov	r0, r4
 8000c44:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000c48:	f000 bb4e 	b.w	80012e8 <_fflush_r>
 8000c4c:	bd10      	pop	{r4, pc}
 8000c4e:	bf00      	nop
 8000c50:	2000007c 	.word	0x2000007c
 8000c54:	200000e4 	.word	0x200000e4
 8000c58:	2000014c 	.word	0x2000014c

08000c5c <global_stdio_init.part.0>:
 8000c5c:	b510      	push	{r4, lr}
 8000c5e:	4b0b      	ldr	r3, [pc, #44]	; (8000c8c <global_stdio_init.part.0+0x30>)
 8000c60:	4c0b      	ldr	r4, [pc, #44]	; (8000c90 <global_stdio_init.part.0+0x34>)
 8000c62:	4a0c      	ldr	r2, [pc, #48]	; (8000c94 <global_stdio_init.part.0+0x38>)
 8000c64:	601a      	str	r2, [r3, #0]
 8000c66:	4620      	mov	r0, r4
 8000c68:	2200      	movs	r2, #0
 8000c6a:	2104      	movs	r1, #4
 8000c6c:	f7ff ff94 	bl	8000b98 <std>
 8000c70:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8000c74:	2201      	movs	r2, #1
 8000c76:	2109      	movs	r1, #9
 8000c78:	f7ff ff8e 	bl	8000b98 <std>
 8000c7c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8000c80:	2202      	movs	r2, #2
 8000c82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000c86:	2112      	movs	r1, #18
 8000c88:	f7ff bf86 	b.w	8000b98 <std>
 8000c8c:	200001b4 	.word	0x200001b4
 8000c90:	2000007c 	.word	0x2000007c
 8000c94:	08000c05 	.word	0x08000c05

08000c98 <__sfp_lock_acquire>:
 8000c98:	4801      	ldr	r0, [pc, #4]	; (8000ca0 <__sfp_lock_acquire+0x8>)
 8000c9a:	f000 b9a4 	b.w	8000fe6 <__retarget_lock_acquire_recursive>
 8000c9e:	bf00      	nop
 8000ca0:	200001bd 	.word	0x200001bd

08000ca4 <__sfp_lock_release>:
 8000ca4:	4801      	ldr	r0, [pc, #4]	; (8000cac <__sfp_lock_release+0x8>)
 8000ca6:	f000 b99f 	b.w	8000fe8 <__retarget_lock_release_recursive>
 8000caa:	bf00      	nop
 8000cac:	200001bd 	.word	0x200001bd

08000cb0 <__sinit>:
 8000cb0:	b510      	push	{r4, lr}
 8000cb2:	4604      	mov	r4, r0
 8000cb4:	f7ff fff0 	bl	8000c98 <__sfp_lock_acquire>
 8000cb8:	6a23      	ldr	r3, [r4, #32]
 8000cba:	b11b      	cbz	r3, 8000cc4 <__sinit+0x14>
 8000cbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000cc0:	f7ff bff0 	b.w	8000ca4 <__sfp_lock_release>
 8000cc4:	4b04      	ldr	r3, [pc, #16]	; (8000cd8 <__sinit+0x28>)
 8000cc6:	6223      	str	r3, [r4, #32]
 8000cc8:	4b04      	ldr	r3, [pc, #16]	; (8000cdc <__sinit+0x2c>)
 8000cca:	681b      	ldr	r3, [r3, #0]
 8000ccc:	2b00      	cmp	r3, #0
 8000cce:	d1f5      	bne.n	8000cbc <__sinit+0xc>
 8000cd0:	f7ff ffc4 	bl	8000c5c <global_stdio_init.part.0>
 8000cd4:	e7f2      	b.n	8000cbc <__sinit+0xc>
 8000cd6:	bf00      	nop
 8000cd8:	08000c1d 	.word	0x08000c1d
 8000cdc:	200001b4 	.word	0x200001b4

08000ce0 <_fwalk_sglue>:
 8000ce0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000ce4:	4607      	mov	r7, r0
 8000ce6:	4688      	mov	r8, r1
 8000ce8:	4614      	mov	r4, r2
 8000cea:	2600      	movs	r6, #0
 8000cec:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000cf0:	f1b9 0901 	subs.w	r9, r9, #1
 8000cf4:	d505      	bpl.n	8000d02 <_fwalk_sglue+0x22>
 8000cf6:	6824      	ldr	r4, [r4, #0]
 8000cf8:	2c00      	cmp	r4, #0
 8000cfa:	d1f7      	bne.n	8000cec <_fwalk_sglue+0xc>
 8000cfc:	4630      	mov	r0, r6
 8000cfe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000d02:	89ab      	ldrh	r3, [r5, #12]
 8000d04:	2b01      	cmp	r3, #1
 8000d06:	d907      	bls.n	8000d18 <_fwalk_sglue+0x38>
 8000d08:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000d0c:	3301      	adds	r3, #1
 8000d0e:	d003      	beq.n	8000d18 <_fwalk_sglue+0x38>
 8000d10:	4629      	mov	r1, r5
 8000d12:	4638      	mov	r0, r7
 8000d14:	47c0      	blx	r8
 8000d16:	4306      	orrs	r6, r0
 8000d18:	3568      	adds	r5, #104	; 0x68
 8000d1a:	e7e9      	b.n	8000cf0 <_fwalk_sglue+0x10>

08000d1c <iprintf>:
 8000d1c:	b40f      	push	{r0, r1, r2, r3}
 8000d1e:	b507      	push	{r0, r1, r2, lr}
 8000d20:	4906      	ldr	r1, [pc, #24]	; (8000d3c <iprintf+0x20>)
 8000d22:	ab04      	add	r3, sp, #16
 8000d24:	6808      	ldr	r0, [r1, #0]
 8000d26:	f853 2b04 	ldr.w	r2, [r3], #4
 8000d2a:	6881      	ldr	r1, [r0, #8]
 8000d2c:	9301      	str	r3, [sp, #4]
 8000d2e:	f7ff fc7f 	bl	8000630 <_vfiprintf_r>
 8000d32:	b003      	add	sp, #12
 8000d34:	f85d eb04 	ldr.w	lr, [sp], #4
 8000d38:	b004      	add	sp, #16
 8000d3a:	4770      	bx	lr
 8000d3c:	2000005c 	.word	0x2000005c

08000d40 <putchar>:
 8000d40:	4b02      	ldr	r3, [pc, #8]	; (8000d4c <putchar+0xc>)
 8000d42:	4601      	mov	r1, r0
 8000d44:	6818      	ldr	r0, [r3, #0]
 8000d46:	6882      	ldr	r2, [r0, #8]
 8000d48:	f000 bb58 	b.w	80013fc <_putc_r>
 8000d4c:	2000005c 	.word	0x2000005c

08000d50 <__sread>:
 8000d50:	b510      	push	{r4, lr}
 8000d52:	460c      	mov	r4, r1
 8000d54:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d58:	f000 f8fc 	bl	8000f54 <_read_r>
 8000d5c:	2800      	cmp	r0, #0
 8000d5e:	bfab      	itete	ge
 8000d60:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000d62:	89a3      	ldrhlt	r3, [r4, #12]
 8000d64:	181b      	addge	r3, r3, r0
 8000d66:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000d6a:	bfac      	ite	ge
 8000d6c:	6563      	strge	r3, [r4, #84]	; 0x54
 8000d6e:	81a3      	strhlt	r3, [r4, #12]
 8000d70:	bd10      	pop	{r4, pc}

08000d72 <__swrite>:
 8000d72:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000d76:	461f      	mov	r7, r3
 8000d78:	898b      	ldrh	r3, [r1, #12]
 8000d7a:	05db      	lsls	r3, r3, #23
 8000d7c:	4605      	mov	r5, r0
 8000d7e:	460c      	mov	r4, r1
 8000d80:	4616      	mov	r6, r2
 8000d82:	d505      	bpl.n	8000d90 <__swrite+0x1e>
 8000d84:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d88:	2302      	movs	r3, #2
 8000d8a:	2200      	movs	r2, #0
 8000d8c:	f000 f8d0 	bl	8000f30 <_lseek_r>
 8000d90:	89a3      	ldrh	r3, [r4, #12]
 8000d92:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000d96:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000d9a:	81a3      	strh	r3, [r4, #12]
 8000d9c:	4632      	mov	r2, r6
 8000d9e:	463b      	mov	r3, r7
 8000da0:	4628      	mov	r0, r5
 8000da2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000da6:	f000 b8e7 	b.w	8000f78 <_write_r>

08000daa <__sseek>:
 8000daa:	b510      	push	{r4, lr}
 8000dac:	460c      	mov	r4, r1
 8000dae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000db2:	f000 f8bd 	bl	8000f30 <_lseek_r>
 8000db6:	1c43      	adds	r3, r0, #1
 8000db8:	89a3      	ldrh	r3, [r4, #12]
 8000dba:	bf15      	itete	ne
 8000dbc:	6560      	strne	r0, [r4, #84]	; 0x54
 8000dbe:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000dc2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000dc6:	81a3      	strheq	r3, [r4, #12]
 8000dc8:	bf18      	it	ne
 8000dca:	81a3      	strhne	r3, [r4, #12]
 8000dcc:	bd10      	pop	{r4, pc}

08000dce <__sclose>:
 8000dce:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000dd2:	f000 b89d 	b.w	8000f10 <_close_r>

08000dd6 <__swbuf_r>:
 8000dd6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000dd8:	460e      	mov	r6, r1
 8000dda:	4614      	mov	r4, r2
 8000ddc:	4605      	mov	r5, r0
 8000dde:	b118      	cbz	r0, 8000de8 <__swbuf_r+0x12>
 8000de0:	6a03      	ldr	r3, [r0, #32]
 8000de2:	b90b      	cbnz	r3, 8000de8 <__swbuf_r+0x12>
 8000de4:	f7ff ff64 	bl	8000cb0 <__sinit>
 8000de8:	69a3      	ldr	r3, [r4, #24]
 8000dea:	60a3      	str	r3, [r4, #8]
 8000dec:	89a3      	ldrh	r3, [r4, #12]
 8000dee:	071a      	lsls	r2, r3, #28
 8000df0:	d525      	bpl.n	8000e3e <__swbuf_r+0x68>
 8000df2:	6923      	ldr	r3, [r4, #16]
 8000df4:	b31b      	cbz	r3, 8000e3e <__swbuf_r+0x68>
 8000df6:	6823      	ldr	r3, [r4, #0]
 8000df8:	6922      	ldr	r2, [r4, #16]
 8000dfa:	1a98      	subs	r0, r3, r2
 8000dfc:	6963      	ldr	r3, [r4, #20]
 8000dfe:	b2f6      	uxtb	r6, r6
 8000e00:	4283      	cmp	r3, r0
 8000e02:	4637      	mov	r7, r6
 8000e04:	dc04      	bgt.n	8000e10 <__swbuf_r+0x3a>
 8000e06:	4621      	mov	r1, r4
 8000e08:	4628      	mov	r0, r5
 8000e0a:	f000 fa6d 	bl	80012e8 <_fflush_r>
 8000e0e:	b9e0      	cbnz	r0, 8000e4a <__swbuf_r+0x74>
 8000e10:	68a3      	ldr	r3, [r4, #8]
 8000e12:	3b01      	subs	r3, #1
 8000e14:	60a3      	str	r3, [r4, #8]
 8000e16:	6823      	ldr	r3, [r4, #0]
 8000e18:	1c5a      	adds	r2, r3, #1
 8000e1a:	6022      	str	r2, [r4, #0]
 8000e1c:	701e      	strb	r6, [r3, #0]
 8000e1e:	6962      	ldr	r2, [r4, #20]
 8000e20:	1c43      	adds	r3, r0, #1
 8000e22:	429a      	cmp	r2, r3
 8000e24:	d004      	beq.n	8000e30 <__swbuf_r+0x5a>
 8000e26:	89a3      	ldrh	r3, [r4, #12]
 8000e28:	07db      	lsls	r3, r3, #31
 8000e2a:	d506      	bpl.n	8000e3a <__swbuf_r+0x64>
 8000e2c:	2e0a      	cmp	r6, #10
 8000e2e:	d104      	bne.n	8000e3a <__swbuf_r+0x64>
 8000e30:	4621      	mov	r1, r4
 8000e32:	4628      	mov	r0, r5
 8000e34:	f000 fa58 	bl	80012e8 <_fflush_r>
 8000e38:	b938      	cbnz	r0, 8000e4a <__swbuf_r+0x74>
 8000e3a:	4638      	mov	r0, r7
 8000e3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000e3e:	4621      	mov	r1, r4
 8000e40:	4628      	mov	r0, r5
 8000e42:	f000 f805 	bl	8000e50 <__swsetup_r>
 8000e46:	2800      	cmp	r0, #0
 8000e48:	d0d5      	beq.n	8000df6 <__swbuf_r+0x20>
 8000e4a:	f04f 37ff 	mov.w	r7, #4294967295
 8000e4e:	e7f4      	b.n	8000e3a <__swbuf_r+0x64>

08000e50 <__swsetup_r>:
 8000e50:	b538      	push	{r3, r4, r5, lr}
 8000e52:	4b2a      	ldr	r3, [pc, #168]	; (8000efc <__swsetup_r+0xac>)
 8000e54:	4605      	mov	r5, r0
 8000e56:	6818      	ldr	r0, [r3, #0]
 8000e58:	460c      	mov	r4, r1
 8000e5a:	b118      	cbz	r0, 8000e64 <__swsetup_r+0x14>
 8000e5c:	6a03      	ldr	r3, [r0, #32]
 8000e5e:	b90b      	cbnz	r3, 8000e64 <__swsetup_r+0x14>
 8000e60:	f7ff ff26 	bl	8000cb0 <__sinit>
 8000e64:	89a3      	ldrh	r3, [r4, #12]
 8000e66:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000e6a:	0718      	lsls	r0, r3, #28
 8000e6c:	d422      	bmi.n	8000eb4 <__swsetup_r+0x64>
 8000e6e:	06d9      	lsls	r1, r3, #27
 8000e70:	d407      	bmi.n	8000e82 <__swsetup_r+0x32>
 8000e72:	2309      	movs	r3, #9
 8000e74:	602b      	str	r3, [r5, #0]
 8000e76:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000e7a:	81a3      	strh	r3, [r4, #12]
 8000e7c:	f04f 30ff 	mov.w	r0, #4294967295
 8000e80:	e034      	b.n	8000eec <__swsetup_r+0x9c>
 8000e82:	0758      	lsls	r0, r3, #29
 8000e84:	d512      	bpl.n	8000eac <__swsetup_r+0x5c>
 8000e86:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000e88:	b141      	cbz	r1, 8000e9c <__swsetup_r+0x4c>
 8000e8a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000e8e:	4299      	cmp	r1, r3
 8000e90:	d002      	beq.n	8000e98 <__swsetup_r+0x48>
 8000e92:	4628      	mov	r0, r5
 8000e94:	f000 f8aa 	bl	8000fec <_free_r>
 8000e98:	2300      	movs	r3, #0
 8000e9a:	6363      	str	r3, [r4, #52]	; 0x34
 8000e9c:	89a3      	ldrh	r3, [r4, #12]
 8000e9e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000ea2:	81a3      	strh	r3, [r4, #12]
 8000ea4:	2300      	movs	r3, #0
 8000ea6:	6063      	str	r3, [r4, #4]
 8000ea8:	6923      	ldr	r3, [r4, #16]
 8000eaa:	6023      	str	r3, [r4, #0]
 8000eac:	89a3      	ldrh	r3, [r4, #12]
 8000eae:	f043 0308 	orr.w	r3, r3, #8
 8000eb2:	81a3      	strh	r3, [r4, #12]
 8000eb4:	6923      	ldr	r3, [r4, #16]
 8000eb6:	b94b      	cbnz	r3, 8000ecc <__swsetup_r+0x7c>
 8000eb8:	89a3      	ldrh	r3, [r4, #12]
 8000eba:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000ebe:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000ec2:	d003      	beq.n	8000ecc <__swsetup_r+0x7c>
 8000ec4:	4621      	mov	r1, r4
 8000ec6:	4628      	mov	r0, r5
 8000ec8:	f000 fa5c 	bl	8001384 <__smakebuf_r>
 8000ecc:	89a0      	ldrh	r0, [r4, #12]
 8000ece:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000ed2:	f010 0301 	ands.w	r3, r0, #1
 8000ed6:	d00a      	beq.n	8000eee <__swsetup_r+0x9e>
 8000ed8:	2300      	movs	r3, #0
 8000eda:	60a3      	str	r3, [r4, #8]
 8000edc:	6963      	ldr	r3, [r4, #20]
 8000ede:	425b      	negs	r3, r3
 8000ee0:	61a3      	str	r3, [r4, #24]
 8000ee2:	6923      	ldr	r3, [r4, #16]
 8000ee4:	b943      	cbnz	r3, 8000ef8 <__swsetup_r+0xa8>
 8000ee6:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000eea:	d1c4      	bne.n	8000e76 <__swsetup_r+0x26>
 8000eec:	bd38      	pop	{r3, r4, r5, pc}
 8000eee:	0781      	lsls	r1, r0, #30
 8000ef0:	bf58      	it	pl
 8000ef2:	6963      	ldrpl	r3, [r4, #20]
 8000ef4:	60a3      	str	r3, [r4, #8]
 8000ef6:	e7f4      	b.n	8000ee2 <__swsetup_r+0x92>
 8000ef8:	2000      	movs	r0, #0
 8000efa:	e7f7      	b.n	8000eec <__swsetup_r+0x9c>
 8000efc:	2000005c 	.word	0x2000005c

08000f00 <memset>:
 8000f00:	4402      	add	r2, r0
 8000f02:	4603      	mov	r3, r0
 8000f04:	4293      	cmp	r3, r2
 8000f06:	d100      	bne.n	8000f0a <memset+0xa>
 8000f08:	4770      	bx	lr
 8000f0a:	f803 1b01 	strb.w	r1, [r3], #1
 8000f0e:	e7f9      	b.n	8000f04 <memset+0x4>

08000f10 <_close_r>:
 8000f10:	b538      	push	{r3, r4, r5, lr}
 8000f12:	4d06      	ldr	r5, [pc, #24]	; (8000f2c <_close_r+0x1c>)
 8000f14:	2300      	movs	r3, #0
 8000f16:	4604      	mov	r4, r0
 8000f18:	4608      	mov	r0, r1
 8000f1a:	602b      	str	r3, [r5, #0]
 8000f1c:	f000 fad4 	bl	80014c8 <_close>
 8000f20:	1c43      	adds	r3, r0, #1
 8000f22:	d102      	bne.n	8000f2a <_close_r+0x1a>
 8000f24:	682b      	ldr	r3, [r5, #0]
 8000f26:	b103      	cbz	r3, 8000f2a <_close_r+0x1a>
 8000f28:	6023      	str	r3, [r4, #0]
 8000f2a:	bd38      	pop	{r3, r4, r5, pc}
 8000f2c:	200001b8 	.word	0x200001b8

08000f30 <_lseek_r>:
 8000f30:	b538      	push	{r3, r4, r5, lr}
 8000f32:	4d07      	ldr	r5, [pc, #28]	; (8000f50 <_lseek_r+0x20>)
 8000f34:	4604      	mov	r4, r0
 8000f36:	4608      	mov	r0, r1
 8000f38:	4611      	mov	r1, r2
 8000f3a:	2200      	movs	r2, #0
 8000f3c:	602a      	str	r2, [r5, #0]
 8000f3e:	461a      	mov	r2, r3
 8000f40:	f000 fada 	bl	80014f8 <_lseek>
 8000f44:	1c43      	adds	r3, r0, #1
 8000f46:	d102      	bne.n	8000f4e <_lseek_r+0x1e>
 8000f48:	682b      	ldr	r3, [r5, #0]
 8000f4a:	b103      	cbz	r3, 8000f4e <_lseek_r+0x1e>
 8000f4c:	6023      	str	r3, [r4, #0]
 8000f4e:	bd38      	pop	{r3, r4, r5, pc}
 8000f50:	200001b8 	.word	0x200001b8

08000f54 <_read_r>:
 8000f54:	b538      	push	{r3, r4, r5, lr}
 8000f56:	4d07      	ldr	r5, [pc, #28]	; (8000f74 <_read_r+0x20>)
 8000f58:	4604      	mov	r4, r0
 8000f5a:	4608      	mov	r0, r1
 8000f5c:	4611      	mov	r1, r2
 8000f5e:	2200      	movs	r2, #0
 8000f60:	602a      	str	r2, [r5, #0]
 8000f62:	461a      	mov	r2, r3
 8000f64:	f000 fad0 	bl	8001508 <_read>
 8000f68:	1c43      	adds	r3, r0, #1
 8000f6a:	d102      	bne.n	8000f72 <_read_r+0x1e>
 8000f6c:	682b      	ldr	r3, [r5, #0]
 8000f6e:	b103      	cbz	r3, 8000f72 <_read_r+0x1e>
 8000f70:	6023      	str	r3, [r4, #0]
 8000f72:	bd38      	pop	{r3, r4, r5, pc}
 8000f74:	200001b8 	.word	0x200001b8

08000f78 <_write_r>:
 8000f78:	b538      	push	{r3, r4, r5, lr}
 8000f7a:	4d07      	ldr	r5, [pc, #28]	; (8000f98 <_write_r+0x20>)
 8000f7c:	4604      	mov	r4, r0
 8000f7e:	4608      	mov	r0, r1
 8000f80:	4611      	mov	r1, r2
 8000f82:	2200      	movs	r2, #0
 8000f84:	602a      	str	r2, [r5, #0]
 8000f86:	461a      	mov	r2, r3
 8000f88:	f7ff f999 	bl	80002be <_write>
 8000f8c:	1c43      	adds	r3, r0, #1
 8000f8e:	d102      	bne.n	8000f96 <_write_r+0x1e>
 8000f90:	682b      	ldr	r3, [r5, #0]
 8000f92:	b103      	cbz	r3, 8000f96 <_write_r+0x1e>
 8000f94:	6023      	str	r3, [r4, #0]
 8000f96:	bd38      	pop	{r3, r4, r5, pc}
 8000f98:	200001b8 	.word	0x200001b8

08000f9c <__libc_init_array>:
 8000f9c:	b570      	push	{r4, r5, r6, lr}
 8000f9e:	4d0d      	ldr	r5, [pc, #52]	; (8000fd4 <__libc_init_array+0x38>)
 8000fa0:	4c0d      	ldr	r4, [pc, #52]	; (8000fd8 <__libc_init_array+0x3c>)
 8000fa2:	1b64      	subs	r4, r4, r5
 8000fa4:	10a4      	asrs	r4, r4, #2
 8000fa6:	2600      	movs	r6, #0
 8000fa8:	42a6      	cmp	r6, r4
 8000faa:	d109      	bne.n	8000fc0 <__libc_init_array+0x24>
 8000fac:	4d0b      	ldr	r5, [pc, #44]	; (8000fdc <__libc_init_array+0x40>)
 8000fae:	4c0c      	ldr	r4, [pc, #48]	; (8000fe0 <__libc_init_array+0x44>)
 8000fb0:	f000 fac0 	bl	8001534 <_init>
 8000fb4:	1b64      	subs	r4, r4, r5
 8000fb6:	10a4      	asrs	r4, r4, #2
 8000fb8:	2600      	movs	r6, #0
 8000fba:	42a6      	cmp	r6, r4
 8000fbc:	d105      	bne.n	8000fca <__libc_init_array+0x2e>
 8000fbe:	bd70      	pop	{r4, r5, r6, pc}
 8000fc0:	f855 3b04 	ldr.w	r3, [r5], #4
 8000fc4:	4798      	blx	r3
 8000fc6:	3601      	adds	r6, #1
 8000fc8:	e7ee      	b.n	8000fa8 <__libc_init_array+0xc>
 8000fca:	f855 3b04 	ldr.w	r3, [r5], #4
 8000fce:	4798      	blx	r3
 8000fd0:	3601      	adds	r6, #1
 8000fd2:	e7f2      	b.n	8000fba <__libc_init_array+0x1e>
 8000fd4:	080015d4 	.word	0x080015d4
 8000fd8:	080015d4 	.word	0x080015d4
 8000fdc:	080015d4 	.word	0x080015d4
 8000fe0:	080015d8 	.word	0x080015d8

08000fe4 <__retarget_lock_init_recursive>:
 8000fe4:	4770      	bx	lr

08000fe6 <__retarget_lock_acquire_recursive>:
 8000fe6:	4770      	bx	lr

08000fe8 <__retarget_lock_release_recursive>:
 8000fe8:	4770      	bx	lr
	...

08000fec <_free_r>:
 8000fec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000fee:	2900      	cmp	r1, #0
 8000ff0:	d044      	beq.n	800107c <_free_r+0x90>
 8000ff2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000ff6:	9001      	str	r0, [sp, #4]
 8000ff8:	2b00      	cmp	r3, #0
 8000ffa:	f1a1 0404 	sub.w	r4, r1, #4
 8000ffe:	bfb8      	it	lt
 8001000:	18e4      	addlt	r4, r4, r3
 8001002:	f000 f8df 	bl	80011c4 <__malloc_lock>
 8001006:	4a1e      	ldr	r2, [pc, #120]	; (8001080 <_free_r+0x94>)
 8001008:	9801      	ldr	r0, [sp, #4]
 800100a:	6813      	ldr	r3, [r2, #0]
 800100c:	b933      	cbnz	r3, 800101c <_free_r+0x30>
 800100e:	6063      	str	r3, [r4, #4]
 8001010:	6014      	str	r4, [r2, #0]
 8001012:	b003      	add	sp, #12
 8001014:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8001018:	f000 b8da 	b.w	80011d0 <__malloc_unlock>
 800101c:	42a3      	cmp	r3, r4
 800101e:	d908      	bls.n	8001032 <_free_r+0x46>
 8001020:	6825      	ldr	r5, [r4, #0]
 8001022:	1961      	adds	r1, r4, r5
 8001024:	428b      	cmp	r3, r1
 8001026:	bf01      	itttt	eq
 8001028:	6819      	ldreq	r1, [r3, #0]
 800102a:	685b      	ldreq	r3, [r3, #4]
 800102c:	1949      	addeq	r1, r1, r5
 800102e:	6021      	streq	r1, [r4, #0]
 8001030:	e7ed      	b.n	800100e <_free_r+0x22>
 8001032:	461a      	mov	r2, r3
 8001034:	685b      	ldr	r3, [r3, #4]
 8001036:	b10b      	cbz	r3, 800103c <_free_r+0x50>
 8001038:	42a3      	cmp	r3, r4
 800103a:	d9fa      	bls.n	8001032 <_free_r+0x46>
 800103c:	6811      	ldr	r1, [r2, #0]
 800103e:	1855      	adds	r5, r2, r1
 8001040:	42a5      	cmp	r5, r4
 8001042:	d10b      	bne.n	800105c <_free_r+0x70>
 8001044:	6824      	ldr	r4, [r4, #0]
 8001046:	4421      	add	r1, r4
 8001048:	1854      	adds	r4, r2, r1
 800104a:	42a3      	cmp	r3, r4
 800104c:	6011      	str	r1, [r2, #0]
 800104e:	d1e0      	bne.n	8001012 <_free_r+0x26>
 8001050:	681c      	ldr	r4, [r3, #0]
 8001052:	685b      	ldr	r3, [r3, #4]
 8001054:	6053      	str	r3, [r2, #4]
 8001056:	440c      	add	r4, r1
 8001058:	6014      	str	r4, [r2, #0]
 800105a:	e7da      	b.n	8001012 <_free_r+0x26>
 800105c:	d902      	bls.n	8001064 <_free_r+0x78>
 800105e:	230c      	movs	r3, #12
 8001060:	6003      	str	r3, [r0, #0]
 8001062:	e7d6      	b.n	8001012 <_free_r+0x26>
 8001064:	6825      	ldr	r5, [r4, #0]
 8001066:	1961      	adds	r1, r4, r5
 8001068:	428b      	cmp	r3, r1
 800106a:	bf04      	itt	eq
 800106c:	6819      	ldreq	r1, [r3, #0]
 800106e:	685b      	ldreq	r3, [r3, #4]
 8001070:	6063      	str	r3, [r4, #4]
 8001072:	bf04      	itt	eq
 8001074:	1949      	addeq	r1, r1, r5
 8001076:	6021      	streq	r1, [r4, #0]
 8001078:	6054      	str	r4, [r2, #4]
 800107a:	e7ca      	b.n	8001012 <_free_r+0x26>
 800107c:	b003      	add	sp, #12
 800107e:	bd30      	pop	{r4, r5, pc}
 8001080:	200001c0 	.word	0x200001c0

08001084 <sbrk_aligned>:
 8001084:	b570      	push	{r4, r5, r6, lr}
 8001086:	4e0e      	ldr	r6, [pc, #56]	; (80010c0 <sbrk_aligned+0x3c>)
 8001088:	460c      	mov	r4, r1
 800108a:	6831      	ldr	r1, [r6, #0]
 800108c:	4605      	mov	r5, r0
 800108e:	b911      	cbnz	r1, 8001096 <sbrk_aligned+0x12>
 8001090:	f000 fa0a 	bl	80014a8 <_sbrk_r>
 8001094:	6030      	str	r0, [r6, #0]
 8001096:	4621      	mov	r1, r4
 8001098:	4628      	mov	r0, r5
 800109a:	f000 fa05 	bl	80014a8 <_sbrk_r>
 800109e:	1c43      	adds	r3, r0, #1
 80010a0:	d00a      	beq.n	80010b8 <sbrk_aligned+0x34>
 80010a2:	1cc4      	adds	r4, r0, #3
 80010a4:	f024 0403 	bic.w	r4, r4, #3
 80010a8:	42a0      	cmp	r0, r4
 80010aa:	d007      	beq.n	80010bc <sbrk_aligned+0x38>
 80010ac:	1a21      	subs	r1, r4, r0
 80010ae:	4628      	mov	r0, r5
 80010b0:	f000 f9fa 	bl	80014a8 <_sbrk_r>
 80010b4:	3001      	adds	r0, #1
 80010b6:	d101      	bne.n	80010bc <sbrk_aligned+0x38>
 80010b8:	f04f 34ff 	mov.w	r4, #4294967295
 80010bc:	4620      	mov	r0, r4
 80010be:	bd70      	pop	{r4, r5, r6, pc}
 80010c0:	200001c4 	.word	0x200001c4

080010c4 <_malloc_r>:
 80010c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80010c8:	1ccd      	adds	r5, r1, #3
 80010ca:	f025 0503 	bic.w	r5, r5, #3
 80010ce:	3508      	adds	r5, #8
 80010d0:	2d0c      	cmp	r5, #12
 80010d2:	bf38      	it	cc
 80010d4:	250c      	movcc	r5, #12
 80010d6:	2d00      	cmp	r5, #0
 80010d8:	4607      	mov	r7, r0
 80010da:	db01      	blt.n	80010e0 <_malloc_r+0x1c>
 80010dc:	42a9      	cmp	r1, r5
 80010de:	d905      	bls.n	80010ec <_malloc_r+0x28>
 80010e0:	230c      	movs	r3, #12
 80010e2:	603b      	str	r3, [r7, #0]
 80010e4:	2600      	movs	r6, #0
 80010e6:	4630      	mov	r0, r6
 80010e8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80010ec:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 80011c0 <_malloc_r+0xfc>
 80010f0:	f000 f868 	bl	80011c4 <__malloc_lock>
 80010f4:	f8d8 3000 	ldr.w	r3, [r8]
 80010f8:	461c      	mov	r4, r3
 80010fa:	bb5c      	cbnz	r4, 8001154 <_malloc_r+0x90>
 80010fc:	4629      	mov	r1, r5
 80010fe:	4638      	mov	r0, r7
 8001100:	f7ff ffc0 	bl	8001084 <sbrk_aligned>
 8001104:	1c43      	adds	r3, r0, #1
 8001106:	4604      	mov	r4, r0
 8001108:	d155      	bne.n	80011b6 <_malloc_r+0xf2>
 800110a:	f8d8 4000 	ldr.w	r4, [r8]
 800110e:	4626      	mov	r6, r4
 8001110:	2e00      	cmp	r6, #0
 8001112:	d145      	bne.n	80011a0 <_malloc_r+0xdc>
 8001114:	2c00      	cmp	r4, #0
 8001116:	d048      	beq.n	80011aa <_malloc_r+0xe6>
 8001118:	6823      	ldr	r3, [r4, #0]
 800111a:	4631      	mov	r1, r6
 800111c:	4638      	mov	r0, r7
 800111e:	eb04 0903 	add.w	r9, r4, r3
 8001122:	f000 f9c1 	bl	80014a8 <_sbrk_r>
 8001126:	4581      	cmp	r9, r0
 8001128:	d13f      	bne.n	80011aa <_malloc_r+0xe6>
 800112a:	6821      	ldr	r1, [r4, #0]
 800112c:	1a6d      	subs	r5, r5, r1
 800112e:	4629      	mov	r1, r5
 8001130:	4638      	mov	r0, r7
 8001132:	f7ff ffa7 	bl	8001084 <sbrk_aligned>
 8001136:	3001      	adds	r0, #1
 8001138:	d037      	beq.n	80011aa <_malloc_r+0xe6>
 800113a:	6823      	ldr	r3, [r4, #0]
 800113c:	442b      	add	r3, r5
 800113e:	6023      	str	r3, [r4, #0]
 8001140:	f8d8 3000 	ldr.w	r3, [r8]
 8001144:	2b00      	cmp	r3, #0
 8001146:	d038      	beq.n	80011ba <_malloc_r+0xf6>
 8001148:	685a      	ldr	r2, [r3, #4]
 800114a:	42a2      	cmp	r2, r4
 800114c:	d12b      	bne.n	80011a6 <_malloc_r+0xe2>
 800114e:	2200      	movs	r2, #0
 8001150:	605a      	str	r2, [r3, #4]
 8001152:	e00f      	b.n	8001174 <_malloc_r+0xb0>
 8001154:	6822      	ldr	r2, [r4, #0]
 8001156:	1b52      	subs	r2, r2, r5
 8001158:	d41f      	bmi.n	800119a <_malloc_r+0xd6>
 800115a:	2a0b      	cmp	r2, #11
 800115c:	d917      	bls.n	800118e <_malloc_r+0xca>
 800115e:	1961      	adds	r1, r4, r5
 8001160:	42a3      	cmp	r3, r4
 8001162:	6025      	str	r5, [r4, #0]
 8001164:	bf18      	it	ne
 8001166:	6059      	strne	r1, [r3, #4]
 8001168:	6863      	ldr	r3, [r4, #4]
 800116a:	bf08      	it	eq
 800116c:	f8c8 1000 	streq.w	r1, [r8]
 8001170:	5162      	str	r2, [r4, r5]
 8001172:	604b      	str	r3, [r1, #4]
 8001174:	4638      	mov	r0, r7
 8001176:	f104 060b 	add.w	r6, r4, #11
 800117a:	f000 f829 	bl	80011d0 <__malloc_unlock>
 800117e:	f026 0607 	bic.w	r6, r6, #7
 8001182:	1d23      	adds	r3, r4, #4
 8001184:	1af2      	subs	r2, r6, r3
 8001186:	d0ae      	beq.n	80010e6 <_malloc_r+0x22>
 8001188:	1b9b      	subs	r3, r3, r6
 800118a:	50a3      	str	r3, [r4, r2]
 800118c:	e7ab      	b.n	80010e6 <_malloc_r+0x22>
 800118e:	42a3      	cmp	r3, r4
 8001190:	6862      	ldr	r2, [r4, #4]
 8001192:	d1dd      	bne.n	8001150 <_malloc_r+0x8c>
 8001194:	f8c8 2000 	str.w	r2, [r8]
 8001198:	e7ec      	b.n	8001174 <_malloc_r+0xb0>
 800119a:	4623      	mov	r3, r4
 800119c:	6864      	ldr	r4, [r4, #4]
 800119e:	e7ac      	b.n	80010fa <_malloc_r+0x36>
 80011a0:	4634      	mov	r4, r6
 80011a2:	6876      	ldr	r6, [r6, #4]
 80011a4:	e7b4      	b.n	8001110 <_malloc_r+0x4c>
 80011a6:	4613      	mov	r3, r2
 80011a8:	e7cc      	b.n	8001144 <_malloc_r+0x80>
 80011aa:	230c      	movs	r3, #12
 80011ac:	603b      	str	r3, [r7, #0]
 80011ae:	4638      	mov	r0, r7
 80011b0:	f000 f80e 	bl	80011d0 <__malloc_unlock>
 80011b4:	e797      	b.n	80010e6 <_malloc_r+0x22>
 80011b6:	6025      	str	r5, [r4, #0]
 80011b8:	e7dc      	b.n	8001174 <_malloc_r+0xb0>
 80011ba:	605b      	str	r3, [r3, #4]
 80011bc:	deff      	udf	#255	; 0xff
 80011be:	bf00      	nop
 80011c0:	200001c0 	.word	0x200001c0

080011c4 <__malloc_lock>:
 80011c4:	4801      	ldr	r0, [pc, #4]	; (80011cc <__malloc_lock+0x8>)
 80011c6:	f7ff bf0e 	b.w	8000fe6 <__retarget_lock_acquire_recursive>
 80011ca:	bf00      	nop
 80011cc:	200001bc 	.word	0x200001bc

080011d0 <__malloc_unlock>:
 80011d0:	4801      	ldr	r0, [pc, #4]	; (80011d8 <__malloc_unlock+0x8>)
 80011d2:	f7ff bf09 	b.w	8000fe8 <__retarget_lock_release_recursive>
 80011d6:	bf00      	nop
 80011d8:	200001bc 	.word	0x200001bc

080011dc <__sflush_r>:
 80011dc:	898a      	ldrh	r2, [r1, #12]
 80011de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80011e2:	4605      	mov	r5, r0
 80011e4:	0710      	lsls	r0, r2, #28
 80011e6:	460c      	mov	r4, r1
 80011e8:	d458      	bmi.n	800129c <__sflush_r+0xc0>
 80011ea:	684b      	ldr	r3, [r1, #4]
 80011ec:	2b00      	cmp	r3, #0
 80011ee:	dc05      	bgt.n	80011fc <__sflush_r+0x20>
 80011f0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80011f2:	2b00      	cmp	r3, #0
 80011f4:	dc02      	bgt.n	80011fc <__sflush_r+0x20>
 80011f6:	2000      	movs	r0, #0
 80011f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80011fc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80011fe:	2e00      	cmp	r6, #0
 8001200:	d0f9      	beq.n	80011f6 <__sflush_r+0x1a>
 8001202:	2300      	movs	r3, #0
 8001204:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001208:	682f      	ldr	r7, [r5, #0]
 800120a:	6a21      	ldr	r1, [r4, #32]
 800120c:	602b      	str	r3, [r5, #0]
 800120e:	d032      	beq.n	8001276 <__sflush_r+0x9a>
 8001210:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001212:	89a3      	ldrh	r3, [r4, #12]
 8001214:	075a      	lsls	r2, r3, #29
 8001216:	d505      	bpl.n	8001224 <__sflush_r+0x48>
 8001218:	6863      	ldr	r3, [r4, #4]
 800121a:	1ac0      	subs	r0, r0, r3
 800121c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800121e:	b10b      	cbz	r3, 8001224 <__sflush_r+0x48>
 8001220:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001222:	1ac0      	subs	r0, r0, r3
 8001224:	2300      	movs	r3, #0
 8001226:	4602      	mov	r2, r0
 8001228:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800122a:	6a21      	ldr	r1, [r4, #32]
 800122c:	4628      	mov	r0, r5
 800122e:	47b0      	blx	r6
 8001230:	1c43      	adds	r3, r0, #1
 8001232:	89a3      	ldrh	r3, [r4, #12]
 8001234:	d106      	bne.n	8001244 <__sflush_r+0x68>
 8001236:	6829      	ldr	r1, [r5, #0]
 8001238:	291d      	cmp	r1, #29
 800123a:	d82b      	bhi.n	8001294 <__sflush_r+0xb8>
 800123c:	4a29      	ldr	r2, [pc, #164]	; (80012e4 <__sflush_r+0x108>)
 800123e:	410a      	asrs	r2, r1
 8001240:	07d6      	lsls	r6, r2, #31
 8001242:	d427      	bmi.n	8001294 <__sflush_r+0xb8>
 8001244:	2200      	movs	r2, #0
 8001246:	6062      	str	r2, [r4, #4]
 8001248:	04d9      	lsls	r1, r3, #19
 800124a:	6922      	ldr	r2, [r4, #16]
 800124c:	6022      	str	r2, [r4, #0]
 800124e:	d504      	bpl.n	800125a <__sflush_r+0x7e>
 8001250:	1c42      	adds	r2, r0, #1
 8001252:	d101      	bne.n	8001258 <__sflush_r+0x7c>
 8001254:	682b      	ldr	r3, [r5, #0]
 8001256:	b903      	cbnz	r3, 800125a <__sflush_r+0x7e>
 8001258:	6560      	str	r0, [r4, #84]	; 0x54
 800125a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800125c:	602f      	str	r7, [r5, #0]
 800125e:	2900      	cmp	r1, #0
 8001260:	d0c9      	beq.n	80011f6 <__sflush_r+0x1a>
 8001262:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001266:	4299      	cmp	r1, r3
 8001268:	d002      	beq.n	8001270 <__sflush_r+0x94>
 800126a:	4628      	mov	r0, r5
 800126c:	f7ff febe 	bl	8000fec <_free_r>
 8001270:	2000      	movs	r0, #0
 8001272:	6360      	str	r0, [r4, #52]	; 0x34
 8001274:	e7c0      	b.n	80011f8 <__sflush_r+0x1c>
 8001276:	2301      	movs	r3, #1
 8001278:	4628      	mov	r0, r5
 800127a:	47b0      	blx	r6
 800127c:	1c41      	adds	r1, r0, #1
 800127e:	d1c8      	bne.n	8001212 <__sflush_r+0x36>
 8001280:	682b      	ldr	r3, [r5, #0]
 8001282:	2b00      	cmp	r3, #0
 8001284:	d0c5      	beq.n	8001212 <__sflush_r+0x36>
 8001286:	2b1d      	cmp	r3, #29
 8001288:	d001      	beq.n	800128e <__sflush_r+0xb2>
 800128a:	2b16      	cmp	r3, #22
 800128c:	d101      	bne.n	8001292 <__sflush_r+0xb6>
 800128e:	602f      	str	r7, [r5, #0]
 8001290:	e7b1      	b.n	80011f6 <__sflush_r+0x1a>
 8001292:	89a3      	ldrh	r3, [r4, #12]
 8001294:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001298:	81a3      	strh	r3, [r4, #12]
 800129a:	e7ad      	b.n	80011f8 <__sflush_r+0x1c>
 800129c:	690f      	ldr	r7, [r1, #16]
 800129e:	2f00      	cmp	r7, #0
 80012a0:	d0a9      	beq.n	80011f6 <__sflush_r+0x1a>
 80012a2:	0793      	lsls	r3, r2, #30
 80012a4:	680e      	ldr	r6, [r1, #0]
 80012a6:	bf08      	it	eq
 80012a8:	694b      	ldreq	r3, [r1, #20]
 80012aa:	600f      	str	r7, [r1, #0]
 80012ac:	bf18      	it	ne
 80012ae:	2300      	movne	r3, #0
 80012b0:	eba6 0807 	sub.w	r8, r6, r7
 80012b4:	608b      	str	r3, [r1, #8]
 80012b6:	f1b8 0f00 	cmp.w	r8, #0
 80012ba:	dd9c      	ble.n	80011f6 <__sflush_r+0x1a>
 80012bc:	6a21      	ldr	r1, [r4, #32]
 80012be:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80012c0:	4643      	mov	r3, r8
 80012c2:	463a      	mov	r2, r7
 80012c4:	4628      	mov	r0, r5
 80012c6:	47b0      	blx	r6
 80012c8:	2800      	cmp	r0, #0
 80012ca:	dc06      	bgt.n	80012da <__sflush_r+0xfe>
 80012cc:	89a3      	ldrh	r3, [r4, #12]
 80012ce:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80012d2:	81a3      	strh	r3, [r4, #12]
 80012d4:	f04f 30ff 	mov.w	r0, #4294967295
 80012d8:	e78e      	b.n	80011f8 <__sflush_r+0x1c>
 80012da:	4407      	add	r7, r0
 80012dc:	eba8 0800 	sub.w	r8, r8, r0
 80012e0:	e7e9      	b.n	80012b6 <__sflush_r+0xda>
 80012e2:	bf00      	nop
 80012e4:	dfbffffe 	.word	0xdfbffffe

080012e8 <_fflush_r>:
 80012e8:	b538      	push	{r3, r4, r5, lr}
 80012ea:	690b      	ldr	r3, [r1, #16]
 80012ec:	4605      	mov	r5, r0
 80012ee:	460c      	mov	r4, r1
 80012f0:	b913      	cbnz	r3, 80012f8 <_fflush_r+0x10>
 80012f2:	2500      	movs	r5, #0
 80012f4:	4628      	mov	r0, r5
 80012f6:	bd38      	pop	{r3, r4, r5, pc}
 80012f8:	b118      	cbz	r0, 8001302 <_fflush_r+0x1a>
 80012fa:	6a03      	ldr	r3, [r0, #32]
 80012fc:	b90b      	cbnz	r3, 8001302 <_fflush_r+0x1a>
 80012fe:	f7ff fcd7 	bl	8000cb0 <__sinit>
 8001302:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001306:	2b00      	cmp	r3, #0
 8001308:	d0f3      	beq.n	80012f2 <_fflush_r+0xa>
 800130a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800130c:	07d0      	lsls	r0, r2, #31
 800130e:	d404      	bmi.n	800131a <_fflush_r+0x32>
 8001310:	0599      	lsls	r1, r3, #22
 8001312:	d402      	bmi.n	800131a <_fflush_r+0x32>
 8001314:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001316:	f7ff fe66 	bl	8000fe6 <__retarget_lock_acquire_recursive>
 800131a:	4628      	mov	r0, r5
 800131c:	4621      	mov	r1, r4
 800131e:	f7ff ff5d 	bl	80011dc <__sflush_r>
 8001322:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001324:	07da      	lsls	r2, r3, #31
 8001326:	4605      	mov	r5, r0
 8001328:	d4e4      	bmi.n	80012f4 <_fflush_r+0xc>
 800132a:	89a3      	ldrh	r3, [r4, #12]
 800132c:	059b      	lsls	r3, r3, #22
 800132e:	d4e1      	bmi.n	80012f4 <_fflush_r+0xc>
 8001330:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001332:	f7ff fe59 	bl	8000fe8 <__retarget_lock_release_recursive>
 8001336:	e7dd      	b.n	80012f4 <_fflush_r+0xc>

08001338 <__swhatbuf_r>:
 8001338:	b570      	push	{r4, r5, r6, lr}
 800133a:	460c      	mov	r4, r1
 800133c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001340:	2900      	cmp	r1, #0
 8001342:	b096      	sub	sp, #88	; 0x58
 8001344:	4615      	mov	r5, r2
 8001346:	461e      	mov	r6, r3
 8001348:	da0d      	bge.n	8001366 <__swhatbuf_r+0x2e>
 800134a:	89a3      	ldrh	r3, [r4, #12]
 800134c:	f013 0f80 	tst.w	r3, #128	; 0x80
 8001350:	f04f 0100 	mov.w	r1, #0
 8001354:	bf0c      	ite	eq
 8001356:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 800135a:	2340      	movne	r3, #64	; 0x40
 800135c:	2000      	movs	r0, #0
 800135e:	6031      	str	r1, [r6, #0]
 8001360:	602b      	str	r3, [r5, #0]
 8001362:	b016      	add	sp, #88	; 0x58
 8001364:	bd70      	pop	{r4, r5, r6, pc}
 8001366:	466a      	mov	r2, sp
 8001368:	f000 f87c 	bl	8001464 <_fstat_r>
 800136c:	2800      	cmp	r0, #0
 800136e:	dbec      	blt.n	800134a <__swhatbuf_r+0x12>
 8001370:	9901      	ldr	r1, [sp, #4]
 8001372:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8001376:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 800137a:	4259      	negs	r1, r3
 800137c:	4159      	adcs	r1, r3
 800137e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001382:	e7eb      	b.n	800135c <__swhatbuf_r+0x24>

08001384 <__smakebuf_r>:
 8001384:	898b      	ldrh	r3, [r1, #12]
 8001386:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001388:	079d      	lsls	r5, r3, #30
 800138a:	4606      	mov	r6, r0
 800138c:	460c      	mov	r4, r1
 800138e:	d507      	bpl.n	80013a0 <__smakebuf_r+0x1c>
 8001390:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001394:	6023      	str	r3, [r4, #0]
 8001396:	6123      	str	r3, [r4, #16]
 8001398:	2301      	movs	r3, #1
 800139a:	6163      	str	r3, [r4, #20]
 800139c:	b002      	add	sp, #8
 800139e:	bd70      	pop	{r4, r5, r6, pc}
 80013a0:	ab01      	add	r3, sp, #4
 80013a2:	466a      	mov	r2, sp
 80013a4:	f7ff ffc8 	bl	8001338 <__swhatbuf_r>
 80013a8:	9900      	ldr	r1, [sp, #0]
 80013aa:	4605      	mov	r5, r0
 80013ac:	4630      	mov	r0, r6
 80013ae:	f7ff fe89 	bl	80010c4 <_malloc_r>
 80013b2:	b948      	cbnz	r0, 80013c8 <__smakebuf_r+0x44>
 80013b4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80013b8:	059a      	lsls	r2, r3, #22
 80013ba:	d4ef      	bmi.n	800139c <__smakebuf_r+0x18>
 80013bc:	f023 0303 	bic.w	r3, r3, #3
 80013c0:	f043 0302 	orr.w	r3, r3, #2
 80013c4:	81a3      	strh	r3, [r4, #12]
 80013c6:	e7e3      	b.n	8001390 <__smakebuf_r+0xc>
 80013c8:	89a3      	ldrh	r3, [r4, #12]
 80013ca:	6020      	str	r0, [r4, #0]
 80013cc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80013d0:	81a3      	strh	r3, [r4, #12]
 80013d2:	9b00      	ldr	r3, [sp, #0]
 80013d4:	6163      	str	r3, [r4, #20]
 80013d6:	9b01      	ldr	r3, [sp, #4]
 80013d8:	6120      	str	r0, [r4, #16]
 80013da:	b15b      	cbz	r3, 80013f4 <__smakebuf_r+0x70>
 80013dc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80013e0:	4630      	mov	r0, r6
 80013e2:	f000 f851 	bl	8001488 <_isatty_r>
 80013e6:	b128      	cbz	r0, 80013f4 <__smakebuf_r+0x70>
 80013e8:	89a3      	ldrh	r3, [r4, #12]
 80013ea:	f023 0303 	bic.w	r3, r3, #3
 80013ee:	f043 0301 	orr.w	r3, r3, #1
 80013f2:	81a3      	strh	r3, [r4, #12]
 80013f4:	89a3      	ldrh	r3, [r4, #12]
 80013f6:	431d      	orrs	r5, r3
 80013f8:	81a5      	strh	r5, [r4, #12]
 80013fa:	e7cf      	b.n	800139c <__smakebuf_r+0x18>

080013fc <_putc_r>:
 80013fc:	b570      	push	{r4, r5, r6, lr}
 80013fe:	460d      	mov	r5, r1
 8001400:	4614      	mov	r4, r2
 8001402:	4606      	mov	r6, r0
 8001404:	b118      	cbz	r0, 800140e <_putc_r+0x12>
 8001406:	6a03      	ldr	r3, [r0, #32]
 8001408:	b90b      	cbnz	r3, 800140e <_putc_r+0x12>
 800140a:	f7ff fc51 	bl	8000cb0 <__sinit>
 800140e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001410:	07d8      	lsls	r0, r3, #31
 8001412:	d405      	bmi.n	8001420 <_putc_r+0x24>
 8001414:	89a3      	ldrh	r3, [r4, #12]
 8001416:	0599      	lsls	r1, r3, #22
 8001418:	d402      	bmi.n	8001420 <_putc_r+0x24>
 800141a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800141c:	f7ff fde3 	bl	8000fe6 <__retarget_lock_acquire_recursive>
 8001420:	68a3      	ldr	r3, [r4, #8]
 8001422:	3b01      	subs	r3, #1
 8001424:	2b00      	cmp	r3, #0
 8001426:	60a3      	str	r3, [r4, #8]
 8001428:	da05      	bge.n	8001436 <_putc_r+0x3a>
 800142a:	69a2      	ldr	r2, [r4, #24]
 800142c:	4293      	cmp	r3, r2
 800142e:	db12      	blt.n	8001456 <_putc_r+0x5a>
 8001430:	b2eb      	uxtb	r3, r5
 8001432:	2b0a      	cmp	r3, #10
 8001434:	d00f      	beq.n	8001456 <_putc_r+0x5a>
 8001436:	6823      	ldr	r3, [r4, #0]
 8001438:	1c5a      	adds	r2, r3, #1
 800143a:	6022      	str	r2, [r4, #0]
 800143c:	701d      	strb	r5, [r3, #0]
 800143e:	b2ed      	uxtb	r5, r5
 8001440:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001442:	07da      	lsls	r2, r3, #31
 8001444:	d405      	bmi.n	8001452 <_putc_r+0x56>
 8001446:	89a3      	ldrh	r3, [r4, #12]
 8001448:	059b      	lsls	r3, r3, #22
 800144a:	d402      	bmi.n	8001452 <_putc_r+0x56>
 800144c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800144e:	f7ff fdcb 	bl	8000fe8 <__retarget_lock_release_recursive>
 8001452:	4628      	mov	r0, r5
 8001454:	bd70      	pop	{r4, r5, r6, pc}
 8001456:	4629      	mov	r1, r5
 8001458:	4622      	mov	r2, r4
 800145a:	4630      	mov	r0, r6
 800145c:	f7ff fcbb 	bl	8000dd6 <__swbuf_r>
 8001460:	4605      	mov	r5, r0
 8001462:	e7ed      	b.n	8001440 <_putc_r+0x44>

08001464 <_fstat_r>:
 8001464:	b538      	push	{r3, r4, r5, lr}
 8001466:	4d07      	ldr	r5, [pc, #28]	; (8001484 <_fstat_r+0x20>)
 8001468:	2300      	movs	r3, #0
 800146a:	4604      	mov	r4, r0
 800146c:	4608      	mov	r0, r1
 800146e:	4611      	mov	r1, r2
 8001470:	602b      	str	r3, [r5, #0]
 8001472:	f000 f831 	bl	80014d8 <_fstat>
 8001476:	1c43      	adds	r3, r0, #1
 8001478:	d102      	bne.n	8001480 <_fstat_r+0x1c>
 800147a:	682b      	ldr	r3, [r5, #0]
 800147c:	b103      	cbz	r3, 8001480 <_fstat_r+0x1c>
 800147e:	6023      	str	r3, [r4, #0]
 8001480:	bd38      	pop	{r3, r4, r5, pc}
 8001482:	bf00      	nop
 8001484:	200001b8 	.word	0x200001b8

08001488 <_isatty_r>:
 8001488:	b538      	push	{r3, r4, r5, lr}
 800148a:	4d06      	ldr	r5, [pc, #24]	; (80014a4 <_isatty_r+0x1c>)
 800148c:	2300      	movs	r3, #0
 800148e:	4604      	mov	r4, r0
 8001490:	4608      	mov	r0, r1
 8001492:	602b      	str	r3, [r5, #0]
 8001494:	f000 f828 	bl	80014e8 <_isatty>
 8001498:	1c43      	adds	r3, r0, #1
 800149a:	d102      	bne.n	80014a2 <_isatty_r+0x1a>
 800149c:	682b      	ldr	r3, [r5, #0]
 800149e:	b103      	cbz	r3, 80014a2 <_isatty_r+0x1a>
 80014a0:	6023      	str	r3, [r4, #0]
 80014a2:	bd38      	pop	{r3, r4, r5, pc}
 80014a4:	200001b8 	.word	0x200001b8

080014a8 <_sbrk_r>:
 80014a8:	b538      	push	{r3, r4, r5, lr}
 80014aa:	4d06      	ldr	r5, [pc, #24]	; (80014c4 <_sbrk_r+0x1c>)
 80014ac:	2300      	movs	r3, #0
 80014ae:	4604      	mov	r4, r0
 80014b0:	4608      	mov	r0, r1
 80014b2:	602b      	str	r3, [r5, #0]
 80014b4:	f000 f830 	bl	8001518 <_sbrk>
 80014b8:	1c43      	adds	r3, r0, #1
 80014ba:	d102      	bne.n	80014c2 <_sbrk_r+0x1a>
 80014bc:	682b      	ldr	r3, [r5, #0]
 80014be:	b103      	cbz	r3, 80014c2 <_sbrk_r+0x1a>
 80014c0:	6023      	str	r3, [r4, #0]
 80014c2:	bd38      	pop	{r3, r4, r5, pc}
 80014c4:	200001b8 	.word	0x200001b8

080014c8 <_close>:
 80014c8:	4b02      	ldr	r3, [pc, #8]	; (80014d4 <_close+0xc>)
 80014ca:	2258      	movs	r2, #88	; 0x58
 80014cc:	601a      	str	r2, [r3, #0]
 80014ce:	f04f 30ff 	mov.w	r0, #4294967295
 80014d2:	4770      	bx	lr
 80014d4:	200001b8 	.word	0x200001b8

080014d8 <_fstat>:
 80014d8:	4b02      	ldr	r3, [pc, #8]	; (80014e4 <_fstat+0xc>)
 80014da:	2258      	movs	r2, #88	; 0x58
 80014dc:	601a      	str	r2, [r3, #0]
 80014de:	f04f 30ff 	mov.w	r0, #4294967295
 80014e2:	4770      	bx	lr
 80014e4:	200001b8 	.word	0x200001b8

080014e8 <_isatty>:
 80014e8:	4b02      	ldr	r3, [pc, #8]	; (80014f4 <_isatty+0xc>)
 80014ea:	2258      	movs	r2, #88	; 0x58
 80014ec:	601a      	str	r2, [r3, #0]
 80014ee:	2000      	movs	r0, #0
 80014f0:	4770      	bx	lr
 80014f2:	bf00      	nop
 80014f4:	200001b8 	.word	0x200001b8

080014f8 <_lseek>:
 80014f8:	4b02      	ldr	r3, [pc, #8]	; (8001504 <_lseek+0xc>)
 80014fa:	2258      	movs	r2, #88	; 0x58
 80014fc:	601a      	str	r2, [r3, #0]
 80014fe:	f04f 30ff 	mov.w	r0, #4294967295
 8001502:	4770      	bx	lr
 8001504:	200001b8 	.word	0x200001b8

08001508 <_read>:
 8001508:	4b02      	ldr	r3, [pc, #8]	; (8001514 <_read+0xc>)
 800150a:	2258      	movs	r2, #88	; 0x58
 800150c:	601a      	str	r2, [r3, #0]
 800150e:	f04f 30ff 	mov.w	r0, #4294967295
 8001512:	4770      	bx	lr
 8001514:	200001b8 	.word	0x200001b8

08001518 <_sbrk>:
 8001518:	4a04      	ldr	r2, [pc, #16]	; (800152c <_sbrk+0x14>)
 800151a:	6811      	ldr	r1, [r2, #0]
 800151c:	4603      	mov	r3, r0
 800151e:	b909      	cbnz	r1, 8001524 <_sbrk+0xc>
 8001520:	4903      	ldr	r1, [pc, #12]	; (8001530 <_sbrk+0x18>)
 8001522:	6011      	str	r1, [r2, #0]
 8001524:	6810      	ldr	r0, [r2, #0]
 8001526:	4403      	add	r3, r0
 8001528:	6013      	str	r3, [r2, #0]
 800152a:	4770      	bx	lr
 800152c:	200001c8 	.word	0x200001c8
 8001530:	200001d0 	.word	0x200001d0

08001534 <_init>:
 8001534:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001536:	bf00      	nop
 8001538:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800153a:	bc08      	pop	{r3}
 800153c:	469e      	mov	lr, r3
 800153e:	4770      	bx	lr

08001540 <_fini>:
 8001540:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001542:	bf00      	nop
 8001544:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001546:	bc08      	pop	{r3}
 8001548:	469e      	mov	lr, r3
 800154a:	4770      	bx	lr
